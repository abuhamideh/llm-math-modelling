{
    "parametrized_description": "A party organizer needs to transport at least MinPeople people using limousines and buses. Each limousine can carry LimousineCapacity people and each bus can carry BusCapacity people. At least MinLimousineFraction of the vehicles used must be limousines. The objective is to minimize the total number of limousines and buses used.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "LimousineCapacity": {
            "description": "Number of people a limousine can carry",
            "shape": []
        },
        "BusCapacity": {
            "description": "Number of people a bus can carry",
            "shape": []
        },
        "MinPeople": {
            "description": "Minimum number of people to transport",
            "shape": []
        },
        "MinLimousineFraction": {
            "description": "Minimum fraction of vehicles that must be limousines",
            "shape": []
        }
    },
    "variables": {
        "NumLimousines": {
            "description": "The number of limousines used",
            "type": "continuous",
            "shape": [
                "Integer"
            ]
        },
        "PeopleLimousines": {
            "description": "The number of people assigned to limousines",
            "type": "continuous",
            "shape": [
                "Continuous"
            ]
        },
        "NumBuses": {
            "description": "The number of buses used",
            "type": "continuous",
            "shape": [
                "Integer"
            ]
        },
        "PeopleBuses": {
            "description": "The number of people assigned to buses",
            "type": "continuous",
            "shape": [
                "Continuous"
            ]
        }
    },
    "constraints": [
        {
            "description": "Each limousine can carry LimousineCapacity people.",
            "formulation": "PeopleLimousines \\leq LimousineCapacity \\times NumLimousines",
            "code": {
                "gurobipy": "model.addConstr(PeopleLimousines <= LimousineCapacity * NumLimousines)"
            }
        },
        {
            "description": "Each bus can carry BusCapacity people.",
            "formulation": "PeopleBuses \\leq NumBuses \\times BusCapacity",
            "code": {
                "gurobipy": "model.addConstr(PeopleBuses <= NumBuses * BusCapacity)"
            }
        },
        {
            "description": "The total number of people transported by limousines and buses must be at least MinPeople.",
            "formulation": "PeopleLimousines + PeopleBuses \\geq MinPeople",
            "code": {
                "gurobipy": "model.addConstr(PeopleLimousines + PeopleBuses >= MinPeople)"
            }
        },
        {
            "description": "At least MinLimousineFraction of the vehicles used must be limousines.",
            "formulation": "NumLimousines \\geq MinLimousineFraction \\times (NumLimousines + NumBuses)",
            "code": {
                "gurobipy": "model.addConstr(NumLimousines >= MinLimousineFraction * (NumLimousines + NumBuses))"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total number of limousines and buses used.",
        "formulation": "Min\\ (NumLimousines + NumBuses)",
        "code": {
            "gurobipy": "model.setObjective(NumLimousines + NumBuses, GRB.MINIMIZE)"
        }
    }
}