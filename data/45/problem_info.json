{
    "parametrized_description": "A farmer has TotalAcres of land on which hay must be processed using NumMachines different machine types. For each acre of land, machine type i can process HayProcessedPerAcre[i] units of hay, produce MethaneProducedPerAcre[i] units of methane gas, and require FuelRequiredPerAcre[i] units of fuel. The total fuel available is FuelAvailable, and the total methane production must not exceed MethaneLimit. The farmer aims to determine the number of acres to allocate to each machine type to maximize the total amount of hay processed.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "TotalAcres": {
            "description": "Total number of acres available for processing hay",
            "shape": []
        },
        "NumMachines": {
            "description": "Number of different machine types available for processing hay",
            "shape": []
        },
        "FuelAvailable": {
            "description": "Total amount of fuel available",
            "shape": []
        },
        "MethaneLimit": {
            "description": "Maximum allowable amount of methane gas production",
            "shape": []
        },
        "HayProcessedPerAcre": {
            "description": "Amount of hay processed per acre by each machine type",
            "shape": [
                "NumMachines"
            ]
        },
        "MethaneProducedPerAcre": {
            "description": "Amount of methane gas produced per acre by each machine type",
            "shape": [
                "NumMachines"
            ]
        },
        "FuelRequiredPerAcre": {
            "description": "Amount of fuel required per acre by each machine type",
            "shape": [
                "NumMachines"
            ]
        }
    },
    "variables": {
        "AcresAllocated": {
            "description": "The number of acres allocated to each machine type",
            "type": "continuous",
            "shape": [
                "NumMachines"
            ]
        }
    },
    "constraints": [
        {
            "description": "The total number of acres allocated to all machine types cannot exceed TotalAcres.",
            "formulation": "\\sum_{i=1}^{\\text{NumMachines}} \\text{AcresAllocated}_i \\leq \\text{TotalAcres}",
            "code": {
                "gurobipy": "model.addConstr(quicksum(AcresAllocated[i] for i in range(NumMachines)) <= TotalAcres)"
            }
        },
        {
            "description": "The total fuel required for processing, based on FuelRequiredPerAcre for each machine type, cannot exceed FuelAvailable.",
            "formulation": "\\sum_{i=1}^{NumMachines} FuelRequiredPerAcre_i \\cdot AcresAllocated_i \\leq FuelAvailable",
            "code": {
                "gurobipy": "model.addConstr(quicksum(FuelRequiredPerAcre[i] * AcresAllocated[i] for i in range(NumMachines)) <= FuelAvailable)"
            }
        },
        {
            "description": "The total methane produced, based on MethaneProducedPerAcre for each machine type, cannot exceed MethaneLimit.",
            "formulation": "\\sum_{i=1}^{NumMachines} \\text{MethaneProducedPerAcre}_i \\cdot \\text{AcresAllocated}_i \\leq \\text{MethaneLimit}",
            "code": {
                "gurobipy": "model.addConstr(quicksum(MethaneProducedPerAcre[i] * AcresAllocated[i] for i in range(NumMachines)) <= MethaneLimit)"
            }
        }
    ],
    "objective": {
        "description": "Total hay processed is the sum of the hay processed per acre by each machine type. The objective is to maximize the total hay processed.",
        "formulation": "Max \\sum_{i=1}^{\\text{NumMachines}} \\text{HayProcessedPerAcre}_i \\cdot \\text{AcresAllocated}_i",
        "code": {
            "gurobipy": "model.setObjective(quicksum(HayProcessedPerAcre[i] * AcresAllocated[i] for i in range(NumMachines)), GRB.MAXIMIZE)"
        }
    }
}