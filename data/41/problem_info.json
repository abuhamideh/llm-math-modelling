{
    "parametrized_description": "A factory utilizes high intensity drills and low intensity drills. Each high intensity drill processes GemsPerHigh gems per day and requires WaterPerHigh units of water daily. Each low intensity drill processes GemsPerLow gems per day and requires WaterPerLow units of water daily. The factory must process a total of TotalGems gems each day and has AvailableWater units of water available for dissipation. No more than MaxHighFraction of the total drills can be high intensity to control noise pollution, and at least MinLowDrills low intensity drills must be employed. The objective is to minimize the total number of drills used.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "GemsPerHigh": {
            "description": "Number of gems processed per day by a high intensity drill.",
            "shape": []
        },
        "WaterPerHigh": {
            "description": "Units of water required per day to dissipate heat by a high intensity drill.",
            "shape": []
        },
        "GemsPerLow": {
            "description": "Number of gems processed per day by a low intensity drill.",
            "shape": []
        },
        "WaterPerLow": {
            "description": "Units of water required per day to dissipate heat by a low intensity drill.",
            "shape": []
        },
        "TotalGems": {
            "description": "Total number of gems that must be processed per day by the factory.",
            "shape": []
        },
        "AvailableWater": {
            "description": "Total units of water available per day for dissipating heat.",
            "shape": []
        },
        "MaxHighFraction": {
            "description": "Maximum fraction of drills that can be high intensity to limit noise pollution.",
            "shape": []
        },
        "MinLowDrills": {
            "description": "Minimum number of low intensity drills that must be used.",
            "shape": []
        }
    },
    "variables": {
        "HighDrills": {
            "description": "The number of high intensity drills used",
            "type": "continuous",
            "shape": [
                "Integer"
            ]
        },
        "LowDrills": {
            "description": "The number of low intensity drills used",
            "type": "continuous",
            "shape": [
                "Integer"
            ]
        }
    },
    "constraints": [
        {
            "description": "The total number of gems processed per day by high and low intensity drills must equal TotalGems.",
            "formulation": "GemsPerHigh \\cdot HighDrills + GemsPerLow \\cdot LowDrills = TotalGems",
            "code": {
                "gurobipy": "model.addConstr(GemsPerHigh * HighDrills + GemsPerLow * LowDrills == TotalGems)"
            }
        },
        {
            "description": "The total water usage by all drills must not exceed AvailableWater units per day.",
            "formulation": "WaterPerHigh \\cdot HighDrills + WaterPerLow \\cdot LowDrills \\leq AvailableWater",
            "code": {
                "gurobipy": "model.addConstr(WaterPerHigh * HighDrills + WaterPerLow * LowDrills <= AvailableWater)"
            }
        },
        {
            "description": "No more than MaxHighFraction of the total drills can be high intensity to limit noise pollution.",
            "formulation": "(1 - MaxHighFraction) \\cdot HighDrills \\leq MaxHighFraction \\cdot LowDrills",
            "code": {
                "gurobipy": "model.addConstr((1 - MaxHighFraction) * HighDrills <= MaxHighFraction * LowDrills)"
            }
        },
        {
            "description": "At least MinLowDrills low intensity drills must be employed.",
            "formulation": "LowDrills \\geq MinLowDrills",
            "code": {
                "gurobipy": "model.addConstr(LowDrills >= MinLowDrills)"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total number of drills used.",
        "formulation": "\\min \\ HighDrills + LowDrills",
        "code": {
            "gurobipy": "model.setObjective(HighDrills + LowDrills, GRB.MINIMIZE)"
        }
    }
}