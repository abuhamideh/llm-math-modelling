{
    "parametrized_description": "A company manufactures desks and drawers. Each desk requires AssemblyTimeDesk minutes of assembly and SandingTimeDesk minutes of sanding. Each drawer requires AssemblyTimeDrawer minutes of assembly and SandingTimeDrawer minutes of sanding. The company has TotalAssemblyTime minutes available for assembly and TotalSandingTime minutes available for sanding. The profit per desk is ProfitPerDesk and the profit per drawer is ProfitPerDrawer. Determine the number of desks and drawers to produce to maximize profit.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "AssemblyTimeDesk": {
            "description": "Minutes required for assembly per desk",
            "shape": []
        },
        "SandingTimeDesk": {
            "description": "Minutes required for sanding per desk",
            "shape": []
        },
        "AssemblyTimeDrawer": {
            "description": "Minutes required for assembly per drawer",
            "shape": []
        },
        "SandingTimeDrawer": {
            "description": "Minutes required for sanding per drawer",
            "shape": []
        },
        "TotalAssemblyTime": {
            "description": "Total available assembly minutes",
            "shape": []
        },
        "TotalSandingTime": {
            "description": "Total available sanding minutes",
            "shape": []
        },
        "ProfitPerDesk": {
            "description": "Profit per desk",
            "shape": []
        },
        "ProfitPerDrawer": {
            "description": "Profit per drawer",
            "shape": []
        }
    },
    "variables": {
        "NumberOfDesks": {
            "description": "The number of desks to be produced",
            "type": "continuous",
            "shape": []
        },
        "NumberOfDrawers": {
            "description": "The number of drawers to be produced",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "AssemblyTimeDesk multiplied by the number of desks plus AssemblyTimeDrawer multiplied by the number of drawers must not exceed TotalAssemblyTime.",
            "formulation": "AssemblyTimeDesk \\cdot NumberOfDesks + AssemblyTimeDrawer \\cdot NumberOfDrawers \\leq TotalAssemblyTime",
            "code": {
                "gurobipy": "model.addConstr(AssemblyTimeDesk * NumberOfDesks + AssemblyTimeDrawer * NumberOfDrawers <= TotalAssemblyTime)"
            }
        },
        {
            "description": "SandingTimeDesk multiplied by the number of desks plus SandingTimeDrawer multiplied by the number of drawers must not exceed TotalSandingTime.",
            "formulation": "SandingTimeDesk \\cdot NumberOfDesks + SandingTimeDrawer \\cdot NumberOfDrawers \\leq TotalSandingTime",
            "code": {
                "gurobipy": "model.addConstr(SandingTimeDesk * NumberOfDesks + SandingTimeDrawer * NumberOfDrawers <= TotalSandingTime)"
            }
        }
    ],
    "objective": {
        "description": "Maximize the total profit, which is ProfitPerDesk multiplied by the number of desks plus ProfitPerDrawer multiplied by the number of drawers.",
        "formulation": "Max ProfitPerDesk \\cdot NumberOfDesks + ProfitPerDrawer \\cdot NumberOfDrawers",
        "code": {
            "gurobipy": "model.setObjective(ProfitPerDesk * NumberOfDesks + ProfitPerDrawer * NumberOfDrawers, GRB.MAXIMIZE)"
        }
    }
}