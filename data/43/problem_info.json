{
    "parametrized_description": "There are two processes, Process A and Process B. Executing Process A once requires GoldRequiredProcessA units of gold and WireRequiredProcessA wires, and plates CoinsPlatedProcessA coins. Executing Process B once requires GoldRequiredProcessB units of gold and WireRequiredProcessB wires, and plates CoinsPlatedProcessB coins. A total of TotalGoldAvailable units of gold and TotalWiresAvailable wires are available. Determine the number of executions of Process A and Process B to maximize the total number of coins plated.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "GoldRequiredProcessA": {
            "description": "Amount of gold required to run Process A once",
            "shape": []
        },
        "WireRequiredProcessA": {
            "description": "Number of wires required to run Process A once",
            "shape": []
        },
        "CoinsPlatedProcessA": {
            "description": "Number of coins plated per execution of Process A",
            "shape": []
        },
        "GoldRequiredProcessB": {
            "description": "Amount of gold required to run Process B once",
            "shape": []
        },
        "WireRequiredProcessB": {
            "description": "Number of wires required to run Process B once",
            "shape": []
        },
        "CoinsPlatedProcessB": {
            "description": "Number of coins plated per execution of Process B",
            "shape": []
        },
        "TotalGoldAvailable": {
            "description": "Total amount of gold available",
            "shape": []
        },
        "TotalWiresAvailable": {
            "description": "Total number of wires available",
            "shape": []
        }
    },
    "variables": {
        "ExecuteProcessA": {
            "description": "The number of times Process A is executed",
            "type": "continuous",
            "shape": []
        },
        "ExecuteProcessB": {
            "description": "The number of times Process B is executed",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total amount of gold required for executing Process A and Process B does not exceed TotalGoldAvailable units of gold.",
            "formulation": "GoldRequiredProcessA \\cdot ExecuteProcessA + GoldRequiredProcessB \\cdot ExecuteProcessB \\leq TotalGoldAvailable",
            "code": {
                "gurobipy": "model.addConstr(GoldRequiredProcessA * ExecuteProcessA + GoldRequiredProcessB * ExecuteProcessB <= TotalGoldAvailable)"
            }
        },
        {
            "description": "The total number of wires required for executing Process A and Process B does not exceed TotalWiresAvailable wires.",
            "formulation": "WireRequiredProcessA \\cdot ExecuteProcessA + WireRequiredProcessB \\cdot ExecuteProcessB \\leq TotalWiresAvailable",
            "code": {
                "gurobipy": "model.addConstr(WireRequiredProcessA * ExecuteProcessA + WireRequiredProcessB * ExecuteProcessB <= TotalWiresAvailable)"
            }
        }
    ],
    "objective": {
        "description": "The total number of coins plated is the sum of CoinsPlatedProcessA multiplied by the number of executions of Process A and CoinsPlatedProcessB multiplied by the number of executions of Process B. The objective is to maximize the total number of coins plated.",
        "formulation": "Max \\ (CoinsPlatedProcessA \\cdot ExecuteProcessA + CoinsPlatedProcessB \\cdot ExecuteProcessB)",
        "code": {
            "gurobipy": "model.setObjective(CoinsPlatedProcessA * ExecuteProcessA + CoinsPlatedProcessB * ExecuteProcessB, GRB.MAXIMIZE)"
        }
    }
}