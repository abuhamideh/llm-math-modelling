{
    "parametrized_description": "The production company needs to transport TotalPeople using large mobile production units and small mobile production units. Each large unit can hold CapacityLargeUnit people and occupies ParkingLargeUnit parking spots. Each small unit can hold CapacitySmallUnit people and occupies ParkingSmallUnit parking spots. At least MinSmallUnits small mobile production units must be used. The number of large mobile production units must be at least MinLargeUnitProportion of all mobile production units. The objective is to minimize the total number of parking spots required.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "CapacityLargeUnit": {
            "description": "Number of people that one large mobile production unit can hold",
            "shape": []
        },
        "ParkingLargeUnit": {
            "description": "Number of parking spots occupied by one large mobile production unit",
            "shape": []
        },
        "CapacitySmallUnit": {
            "description": "Number of people that one small mobile production unit can hold",
            "shape": []
        },
        "ParkingSmallUnit": {
            "description": "Number of parking spots occupied by one small mobile production unit",
            "shape": []
        },
        "MinSmallUnits": {
            "description": "Minimum number of small mobile production units required",
            "shape": []
        },
        "MinLargeUnitProportion": {
            "description": "Minimum proportion of large mobile production units relative to total vehicles",
            "shape": []
        },
        "TotalPeople": {
            "description": "Total number of people that need to be transported",
            "shape": []
        }
    },
    "variables": {
        "NumberLargeUnits": {
            "description": "The number of large mobile production units used",
            "type": "continuous",
            "shape": []
        },
        "NumberSmallUnits": {
            "description": "The number of small mobile production units used",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The number of people transported using large and small mobile production units must be at least TotalPeople. Each large unit holds CapacityLargeUnit people and each small unit holds CapacitySmallUnit people.",
            "formulation": "CapacityLargeUnit \\times NumberLargeUnits + CapacitySmallUnit \\times NumberSmallUnits \\geq TotalPeople",
            "code": {
                "gurobipy": "model.addConstr(CapacityLargeUnit * NumberLargeUnits + CapacitySmallUnit * NumberSmallUnits >= TotalPeople)"
            }
        },
        {
            "description": "At least MinSmallUnits small mobile production units must be used.",
            "formulation": "NumberSmallUnits \\geq MinSmallUnits",
            "code": {
                "gurobipy": "model.addConstr(NumberSmallUnits >= MinSmallUnits)"
            }
        },
        {
            "description": "The number of large mobile production units must be at least MinLargeUnitProportion of all mobile production units.",
            "formulation": "NumberLargeUnits \\geq MinLargeUnitProportion \\times (NumberLargeUnits + NumberSmallUnits)",
            "code": {
                "gurobipy": "model.addConstr(NumberLargeUnits >= MinLargeUnitProportion * (NumberLargeUnits + NumberSmallUnits))"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total number of parking spots required. The total parking spots are calculated by summing the parking spots occupied by large and small mobile production units, where each large unit occupies ParkingLargeUnit spots and each small unit occupies ParkingSmallUnit spots.",
        "formulation": "Min NumberLargeUnits \\times ParkingLargeUnit + NumberSmallUnits \\times ParkingSmallUnit",
        "code": {
            "gurobipy": "model.setObjective(NumberLargeUnits * ParkingLargeUnit + NumberSmallUnits * ParkingSmallUnit, GRB.MINIMIZE)"
        }
    }
}