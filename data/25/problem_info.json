{
    "parametrized_description": "A patient selects non-negative quantities of each of the NumPillTypes pill types. Each pill type provides specific amounts of each of the NumMedicineTypes medicine types as defined by AmountPerPill. The total amount of each medicine must meet or exceed the RequiredAmount. The objective is to minimize the total cost, calculated using PillCost.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "NumPillTypes": {
            "description": "Number of different pill types",
            "shape": []
        },
        "NumMedicineTypes": {
            "description": "Number of different medicine types",
            "shape": []
        },
        "AmountPerPill": {
            "description": "Amount of a medicine type per pill type",
            "shape": [
                "NumMedicineTypes",
                "NumPillTypes"
            ]
        },
        "PillCost": {
            "description": "Cost per pill type",
            "shape": [
                "NumPillTypes"
            ]
        },
        "RequiredAmount": {
            "description": "Required amount of a medicine type",
            "shape": [
                "NumMedicineTypes"
            ]
        }
    },
    "variables": {
        "PillsSelected": {
            "description": "The number of pills selected for each pill type",
            "type": "continuous",
            "shape": [
                "NumPillTypes"
            ]
        }
    },
    "constraints": [
        {
            "description": "The total amount of each medicine type provided by the selected pills must meet or exceed the RequiredAmount.",
            "formulation": "\\sum_{j=1}^{\\text{NumPillTypes}} \\text{AmountPerPill}_{i,j} \\times \\text{PillsSelected}_j \\geq \\text{RequiredAmount}_i \\quad \\forall i \\in \\{1, \\dots, \\text{NumMedicineTypes}\\}",
            "code": {
                "gurobipy": "model.addConstrs((quicksum(AmountPerPill[i][j] * PillsSelected[j] for j in range(NumPillTypes)) >= RequiredAmount[i] for i in range(NumMedicineTypes)), \"MedicineRequirements\")"
            }
        },
        {
            "description": "The quantity of each pill type selected must be non-negative.",
            "formulation": "PillsSelected \\geq 0",
            "code": {
                "gurobipy": "model.addConstrs((PillsSelected[k] >= 0 for k in range(NumPillTypes)), name='NonNegativity')"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total cost, calculated using PillCost.",
        "formulation": "Min \\sum_{i=1}^{NumPillTypes} PillCost_i \\times PillsSelected_i",
        "code": {
            "gurobipy": "model.setObjective(quicksum(PillCost[i] * PillsSelected[i] for i in range(NumPillTypes)), GRB.MINIMIZE)"
        }
    }
}