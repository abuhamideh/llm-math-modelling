{
    "parametrized_description": "A manufacturer uses large and small planes to ship their cars. Each large plane can carry CapacityLarge cars and each small plane can carry CapacitySmall cars. The number of large planes must be less than the number of small planes. The manufacturer wants to deliver at least MinCars cars. Find the minimum number of planes required.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "CapacityLarge": {
            "description": "Number of cars a large plane can carry",
            "shape": []
        },
        "CapacitySmall": {
            "description": "Number of cars a small plane can carry",
            "shape": []
        },
        "MinCars": {
            "description": "Minimum number of cars to deliver",
            "shape": []
        }
    },
    "variables": {
        "NumLargePlanes": {
            "description": "The number of large planes used",
            "type": "continuous",
            "shape": []
        },
        "NumSmallPlanes": {
            "description": "The number of small planes used",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "Each large plane can carry CapacityLarge cars and each small plane can carry CapacitySmall cars. The total number of cars shipped must be at least MinCars.",
            "formulation": "CapacityLarge \\cdot NumLargePlanes + CapacitySmall \\cdot NumSmallPlanes \\geq MinCars",
            "code": {
                "gurobipy": "model.addConstr(CapacityLarge * NumLargePlanes + CapacitySmall * NumSmallPlanes >= MinCars)"
            }
        },
        {
            "description": "The number of large planes must be less than the number of small planes.",
            "formulation": "NumLargePlanes \\leq NumSmallPlanes - 1",
            "code": {
                "gurobipy": "model.addConstr(NumLargePlanes <= NumSmallPlanes - 1)"
            }
        }
    ],
    "objective": {
        "description": "The objective is to minimize the total number of planes required to deliver at least MinCars cars.",
        "formulation": "\\min \\left( NumLargePlanes + NumSmallPlanes \\right)",
        "code": {
            "gurobipy": "model.setObjective(NumLargePlanes + NumSmallPlanes, GRB.MINIMIZE)"
        }
    }
}