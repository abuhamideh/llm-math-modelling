{
    "parametrized_description": "A drop-in clinic is performing tests either through the ear or blood. Each blood test takes TimePerBloodTest minutes to perform while each ear test takes TimePerEarTest minutes. Since the blood test is more accurate, at least BloodToEarTestRatio times as many blood tests should be performed as ear tests. However, at least MinEarTests ear tests must be administered. If the drop-in clinic operates for TotalOperatingTime minutes, maximize the number of tests that can be performed.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "TimePerBloodTest": {
            "description": "Time required to perform a blood test in minutes",
            "shape": []
        },
        "TimePerEarTest": {
            "description": "Time required to perform an ear test in minutes",
            "shape": []
        },
        "BloodToEarTestRatio": {
            "description": "Minimum ratio of blood tests to ear tests",
            "shape": []
        },
        "MinEarTests": {
            "description": "Minimum number of ear tests to be administered",
            "shape": []
        },
        "TotalOperatingTime": {
            "description": "Total operating time of the clinic in minutes",
            "shape": []
        }
    },
    "variables": {
        "NumberOfBloodTests": {
            "description": "The number of blood tests to be administered",
            "type": "continuous",
            "shape": []
        },
        "NumberOfEarTests": {
            "description": "The number of ear tests to be administered",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total time required for blood tests plus ear tests does not exceed TotalOperatingTime minutes.",
            "formulation": "TimePerBloodTest \\times NumberOfBloodTests + TimePerEarTest \\times NumberOfEarTests \\leq TotalOperatingTime",
            "code": {
                "gurobipy": "model.addConstr(TimePerBloodTest * NumberOfBloodTests + TimePerEarTest * NumberOfEarTests <= TotalOperatingTime)"
            }
        },
        {
            "description": "The number of blood tests is at least BloodToEarTestRatio times the number of ear tests.",
            "formulation": "NumberOfBloodTests \\geq BloodToEarTestRatio \\times NumberOfEarTests",
            "code": {
                "gurobipy": "model.addConstr(NumberOfBloodTests >= BloodToEarTestRatio * NumberOfEarTests)"
            }
        },
        {
            "description": "At least MinEarTests ear tests must be administered.",
            "formulation": "NumberOfEarTests \\geq MinEarTests",
            "code": {
                "gurobipy": "model.addConstr(NumberOfEarTests >= MinEarTests)"
            }
        }
    ],
    "objective": {
        "description": "Maximize the total number of tests performed (blood tests plus ear tests).",
        "formulation": "Max \\left( NumberOfBloodTests + NumberOfEarTests \\right)",
        "code": {
            "gurobipy": "model.setObjective(NumberOfBloodTests + NumberOfEarTests, GRB.MAXIMIZE)"
        }
    }
}