{
    "parametrized_description": "A company must determine the number of HighVolumePipes and LowVolumePipes to ensure that the combined daily capacity meets or exceeds the DailyGasDemand. The total number of technicians required to monitor these pipes must not exceed the TotalTechnicians available. Additionally, the proportion of HighVolumePipes used should not surpass the MaxHighVolumeProportion of all pipes, and there must be at least MinLowVolumePipes LowVolumePipes. The objective is to minimize the total number of pipes employed.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "HighVolumeCapacity": {
            "description": "The daily capacity of a high-volume pipe in US gallons",
            "shape": []
        },
        "LowVolumeCapacity": {
            "description": "The daily capacity of a low-volume pipe in US gallons",
            "shape": []
        },
        "TechniciansPerHighVolumePipe": {
            "description": "Number of technicians required to monitor each high-volume pipe daily",
            "shape": []
        },
        "TechniciansPerLowVolumePipe": {
            "description": "Number of technicians required to monitor each low-volume pipe daily",
            "shape": []
        },
        "DailyGasDemand": {
            "description": "Minimum daily US gallons of gas that need to be met",
            "shape": []
        },
        "TotalTechnicians": {
            "description": "Total number of technicians available daily",
            "shape": []
        },
        "MaxHighVolumeProportion": {
            "description": "Maximum allowed proportion of high-volume pipes",
            "shape": []
        },
        "MinLowVolumePipes": {
            "description": "Minimum number of low-volume pipes required",
            "shape": []
        }
    },
    "variables": {
        "HighVolumePipes": {
            "description": "The number of high-volume pipes",
            "type": "continuous",
            "shape": []
        },
        "LowVolumePipes": {
            "description": "The number of low-volume pipes",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The combined daily capacity of HighVolumePipes and LowVolumePipes must be at least DailyGasDemand.",
            "formulation": "HighVolumePipes \\cdot HighVolumeCapacity + LowVolumePipes \\cdot LowVolumeCapacity \\geq DailyGasDemand",
            "code": {
                "gurobipy": "model.addConstr(HighVolumeCapacity * HighVolumePipes + LowVolumeCapacity * LowVolumePipes >= DailyGasDemand)"
            }
        },
        {
            "description": "The total number of technicians required to monitor HighVolumePipes and LowVolumePipes must not exceed TotalTechnicians available.",
            "formulation": "TechniciansPerHighVolumePipe \\cdot HighVolumePipes + TechniciansPerLowVolumePipe \\cdot LowVolumePipes \\leq TotalTechnicians",
            "code": {
                "gurobipy": "model.addConstr(TechniciansPerHighVolumePipe * HighVolumePipes + TechniciansPerLowVolumePipe * LowVolumePipes <= TotalTechnicians)"
            }
        },
        {
            "description": "The proportion of HighVolumePipes relative to the total number of pipes must not exceed MaxHighVolumeProportion.",
            "formulation": "HighVolumePipes \\leq MaxHighVolumeProportion \\times (HighVolumePipes + LowVolumePipes)",
            "code": {
                "gurobipy": "model.addConstr(HighVolumePipes <= MaxHighVolumeProportion * (HighVolumePipes + LowVolumePipes))"
            }
        },
        {
            "description": "At least MinLowVolumePipes LowVolumePipes must be employed.",
            "formulation": "LowVolumePipes \\geq MinLowVolumePipes",
            "code": {
                "gurobipy": "model.addConstr(LowVolumePipes >= MinLowVolumePipes)"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total number of pipes employed.",
        "formulation": "Min \\ HighVolumePipes + LowVolumePipes",
        "code": {
            "gurobipy": "model.setObjective(HighVolumePipes + LowVolumePipes, GRB.MINIMIZE)"
        }
    }
}