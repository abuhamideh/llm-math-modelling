{
    "parametrized_description": "Maximize the total profit, which is ProfitChocolate multiplied by the number of gallons of chocolate ice cream produced plus ProfitVanilla multiplied by the number of gallons of vanilla ice cream produced, subject to the following constraints: the number of gallons of chocolate ice cream produced is at least MinGallonsChocolate and at most MaxGallonsChocolate; the number of gallons of vanilla ice cream produced is at least MinGallonsVanilla and at most MaxGallonsVanilla; the total production time, calculated as ProductionTimeChocolate multiplied by the number of gallons of chocolate ice cream produced plus ProductionTimeVanilla multiplied by the number of gallons of vanilla ice cream produced, does not exceed TotalProductionHours; WorkersNeededChocolate multiplied by the number of chocolate production operations plus WorkersNeededVanilla multiplied by the number of vanilla production operations does not exceed the total number of workers available, and the total number of workers is at least MinTotalWorkers.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "MinGallonsChocolate": {
            "description": "Minimum gallons of chocolate ice cream to produce per week",
            "shape": []
        },
        "MinGallonsVanilla": {
            "description": "Minimum gallons of vanilla ice cream to produce per week",
            "shape": []
        },
        "MaxGallonsChocolate": {
            "description": "Maximum gallons of chocolate ice cream to produce per week",
            "shape": []
        },
        "MaxGallonsVanilla": {
            "description": "Maximum gallons of vanilla ice cream to produce per week",
            "shape": []
        },
        "ProductionTimeChocolate": {
            "description": "Production time in hours to produce one gallon of chocolate ice cream",
            "shape": []
        },
        "ProductionTimeVanilla": {
            "description": "Production time in hours to produce one gallon of vanilla ice cream",
            "shape": []
        },
        "TotalProductionHours": {
            "description": "Total production hours available per week",
            "shape": []
        },
        "WorkersNeededChocolate": {
            "description": "Number of workers required to operate production of chocolate ice cream",
            "shape": []
        },
        "WorkersNeededVanilla": {
            "description": "Number of workers required to operate production of vanilla ice cream",
            "shape": []
        },
        "MinTotalWorkers": {
            "description": "Minimum total number of workers required",
            "shape": []
        },
        "ProfitChocolate": {
            "description": "Profit per gallon of chocolate ice cream",
            "shape": []
        },
        "ProfitVanilla": {
            "description": "Profit per gallon of vanilla ice cream",
            "shape": []
        }
    },
    "variables": {
        "GallonsChocolateProduced": {
            "description": "The number of gallons of chocolate ice cream produced per week",
            "type": "continuous",
            "shape": [
                "Continuous"
            ]
        },
        "GallonsVanillaProduced": {
            "description": "The number of gallons of vanilla ice cream produced per week",
            "type": "continuous",
            "shape": [
                "Continuous"
            ]
        }
    },
    "constraints": [
        {
            "description": "The number of gallons of chocolate ice cream produced is at least MinGallonsChocolate and at most MaxGallonsChocolate.",
            "formulation": "GallonsChocolateProduced \\geq MinGallonsChocolate \\n GallonsChocolateProduced \\leq MaxGallonsChocolate",
            "code": {
                "gurobipy": "model.addConstr(GallonsChocolateProduced >= MinGallonsChocolate)\nmodel.addConstr(GallonsChocolateProduced <= MaxGallonsChocolate)"
            }
        },
        {
            "description": "The number of gallons of vanilla ice cream produced is at least MinGallonsVanilla and at most MaxGallonsVanilla.",
            "formulation": "MinGallonsVanilla \\leq GallonsVanillaProduced \\leq MaxGallonsVanilla",
            "code": {
                "gurobipy": ""
            }
        },
        {
            "description": "The total production time, calculated as ProductionTimeChocolate multiplied by the number of gallons of chocolate ice cream produced plus ProductionTimeVanilla multiplied by the number of gallons of vanilla ice cream produced, does not exceed TotalProductionHours.",
            "formulation": "ProductionTimeChocolate \\times GallonsChocolateProduced + ProductionTimeVanilla \\times GallonsVanillaProduced \\leq TotalProductionHours",
            "code": {
                "gurobipy": "model.addConstr(ProductionTimeChocolate * GallonsChocolateProduced + ProductionTimeVanilla * GallonsVanillaProduced <= TotalProductionHours)"
            }
        },
        {
            "description": "WorkersNeededChocolate multiplied by the number of gallons of chocolate ice cream produced plus WorkersNeededVanilla multiplied by the number of gallons of vanilla ice cream produced is at least MinTotalWorkers.",
            "formulation": "WorkersNeededChocolate \\times GallonsChocolateProduced + WorkersNeededVanilla \\times GallonsVanillaProduced \\geq MinTotalWorkers",
            "code": {
                "gurobipy": "model.addConstr(WorkersNeededChocolate * GallonsChocolateProduced + WorkersNeededVanilla * GallonsVanillaProduced >= MinTotalWorkers)"
            }
        }
    ],
    "objective": {
        "description": "Maximize the total profit, which is ProfitChocolate multiplied by the number of gallons of chocolate ice cream produced plus ProfitVanilla multiplied by the number of gallons of vanilla ice cream produced.",
        "formulation": "Max \\ ProfitChocolate \\times GallonsChocolateProduced + ProfitVanilla \\times GallonsVanillaProduced",
        "code": {
            "gurobipy": "model.setObjective(ProfitChocolate * GallonsChocolateProduced + ProfitVanilla * GallonsVanillaProduced, GRB.MAXIMIZE)"
        }
    }
}