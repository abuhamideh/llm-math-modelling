{
  "parametrized_description": "A pharmacy operates NumFactories factories, each producing NumProducts different products. Each factory has a ProductionRate for each product in units per hour and requires BaseGelRequirement units of base gel per hour. The pharmacy has AvailableBaseGel units of base gel available. The production must satisfy the MinimumDemand for each product. The objective is to determine the number of hours each factory should be run to minimize the total time needed.",
  "keywords": ["N.A."],
  "parameters": {
    "NumFactories": {
      "description": "Number of factories",
      "shape": []
    },
    "NumProducts": {
      "description": "Number of products",
      "shape": []
    },
    "ProductionRate": {
      "description": "Production rate of a product by a factory in units per hour",
      "shape": ["NumFactories", "NumProducts"]
    },
    "BaseGelRequirement": {
      "description": "Base gel required per hour by a factory",
      "shape": ["NumFactories"]
    },
    "AvailableBaseGel": {
      "description": "Total available units of base gel",
      "shape": []
    },
    "MinimumDemand": {
      "description": "Minimum required units of each product",
      "shape": ["NumProducts"]
    }
  },
  "variables": {
    "ProductionMatrix": {
      "description": "The production quantity of each product by each factory",
      "type": "continuous",
      "shape": ["NumFactories", "NumProducts"]
    },
    "MaxOperatingHours": {
      "description": "The maximum operating hours across all factories",
      "type": "continuous",
      "shape": []
    }
  },
  "constraints": [
    {
      "description": "The production of each product by all factories combined must meet or exceed the MinimumDemand.",
      "formulation": "\\sum_{f=1}^{\\\text{NumFactories}} \\text{ProductionMatrix}_{f, p} \\geq \\text{MinimumDemand}_p \\quad \\forall p",
      "code": {
        "gurobipy": "model.addConstrs((quicksum(ProductionMatrix[f, p] for f in range(NumFactories)) >= MinimumDemand[p] for p in range(NumProducts)), name=\"Demand\")"
      }
    },
    {
      "description": "The total base gel required by all factories must not exceed the AvailableBaseGel.",
      "formulation": "\\sum_{i=1}^{NumFactories} \\sum_{p=1}^{NumProducts} \\frac{BaseGelRequirement_{i}}{ProductionRate_{i,p}} \\cdot Production_{i,p} \\leq AvailableBaseGel",
      "code": {
        "gurobipy": "model.addConstr(quicksum(BaseGelRequirement[i] / ProductionRate[i][p] * ProductionMatrix[i, p] for i in range(NumFactories) for p in range(NumProducts)) <= AvailableBaseGel)"
      }
    }
  ],
  "objective": {
    "description": "The objective is to minimize the maximum operating hours across all factories while meeting production requirements and adhering to base gel resource constraints.",
    "formulation": "Min MaxOperatingHours",
    "code": {
      "gurobipy": "model.setObjective(MaxOperatingHours, GRB.MINIMIZE)"
    }
  }
}
