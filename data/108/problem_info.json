{
    "parametrized_description": "A clinic produces two products: vitamin shots and vitamin pills. Each batch of vitamin shots requires VitaminCShots units of vitamin C and VitaminDShots units of vitamin D. Each batch of vitamin pills requires VitaminCPills units of vitamin C and VitaminDPills units of vitamin D. The number of batches of vitamin pills must be greater than the number of batches of vitamin shots by at least MinBatchDifference. The clinic can produce at most MaxBatchesShots batches of vitamin shots. The clinic has AvailableVitaminC units of vitamin C and AvailableVitaminD units of vitamin D available. Each batch of vitamin shots can supply SupplyShots people and each batch of vitamin pills can supply SupplyPills people. The objective is to determine the number of batches of each product to maximize the number of people that can be supplied.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "VitaminCShots": {
            "description": "Amount of vitamin C required per batch of vitamin shots",
            "shape": []
        },
        "VitaminDShots": {
            "description": "Amount of vitamin D required per batch of vitamin shots",
            "shape": []
        },
        "VitaminCPills": {
            "description": "Amount of vitamin C required per batch of vitamin pills",
            "shape": []
        },
        "VitaminDPills": {
            "description": "Amount of vitamin D required per batch of vitamin pills",
            "shape": []
        },
        "MaxBatchesShots": {
            "description": "The maximum number of batches of vitamin shots that can be produced",
            "shape": []
        },
        "AvailableVitaminC": {
            "description": "Total available units of vitamin C",
            "shape": []
        },
        "AvailableVitaminD": {
            "description": "Total available units of vitamin D",
            "shape": []
        },
        "SupplyShots": {
            "description": "Number of people supplied per batch of vitamin shots",
            "shape": []
        },
        "SupplyPills": {
            "description": "Number of people supplied per batch of vitamin pills",
            "shape": []
        },
        "MinBatchDifference": {
            "description": "Minimum number of additional batches of vitamin pills compared to vitamin shots",
            "shape": []
        }
    },
    "variables": {
        "BatchesShots": {
            "description": "The number of batches of vitamin shots produced",
            "type": "continuous",
            "shape": [
                "integer"
            ]
        },
        "BatchesPills": {
            "description": "The number of batches of vitamin pills produced",
            "type": "continuous",
            "shape": [
                "integer"
            ]
        }
    },
    "constraints": [
        {
            "description": "Each batch of vitamin shots requires VitaminCShots units of vitamin C and each batch of vitamin pills requires VitaminCPills units of vitamin C. The total vitamin C used cannot exceed AvailableVitaminC.",
            "formulation": "VitaminCShots \\times BatchesShots + VitaminCPills \\times BatchesPills \\leq AvailableVitaminC",
            "code": {
                "gurobipy": "model.addConstr(VitaminCShots * BatchesShots + VitaminCPills * BatchesPills <= AvailableVitaminC)"
            }
        },
        {
            "description": "Each batch of vitamin shots requires VitaminDShots units of vitamin D and each batch of vitamin pills requires VitaminDPills units of vitamin D. The total vitamin D used cannot exceed AvailableVitaminD.",
            "formulation": "VitaminDShots \\cdot BatchesShots + VitaminDPills \\cdot BatchesPills \\leq AvailableVitaminD",
            "code": {
                "gurobipy": "model.addConstr(VitaminDShots * BatchesShots + VitaminDPills * BatchesPills <= AvailableVitaminD)"
            }
        },
        {
            "description": "The number of batches of vitamin pills must exceed the number of batches of vitamin shots by at least MinBatchDifference.",
            "formulation": "BatchesPills - BatchesShots \\ge MinBatchDifference",
            "code": {
                "gurobipy": "model.addConstr(BatchesPills - BatchesShots >= MinBatchDifference)"
            }
        },
        {
            "description": "The number of batches of vitamin shots produced cannot exceed MaxBatchesShots.",
            "formulation": "BatchesShots \\leq MaxBatchesShots",
            "code": {
                "gurobipy": "model.addConstr(BatchesShots <= MaxBatchesShots)"
            }
        }
    ],
    "objective": {
        "description": "The total number of people supplied is the sum of the people supplied by vitamin shots and vitamin pills. The objective is to maximize this total number of people supplied.",
        "formulation": "Max \\left( SupplyShots \\times BatchesShots + SupplyPills \\times BatchesPills \\right )",
        "code": {
            "gurobipy": "model.setObjective(SupplyShots * BatchesShots + SupplyPills * BatchesPills, GRB.MAXIMIZE)"
        }
    }
}