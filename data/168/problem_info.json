{
    "parametrized_description": "A village needs to transport at least NumberOfPeople individuals using bikes and cars. Each bike has a capacity of BikeCapacity people, and each car has a capacity of CarCapacity people. At most MaxCarPercentage of the total vehicles can be cars. Determine the number of bikes and cars required to minimize the total number of bikes needed.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "BikeCapacity": {
            "description": "Number of people each bike can transport",
            "shape": []
        },
        "CarCapacity": {
            "description": "Number of people each car can transport",
            "shape": []
        },
        "MaxCarPercentage": {
            "description": "Maximum percentage of vehicles that can be cars",
            "shape": []
        },
        "NumberOfPeople": {
            "description": "Total number of people to transport",
            "shape": []
        }
    },
    "variables": {
        "NumberOfBikes": {
            "description": "The number of bikes used for transportation",
            "type": "continuous",
            "shape": []
        },
        "NumberOfCars": {
            "description": "The number of cars used for transportation",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total number of people transported by bikes and cars must be at least NumberOfPeople.",
            "formulation": "BikeCapacity \\times NumberOfBikes + CarCapacity \\times NumberOfCars \\geq NumberOfPeople",
            "code": {
                "gurobipy": "model.addConstr(NumberOfBikes * BikeCapacity + NumberOfCars * CarCapacity >= NumberOfPeople)"
            }
        },
        {
            "description": "The number of cars used cannot exceed MaxCarPercentage of the total number of vehicles.",
            "formulation": "NumberOfCars \\leq MaxCarPercentage \\times (NumberOfCars + NumberOfBikes)",
            "code": {
                "gurobipy": "model.addConstr(NumberOfCars <= MaxCarPercentage * (NumberOfCars + NumberOfBikes))"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total number of bikes needed.",
        "formulation": "\\min \\ NumberOfBikes",
        "code": {
            "gurobipy": "model.setObjective(NumberOfBikes, GRB.MINIMIZE)"
        }
    }
}