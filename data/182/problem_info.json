{
    "parametrized_description": "There has been an accident and patients need to be transported to the hospital by either helicopter or bus. A helicopter can transport HelicopterCapacity patients per trip and takes HelicopterTripTime time. On the other hand, a bus can transport BusCapacity patients per trip and takes BusTripTime time. At least MinPatients patients need to be transported and at least MinHelicopterTripPercentage of the trips should be by helicopter. In addition, there can be at most MaxBusTrips bus trips. The objective is to minimize the total transportation time.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "HelicopterCapacity": {
            "description": "Number of patients that can be transported by helicopter in one trip",
            "shape": []
        },
        "HelicopterTripTime": {
            "description": "Time taken for one helicopter trip",
            "shape": []
        },
        "BusCapacity": {
            "description": "Number of patients that can be transported by bus in one trip",
            "shape": []
        },
        "BusTripTime": {
            "description": "Time taken for one bus trip",
            "shape": []
        },
        "MinPatients": {
            "description": "Minimum number of patients that need to be transported",
            "shape": []
        },
        "MinHelicopterTripPercentage": {
            "description": "Minimum percentage of trips that should be by helicopter",
            "shape": []
        },
        "MaxBusTrips": {
            "description": "Maximum number of bus trips allowed",
            "shape": []
        }
    },
    "variables": {
        "HelicopterTrips": {
            "description": "The number of helicopter trips",
            "type": "continuous",
            "shape": []
        },
        "BusTrips": {
            "description": "The number of bus trips",
            "type": "continuous",
            "shape": []
        },
        "PatientsHelicopter": {
            "description": "The number of patients transported by helicopter",
            "type": "continuous",
            "shape": []
        },
        "PatientsBus": {
            "description": "The number of patients transported by bus",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "At least MinPatients patients need to be transported.",
            "formulation": "HelicopterTrips \\times HelicopterCapacity + BusTrips \\times BusCapacity \\geq MinPatients",
            "code": {
                "gurobipy": "model.addConstr(HelicopterTrips * HelicopterCapacity + BusTrips * BusCapacity >= MinPatients)"
            }
        },
        {
            "description": "At least MinHelicopterTripPercentage of the trips should be by helicopter.",
            "formulation": "HelicopterTrips \\geq MinHelicopterTripPercentage \\times (HelicopterTrips + BusTrips)",
            "code": {
                "gurobipy": "model.addConstr(HelicopterTrips >= MinHelicopterTripPercentage * (HelicopterTrips + BusTrips))"
            }
        },
        {
            "description": "At most MaxBusTrips bus trips are allowed.",
            "formulation": "BusTrips \\leq MaxBusTrips",
            "code": {
                "gurobipy": "model.addConstr(BusTrips <= MaxBusTrips)"
            }
        },
        {
            "description": "Each helicopter trip can transport up to HelicopterCapacity patients.",
            "formulation": "PatientsHelicopter \\leq HelicopterCapacity \\times HelicopterTrips",
            "code": {
                "gurobipy": "model.addConstr(PatientsHelicopter <= HelicopterCapacity * HelicopterTrips)"
            }
        },
        {
            "description": "Each bus trip can transport up to BusCapacity patients.",
            "formulation": "PatientsBus \\leq BusCapacity \\times BusTrips",
            "code": {
                "gurobipy": "model.addConstr(PatientsBus <= BusCapacity * BusTrips)"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total transportation time.",
        "formulation": "Min \\ HelicopterTrips \\times HelicopterTripTime + BusTrips \\times BusTripTime",
        "code": {
            "gurobipy": "model.setObjective(HelicopterTrips * HelicopterTripTime + BusTrips * BusTripTime, GRB.MINIMIZE)"
        }
    }
}