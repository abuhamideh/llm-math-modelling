{
    "parametrized_description": "To minimize the total number of machines, the ice cream store must decide how many counter-top sized machines and fridge sized machines to purchase. Each counter-top machine produces ProductionCounterTop ice creams per day and outputs HeatCounterTop units of heat, while each fridge machine produces ProductionFridge ice creams per day and outputs HeatFridge units of heat. The total heat output must not exceed MaxHeat, and the total ice cream production must be at least MinProduction.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "ProductionCounterTop": {
            "description": "Ice cream production per day by a counter-top sized machine",
            "shape": []
        },
        "ProductionFridge": {
            "description": "Ice cream production per day by a fridge sized machine",
            "shape": []
        },
        "HeatCounterTop": {
            "description": "Heat output per day by a counter-top sized machine",
            "shape": []
        },
        "HeatFridge": {
            "description": "Heat output per day by a fridge sized machine",
            "shape": []
        },
        "MaxHeat": {
            "description": "Maximum heat output per day",
            "shape": []
        },
        "MinProduction": {
            "description": "Minimum ice cream production per day",
            "shape": []
        }
    },
    "variables": {
        "MachinesCounterTop": {
            "description": "The number of counter-top sized machines",
            "type": "continuous",
            "shape": []
        },
        "MachinesFridge": {
            "description": "The number of fridge-sized machines",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total heat output from all counter-top and fridge-sized machines must not exceed MaxHeat.",
            "formulation": "HeatCounterTop \\cdot MachinesCounterTop + HeatFridge \\cdot MachinesFridge \\leq MaxHeat",
            "code": {
                "gurobipy": "model.addConstr(HeatCounterTop * MachinesCounterTop + HeatFridge * MachinesFridge <= MaxHeat)"
            }
        },
        {
            "description": "The total ice cream production from all counter-top and fridge-sized machines must be at least MinProduction.",
            "formulation": "ProductionCounterTop \\cdot MachinesCounterTop + ProductionFridge \\cdot MachinesFridge \\geq MinProduction",
            "code": {
                "gurobipy": "model.addConstr(ProductionCounterTop * MachinesCounterTop + ProductionFridge * MachinesFridge >= MinProduction)"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total number of machines, which is the sum of the number of counter-top and fridge-sized machines.",
        "formulation": "Min \\ MachinesCounterTop + MachinesFridge",
        "code": {
            "gurobipy": "model.setObjective(MachinesCounterTop + MachinesFridge, GRB.MINIMIZE)"
        }
    }
}