{
    "parametrized_description": "A family has a TotalInvestment to allocate between apartments and townhouses. The investment in apartments must not exceed MaxInvestmentApartments and must be at least MinInvestmentRatio times the investment in townhouses. Apartments yield a return rate of ReturnRateApartments and townhouses yield a return rate of ReturnRateTownhouses. The goal is to determine the investment amounts in each to maximize total profit.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "TotalInvestment": {
            "description": "Total amount available for investment",
            "shape": []
        },
        "MaxInvestmentApartments": {
            "description": "Maximum amount that can be invested in apartments",
            "shape": []
        },
        "MinInvestmentRatio": {
            "description": "Minimum ratio of investment in apartments to investment in townhouses",
            "shape": []
        },
        "ReturnRateApartments": {
            "description": "Return on investment rate for apartments",
            "shape": []
        },
        "ReturnRateTownhouses": {
            "description": "Return on investment rate for townhouses",
            "shape": []
        }
    },
    "variables": {
        "InvestmentApartments": {
            "description": "The amount invested in apartments",
            "type": "continuous",
            "shape": []
        },
        "InvestmentTownhouses": {
            "description": "The amount invested in townhouses",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total investment allocated to apartments and townhouses must equal TotalInvestment.",
            "formulation": "InvestmentApartments + InvestmentTownhouses = TotalInvestment",
            "code": {
                "gurobipy": "model.addConstr(InvestmentApartments + InvestmentTownhouses == TotalInvestment)"
            }
        },
        {
            "description": "The investment in apartments must not exceed MaxInvestmentApartments.",
            "formulation": "InvestmentApartments \\leq MaxInvestmentApartments",
            "code": {
                "gurobipy": "model.addConstr(InvestmentApartments <= MaxInvestmentApartments)"
            }
        },
        {
            "description": "The investment in apartments must be at least MinInvestmentRatio times the investment in townhouses.",
            "formulation": "InvestmentApartments \\geq MinInvestmentRatio \\times InvestmentTownhouses",
            "code": {
                "gurobipy": "model.addConstr(InvestmentApartments >= MinInvestmentRatio * InvestmentTownhouses)"
            }
        }
    ],
    "objective": {
        "description": "Maximize total profit, which is the sum of ReturnRateApartments multiplied by the investment in apartments and ReturnRateTownhouses multiplied by the investment in townhouses.",
        "formulation": "Max \\left(ReturnRateApartments \\times InvestmentApartments + ReturnRateTownhouses \\times InvestmentTownhouses\\right)",
        "code": {
            "gurobipy": "model.setObjective(ReturnRateApartments * InvestmentApartments + ReturnRateTownhouses * InvestmentTownhouses, GRB.MAXIMIZE)"
        }
    }
}