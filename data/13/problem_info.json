{
    "parametrized_description": "A souvenir shop produces NumProducts different products using NumResources different resources. Each product has a profit defined by Profit and requires specific amounts of resources as specified by ResourceRequirement. The ResourceAvailability defines the total amount of each resource available. The objective is to determine the number of each product to produce to maximize total Profit.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "NumProducts": {
            "description": "Number of different products produced",
            "shape": []
        },
        "NumResources": {
            "description": "Number of different resources used",
            "shape": []
        },
        "Profit": {
            "description": "Profit per unit of each product",
            "shape": [
                "NumProducts"
            ]
        },
        "ResourceRequirement": {
            "description": "Amount of each resource required to produce one unit of each product",
            "shape": [
                "NumResources",
                "NumProducts"
            ]
        },
        "ResourceAvailability": {
            "description": "Amount of each resource available per week",
            "shape": [
                "NumResources"
            ]
        }
    },
    "variables": {
        "Production": {
            "description": "The quantity produced for each product",
            "type": "continuous",
            "shape": [
                "NumProducts"
            ]
        }
    },
    "constraints": [
        {
            "description": "The total amount of wood required to produce all products does not exceed the available wood.",
            "formulation": "\\sum_{j=1}^{NumProducts} ResourceRequirement_{\\text{Wood},j} \\cdot Production_j \\leq ResourceAvailability_{\\text{Wood}}",
            "code": {
                "gurobipy": "model.addConstr(quicksum(ResourceRequirement[0][j] * Production[j] for j in range(NumProducts)) <= ResourceAvailability[0])"
            }
        },
        {
            "description": "The total amount of plastic required to produce all products does not exceed the available plastic.",
            "formulation": "\\sum_{i=1}^{\\text{NumProducts}} \\text{ResourceRequirement}_{\\text{Plastic},i} \\times \\text{Production}_{i} \\leq \\text{ResourceAvailability}_{\\text{Plastic}}",
            "code": {
                "gurobipy": "model.addConstr(quicksum(ResourceRequirement[0][i] * Production[i] for i in range(NumProducts)) <= ResourceAvailability[0])"
            }
        }
    ],
    "objective": {
        "description": "Total Profit is the sum of the profit per unit of each product multiplied by the number of each product produced. The objective is to maximize the total Profit.",
        "formulation": "Max \\sum_{i=1}^{NumProducts} Profit_i \\times Production_i",
        "code": {
            "gurobipy": "model.setObjective(quicksum(Profit[i] * Production[i] for i in range(NumProducts)), GRB.MAXIMIZE)"
        }
    }
}