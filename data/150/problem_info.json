{
    "parametrized_description": "A florist transports small and large bouquets, where each small bouquet contains FlowersPerSmallBouquet flowers and each large bouquet contains FlowersPerLargeBouquet flowers. The florist can transport at most MaxSmallBouquets small bouquets and MaxLargeBouquets large bouquets. In total, the florist can transport at most MaxTotalBouquets bouquets. The florist must transport at least MinLargeBouquets large bouquets. Additionally, the number of small bouquets transported must be at least MinSmallToLargeRatio times the number of large bouquets transported. The objective is to determine the number of small and large bouquets to transport in order to maximize the total number of flowers delivered to the stores.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "FlowersPerSmallBouquet": {
            "description": "Number of flowers in a small bouquet",
            "shape": []
        },
        "FlowersPerLargeBouquet": {
            "description": "Number of flowers in a large bouquet",
            "shape": []
        },
        "MaxSmallBouquets": {
            "description": "Maximum number of small bouquets that can be transported",
            "shape": []
        },
        "MaxLargeBouquets": {
            "description": "Maximum number of large bouquets that can be transported",
            "shape": []
        },
        "MaxTotalBouquets": {
            "description": "Maximum total number of bouquets that can be transported",
            "shape": []
        },
        "MinLargeBouquets": {
            "description": "Minimum number of large bouquets that must be transported",
            "shape": []
        },
        "MinSmallToLargeRatio": {
            "description": "Minimum ratio of small bouquets to large bouquets",
            "shape": []
        }
    },
    "variables": {
        "SmallBouquets": {
            "description": "The number of small bouquets transported",
            "type": "continuous",
            "shape": []
        },
        "LargeBouquets": {
            "description": "The number of large bouquets transported",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The number of small bouquets transported cannot exceed MaxSmallBouquets.",
            "formulation": "SmallBouquets \\leq MaxSmallBouquets",
            "code": {
                "gurobipy": "model.addConstr(SmallBouquets <= MaxSmallBouquets)"
            }
        },
        {
            "description": "The number of large bouquets transported cannot exceed MaxLargeBouquets.",
            "formulation": "LargeBouquets \\leq MaxLargeBouquets",
            "code": {
                "gurobipy": "model.addConstr(LargeBouquets <= MaxLargeBouquets)"
            }
        },
        {
            "description": "The total number of bouquets transported cannot exceed MaxTotalBouquets.",
            "formulation": "SmallBouquets + LargeBouquets \\leq MaxTotalBouquets",
            "code": {
                "gurobipy": "model.addConstr(SmallBouquets + LargeBouquets <= MaxTotalBouquets)"
            }
        },
        {
            "description": "At least MinLargeBouquets large bouquets must be transported.",
            "formulation": "LargeBouquets \\geq MinLargeBouquets",
            "code": {
                "gurobipy": "model.addConstr(LargeBouquets >= MinLargeBouquets)"
            }
        },
        {
            "description": "The number of small bouquets transported must be at least MinSmallToLargeRatio times the number of large bouquets transported.",
            "formulation": "SmallBouquets \\geq MinSmallToLargeRatio \\times LargeBouquets",
            "code": {
                "gurobipy": "model.addConstr(SmallBouquets >= MinSmallToLargeRatio * LargeBouquets)"
            }
        }
    ],
    "objective": {
        "description": "The total number of flowers delivered is the sum of FlowersPerSmallBouquet multiplied by the number of small bouquets and FlowersPerLargeBouquet multiplied by the number of large bouquets. The objective is to maximize the total number of flowers delivered to the stores.",
        "formulation": "Max \\ FlowersPerSmallBouquet \\times SmallBouquets + FlowersPerLargeBouquet \\times LargeBouquets",
        "code": {
            "gurobipy": "model.setObjective(FlowersPerSmallBouquet * SmallBouquets + FlowersPerLargeBouquet * LargeBouquets, GRB.MAXIMIZE)"
        }
    }
}