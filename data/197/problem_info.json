{
    "parametrized_description": "Forest Paper produces NumProducts different types of products using NumMachines different machine types. Each product requires a specific amount of time on each machine, as defined by TimeRequired. Each machine type has a limited AvailableTime per day. The company aims to determine the number of each product to produce in order to maximize total profit, given the ProfitPerProduct for each product.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "NumProducts": {
            "description": "Number of different products manufactured",
            "shape": []
        },
        "NumMachines": {
            "description": "Number of different machine types",
            "shape": []
        },
        "TimeRequired": {
            "description": "Time required by each machine to produce each product",
            "shape": [
                "NumMachines",
                "NumProducts"
            ]
        },
        "AvailableTime": {
            "description": "Available time per machine per day",
            "shape": [
                "NumMachines"
            ]
        },
        "ProfitPerProduct": {
            "description": "Profit per product",
            "shape": [
                "NumProducts"
            ]
        }
    },
    "variables": {
        "ProductionQuantity": {
            "description": "The quantity of each product to produce",
            "type": "continuous",
            "shape": [
                "NumProducts"
            ]
        }
    },
    "constraints": [
        {
            "description": "For each machine type, the total time required to produce all products cannot exceed the AvailableTime per day.",
            "formulation": "\\sum_{j=1}^{NumProducts} TimeRequired_{i,j} \\cdot ProductionQuantity_{j} \\leq AvailableTime_{i} \\quad \\forall i \\in \\{1, \\dots, NumMachines\\}",
            "code": {
                "gurobipy": "model.addConstrs((quicksum(TimeRequired[i][j] * ProductionQuantity[j] for j in range(NumProducts)) <= AvailableTime[i] for i in range(NumMachines)), name=\"MachineTime\")"
            }
        }
    ],
    "objective": {
        "description": "Total profit is the sum of ProfitPerProduct for each product multiplied by the number of each product produced. The objective is to maximize the total profit.",
        "formulation": "Max \\sum_{i=1}^{\\text{NumProducts}} \\text{ProfitPerProduct}_i \\times \\text{ProductionQuantity}_i",
        "code": {
            "gurobipy": "model.setObjective(quicksum(ProfitPerProduct[i] * ProductionQuantity[i] for i in range(NumProducts)), GRB.MAXIMIZE)"
        }
    }
}