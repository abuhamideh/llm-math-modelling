{
    "parametrized_description": "A store purchases quantities of plush toys and dolls. The cost per plush toy is CostPlushToy and the cost per doll is CostDoll. The total inventory cost must not exceed InventoryBudget. Each plush toy sold yields ProfitPlushToy profit and each doll sold yields ProfitDoll profit. The number of plush toys sold must be at least MinPlushSold and at most MaxPlushSold. Additionally, the number of dolls sold must not exceed MaxDollToPlushRatio multiplied by the number of plush toys sold. The objective is to determine the quantities to buy and sell to maximize total profit.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "CostPlushToy": {
            "description": "Cost to the store for one plush toy",
            "shape": []
        },
        "CostDoll": {
            "description": "Cost to the store for one doll",
            "shape": []
        },
        "InventoryBudget": {
            "description": "Maximum total cost for inventory",
            "shape": []
        },
        "ProfitPlushToy": {
            "description": "Profit earned per plush toy sold",
            "shape": []
        },
        "ProfitDoll": {
            "description": "Profit earned per doll sold",
            "shape": []
        },
        "MinPlushSold": {
            "description": "Minimum number of plush toys sold each month",
            "shape": []
        },
        "MaxPlushSold": {
            "description": "Maximum number of plush toys sold each month",
            "shape": []
        },
        "MaxDollToPlushRatio": {
            "description": "Maximum ratio of number of dolls sold to number of plush toys sold",
            "shape": []
        }
    },
    "variables": {
        "NumberPlushToys": {
            "description": "The number of plush toys purchased",
            "type": "continuous",
            "shape": []
        },
        "NumberDolls": {
            "description": "The number of dolls purchased",
            "type": "continuous",
            "shape": []
        },
        "NumberPlushToysSold": {
            "description": "The number of plush toys sold each month",
            "type": "continuous",
            "shape": []
        },
        "NumberDollsSold": {
            "description": "The number of dolls sold each month",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total cost of purchasing plush toys and dolls must not exceed InventoryBudget.",
            "formulation": "NumberPlushToys \\cdot CostPlushToy + NumberDolls \\cdot CostDoll \\leq InventoryBudget",
            "code": {
                "gurobipy": "model.addConstr(NumberPlushToys * CostPlushToy + NumberDolls * CostDoll <= InventoryBudget)"
            }
        },
        {
            "description": "The number of plush toys sold must be at least MinPlushSold and at most MaxPlushSold.",
            "formulation": "NumberPlushToysSold \\geq MinPlushSold \\n NumberPlushToysSold \\leq MaxPlushSold",
            "code": {
                "gurobipy": "model.addConstr(NumberPlushToysSold >= MinPlushSold)\nmodel.addConstr(NumberPlushToysSold <= MaxPlushSold)"
            }
        },
        {
            "description": "The number of dolls sold must not exceed MaxDollToPlushRatio multiplied by the number of plush toys sold.",
            "formulation": "NumberDollsSold \\leq MaxDollToPlushRatio \\times NumberPlushToysSold",
            "code": {
                "gurobipy": "model.addConstr(NumberDollsSold <= MaxDollToPlushRatio * NumberPlushToysSold)"
            }
        },
        {
            "description": "The quantity of plush toys purchased must be at least equal to the number of plush toys sold.",
            "formulation": "NumberPlushToys \\geq NumberPlushToysSold",
            "code": {
                "gurobipy": "model.addConstr(NumberPlushToys >= NumberPlushToysSold)"
            }
        },
        {
            "description": "The quantity of dolls purchased must be at least equal to the number of dolls sold.",
            "formulation": "NumberDolls \\geq NumberDollsSold",
            "code": {
                "gurobipy": "model.addConstr(NumberDolls >= NumberDollsSold)"
            }
        }
    ],
    "objective": {
        "description": "Total profit is the sum of ProfitPlushToy multiplied by the number of plush toys sold and ProfitDoll multiplied by the number of dolls sold. The objective is to maximize total profit.",
        "formulation": "Max \\ ProfitPlushToy \\times NumberPlushToysSold + ProfitDoll \\times NumberDollsSold",
        "code": {
            "gurobipy": "model.setObjective(ProfitPlushToy * NumberPlushToysSold + ProfitDoll * NumberDollsSold, GRB.MAXIMIZE)"
        }
    }
}