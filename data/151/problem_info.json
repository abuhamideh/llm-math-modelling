{
    "parametrized_description": "A toy store decides to deliver gifts using two shipping companies. The new company can deliver NewCompanyCapacity gifts per trip while the old company can deliver OldCompanyCapacity gifts per trip. The new company uses NewCompanyDiesel liters of diesel per trip, whereas the old company uses OldCompanyDiesel liters of diesel per trip. The toy store needs to deliver at least MinimumGifts gifts. There can be at most MaxTripsNewCompany trips made by the new shipping company. To ensure that the old company does not go out of business, at least MinimumOldCompanyTripPercentage of all trips must be made by the old shipping company. The objective is to determine the number of trips each company should make to minimize the total amount of diesel used.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "NewCompanyCapacity": {
            "description": "Delivery capacity per trip of the new shipping company",
            "shape": []
        },
        "OldCompanyCapacity": {
            "description": "Delivery capacity per trip of the old shipping company",
            "shape": []
        },
        "NewCompanyDiesel": {
            "description": "Diesel consumption per trip of the new shipping company",
            "shape": []
        },
        "OldCompanyDiesel": {
            "description": "Diesel consumption per trip of the old shipping company",
            "shape": []
        },
        "MinimumGifts": {
            "description": "Minimum number of gifts to deliver",
            "shape": []
        },
        "MaxTripsNewCompany": {
            "description": "Maximum number of trips by the new shipping company",
            "shape": []
        },
        "MinimumOldCompanyTripPercentage": {
            "description": "Minimum percentage of trips that must be made by the old shipping company",
            "shape": []
        }
    },
    "variables": {
        "TripsNewCompany": {
            "description": "The number of trips made by the new shipping company",
            "type": "continuous",
            "shape": []
        },
        "TripsOldCompany": {
            "description": "The number of trips made by the old shipping company",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total number of gifts delivered by the new and old shipping companies must be at least MinimumGifts.",
            "formulation": "NewCompanyCapacity \\times TripsNewCompany + OldCompanyCapacity \\times TripsOldCompany \\geq MinimumGifts",
            "code": {
                "gurobipy": "model.addConstr(NewCompanyCapacity * TripsNewCompany + OldCompanyCapacity * TripsOldCompany >= MinimumGifts)"
            }
        },
        {
            "description": "The number of trips made by the new shipping company cannot exceed MaxTripsNewCompany.",
            "formulation": "TripsNewCompany \\leq MaxTripsNewCompany",
            "code": {
                "gurobipy": "model.addConstr(TripsNewCompany <= MaxTripsNewCompany)"
            }
        },
        {
            "description": "At least MinimumOldCompanyTripPercentage proportion of all trips must be made by the old shipping company.",
            "formulation": "TripsOldCompany \\geq MinimumOldCompanyTripPercentage \\times ( TripsOldCompany + TripsNewCompany )",
            "code": {
                "gurobipy": "model.addConstr(TripsOldCompany >= MinimumOldCompanyTripPercentage * (TripsOldCompany + TripsNewCompany))"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total amount of diesel used, which is the sum of diesel consumed by the new and old shipping companies.",
        "formulation": "Min NewCompanyDiesel \\times TripsNewCompany + OldCompanyDiesel \\times TripsOldCompany",
        "code": {
            "gurobipy": "model.setObjective(NewCompanyDiesel * TripsNewCompany + OldCompanyDiesel * TripsOldCompany, GRB.MINIMIZE)"
        }
    }
}