{
    "parametrized_description": "A city employs seasonal and permanent snow removers. A seasonal snow remover works HoursSeasonal hours per shift and gets paid PaymentSeasonal. A permanent snow remover works HoursPermanent hours per shift and gets paid PaymentPermanent. Currently the city needs RequiredLaborHours hours of snow remover labor after a heavy snowfall. If the city has a budget of TotalBudget, how many of each type of worker should be hired to minimize the total number of snow removers?",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "HoursSeasonal": {
            "description": "Number of hours per shift for a seasonal snow remover",
            "shape": []
        },
        "PaymentSeasonal": {
            "description": "Payment per shift for a seasonal snow remover",
            "shape": []
        },
        "HoursPermanent": {
            "description": "Number of hours per shift for a permanent snow remover",
            "shape": []
        },
        "PaymentPermanent": {
            "description": "Payment per shift for a permanent snow remover",
            "shape": []
        },
        "RequiredLaborHours": {
            "description": "Total required labor hours after a heavy snowfall",
            "shape": []
        },
        "TotalBudget": {
            "description": "Total budget available for hiring snow removers",
            "shape": []
        }
    },
    "variables": {
        "NumberSeasonal": {
            "description": "The number of seasonal snow removers hired",
            "type": "continuous",
            "shape": [
                "NonNegative Integer"
            ]
        },
        "NumberPermanent": {
            "description": "The number of permanent snow removers hired",
            "type": "continuous",
            "shape": [
                "NonNegative Integer"
            ]
        }
    },
    "constraints": [
        {
            "description": "The total labor hours provided by seasonal and permanent snow removers must meet or exceed RequiredLaborHours.",
            "formulation": "HoursSeasonal \\times NumberSeasonal + HoursPermanent \\times NumberPermanent \\geq RequiredLaborHours",
            "code": {
                "gurobipy": "model.addConstr(HoursSeasonal * NumberSeasonal + HoursPermanent * NumberPermanent >= RequiredLaborHours)"
            }
        },
        {
            "description": "The total payment for seasonal and permanent snow removers must not exceed TotalBudget.",
            "formulation": "NumberSeasonal \\times PaymentSeasonal + NumberPermanent \\times PaymentPermanent \\leq TotalBudget",
            "code": {
                "gurobipy": "model.addConstr(NumberSeasonal * PaymentSeasonal + NumberPermanent * PaymentPermanent <= TotalBudget)"
            }
        }
    ],
    "objective": {
        "description": "The objective is to minimize the total number of snow removers, which is the sum of seasonal and permanent snow removers hired.",
        "formulation": "Min \\left( NumberSeasonal + NumberPermanent \\right )",
        "code": {
            "gurobipy": "model.setObjective(quicksum([NumberSeasonal, NumberPermanent]), GRB.MINIMIZE)"
        }
    }
}