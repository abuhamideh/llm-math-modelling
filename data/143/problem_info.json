{
    "parametrized_description": "A soda company uses old and new vans to transport soda bottles to stores. Each old van has a capacity of OldVanCapacity bottles and produces OldVanPollution units of pollution. Each new van has a capacity of NewVanCapacity bottles and produces NewVanPollution units of pollution. The company needs to transport at least MinimumBottles soda bottles and can use at most MaximumNewVans new vans. The goal is to determine the number of old and new vans to minimize the total amount of pollution produced.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "OldVanCapacity": {
            "description": "Capacity of an old van in soda bottles",
            "shape": []
        },
        "NewVanCapacity": {
            "description": "Capacity of a new van in soda bottles",
            "shape": []
        },
        "OldVanPollution": {
            "description": "Pollution produced by an old van in units",
            "shape": []
        },
        "NewVanPollution": {
            "description": "Pollution produced by a new van in units",
            "shape": []
        },
        "MinimumBottles": {
            "description": "Minimum number of soda bottles that need to be sent",
            "shape": []
        },
        "MaximumNewVans": {
            "description": "Maximum number of new vans that can be used",
            "shape": []
        }
    },
    "variables": {
        "NumberOfOldVans": {
            "description": "The number of old vans used",
            "type": "continuous",
            "shape": []
        },
        "NumberOfNewVans": {
            "description": "The number of new vans used",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "Each old van has a capacity of OldVanCapacity bottles and each new van has a capacity of NewVanCapacity bottles. The total number of bottles transported must be at least MinimumBottles.",
            "formulation": "OldVanCapacity \\times NumberOfOldVans + NewVanCapacity \\times NumberOfNewVans \\geq MinimumBottles",
            "code": {
                "gurobipy": "model.addConstr(OldVanCapacity * NumberOfOldVans + NewVanCapacity * NumberOfNewVans >= MinimumBottles)"
            }
        },
        {
            "description": "The number of new vans used must not exceed MaximumNewVans.",
            "formulation": "NumberOfNewVans \\leq MaximumNewVans",
            "code": {
                "gurobipy": "model.addConstr(NumberOfNewVans <= MaximumNewVans)"
            }
        }
    ],
    "objective": {
        "description": "Total pollution is the sum of the pollution produced by all old vans and new vans. The objective is to minimize the total pollution.",
        "formulation": "Min \\ NumberOfOldVans \\times OldVanPollution + NumberOfNewVans \\times NewVanPollution",
        "code": {
            "gurobipy": "model.setObjective(NumberOfOldVans * OldVanPollution + NumberOfNewVans * NewVanPollution, GRB.MINIMIZE)"
        }
    }
}