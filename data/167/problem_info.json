{
    "parametrized_description": "A farmer sends corn to the city by either tractor or car. A tractor can carry TractorCapacity kilograms of corn while a car can carry CarCapacity kilograms of corn. Since tractors are very slow, the number of cars used must be at least MinimumCarMultiplier times the number of tractors used. If at least MinimumCornToSend kilograms of corn need to be sent to the city, minimize the total number of tractors and cars needed.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "TractorCapacity": {
            "description": "Capacity of one tractor in kilograms",
            "shape": []
        },
        "CarCapacity": {
            "description": "Capacity of one car in kilograms",
            "shape": []
        },
        "MinimumCarMultiplier": {
            "description": "Minimum multiplier for the number of cars relative to tractors",
            "shape": []
        },
        "MinimumCornToSend": {
            "description": "Minimum total amount of corn to send in kilograms",
            "shape": []
        }
    },
    "variables": {
        "NumberOfCarsUsed": {
            "description": "The number of cars used",
            "type": "continuous",
            "shape": [
                "NonNegative",
                "Integer"
            ]
        },
        "NumberOfTractorsUsed": {
            "description": "The number of tractors used",
            "type": "continuous",
            "shape": [
                "NonNegative",
                "Integer"
            ]
        },
        "CornTractor": {
            "description": "The amount of corn carried by tractors in kilograms",
            "type": "continuous",
            "shape": [
                "NonNegative"
            ]
        },
        "CornCar": {
            "description": "The amount of corn carried by cars in kilograms",
            "type": "continuous",
            "shape": [
                "NonNegative"
            ]
        }
    },
    "constraints": [
        {
            "description": "The number of cars used must be at least MinimumCarMultiplier times the number of tractors used.",
            "formulation": "NumberOfCarsUsed \\geq MinimumCarMultiplier \\times NumberOfTractorsUsed",
            "code": {
                "gurobipy": "model.addConstr(NumberOfCarsUsed >= MinimumCarMultiplier * NumberOfTractorsUsed)"
            }
        },
        {
            "description": "Each tractor can carry TractorCapacity kilograms of corn.",
            "formulation": "CornTractor \\leq NumberOfTractorsUsed \\times TractorCapacity",
            "code": {
                "gurobipy": "model.addConstr(CornTractor <= NumberOfTractorsUsed * TractorCapacity)"
            }
        },
        {
            "description": "Each car can carry CarCapacity kilograms of corn.",
            "formulation": "CornCar \\leq CarCapacity \\times NumberOfCarsUsed",
            "code": {
                "gurobipy": "model.addConstr(CornCar <= CarCapacity * NumberOfCarsUsed)"
            }
        },
        {
            "description": "At least MinimumCornToSend kilograms of corn must be sent to the city.",
            "formulation": "CornTractor + CornCar \\geq MinimumCornToSend",
            "code": {
                "gurobipy": "model.addConstr(CornTractor + CornCar >= MinimumCornToSend)"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total number of tractors and cars needed.",
        "formulation": "Min \\left( NumberOfCarsUsed + NumberOfTractorsUsed \\right )",
        "code": {
            "gurobipy": "model.setObjective(NumberOfCarsUsed + NumberOfTractorsUsed, GRB.MINIMIZE)"
        }
    }
}