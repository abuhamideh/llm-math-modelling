{
    "parametrized_description": "A bakery produces almond and pistachio croissants. An almond croissant requires ButterPerAlmondCroissant units of butter and FlourPerAlmondCroissant units of flour. A pistachio croissant requires ButterPerPistachioCroissant units of butter and FlourPerPistachioCroissant units of flour. The bakery has available AvailableButter units of butter and AvailableFlour units of flour. At least MinAlmondToPistachioRatio times as many almond croissants should be made as pistachio croissants. Making an almond croissant takes ProductionTimeAlmondCroissant minutes and making a pistachio croissant takes ProductionTimePistachioCroissant minutes. How many of each should be made to minimize the total production time?",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "AvailableButter": {
            "description": "Amount of butter available",
            "shape": []
        },
        "AvailableFlour": {
            "description": "Amount of flour available",
            "shape": []
        },
        "ButterPerAlmondCroissant": {
            "description": "Amount of butter required to produce one almond croissant",
            "shape": []
        },
        "FlourPerAlmondCroissant": {
            "description": "Amount of flour required to produce one almond croissant",
            "shape": []
        },
        "ButterPerPistachioCroissant": {
            "description": "Amount of butter required to produce one pistachio croissant",
            "shape": []
        },
        "FlourPerPistachioCroissant": {
            "description": "Amount of flour required to produce one pistachio croissant",
            "shape": []
        },
        "MinAlmondToPistachioRatio": {
            "description": "Minimum ratio of almond croissants to pistachio croissants",
            "shape": []
        },
        "ProductionTimeAlmondCroissant": {
            "description": "Production time per almond croissant",
            "shape": []
        },
        "ProductionTimePistachioCroissant": {
            "description": "Production time per pistachio croissant",
            "shape": []
        }
    },
    "variables": {
        "QuantityAlmondCroissant": {
            "description": "The number of almond croissants produced",
            "type": "continuous",
            "shape": []
        },
        "QuantityPistachioCroissant": {
            "description": "The number of pistachio croissants produced",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total amount of butter used by almond and pistachio croissants cannot exceed AvailableButter.",
            "formulation": "ButterPerAlmondCroissant \\times QuantityAlmondCroissant + ButterPerPistachioCroissant \\times QuantityPistachioCroissant \\leq AvailableButter",
            "code": {
                "gurobipy": "model.addConstr(ButterPerAlmondCroissant * QuantityAlmondCroissant + ButterPerPistachioCroissant * QuantityPistachioCroissant <= AvailableButter)"
            }
        },
        {
            "description": "The total amount of flour used by almond and pistachio croissants cannot exceed AvailableFlour.",
            "formulation": "FlourPerAlmondCroissant \\times QuantityAlmondCroissant + FlourPerPistachioCroissant \\times QuantityPistachioCroissant \\leq AvailableFlour",
            "code": {
                "gurobipy": "model.addConstr(FlourPerAlmondCroissant * QuantityAlmondCroissant + \n                FlourPerPistachioCroissant * QuantityPistachioCroissant <= AvailableFlour, \n                name='FlourConstraint')"
            }
        },
        {
            "description": "The number of almond croissants produced must be at least MinAlmondToPistachioRatio times the number of pistachio croissants.",
            "formulation": "QuantityAlmondCroissant \\geq MinAlmondToPistachioRatio \\times QuantityPistachioCroissant",
            "code": {
                "gurobipy": "model.addConstr(QuantityAlmondCroissant >= MinAlmondToPistachioRatio * QuantityPistachioCroissant)"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total production time, which is the sum of (ProductionTimeAlmondCroissant multiplied by the number of almond croissants) and (ProductionTimePistachioCroissant multiplied by the number of pistachio croissants).",
        "formulation": "Min \\ ProductionTimeAlmondCroissant \\cdot QuantityAlmondCroissant + ProductionTimePistachioCroissant \\cdot QuantityPistachioCroissant",
        "code": {
            "gurobipy": "model.setObjective(ProductionTimeAlmondCroissant * QuantityAlmondCroissant + ProductionTimePistachioCroissant * QuantityPistachioCroissant, GRB.MINIMIZE)"
        }
    }
}