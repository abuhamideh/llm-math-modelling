{
    "parametrized_description": "A science store produces NumBoxTypes different box types. Each box type requires MetalPerBoxType units of metal and AcidPerBoxType units of acid to produce. Each box type generates FoamPerBoxType units of foam and emits HeatPerBoxType units of heat. The store has MetalAvailable units of metal and AcidAvailable units of acid available. The total heat emitted by all produced boxes must not exceed MaxHeat units. The objective is to determine the number of each box type to produce in order to maximize the total amount of foam produced.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "MetalAvailable": {
            "description": "Total units of metal available",
            "shape": []
        },
        "AcidAvailable": {
            "description": "Total units of acid available",
            "shape": []
        },
        "MaxHeat": {
            "description": "Maximum units of heat that can be given off",
            "shape": []
        },
        "NumBoxTypes": {
            "description": "Number of different box types",
            "shape": []
        },
        "MetalPerBoxType": {
            "description": "Units of metal required per box type",
            "shape": [
                "NumBoxTypes"
            ]
        },
        "AcidPerBoxType": {
            "description": "Units of acid required per box type",
            "shape": [
                "NumBoxTypes"
            ]
        },
        "FoamPerBoxType": {
            "description": "Units of foam produced per box type",
            "shape": [
                "NumBoxTypes"
            ]
        },
        "HeatPerBoxType": {
            "description": "Units of heat given off per box type",
            "shape": [
                "NumBoxTypes"
            ]
        }
    },
    "variables": {
        "BoxesProduced": {
            "description": "The number of boxes produced for each box type",
            "type": "continuous",
            "shape": [
                "NumBoxTypes"
            ]
        }
    },
    "constraints": [
        {
            "description": "The total metal used for production cannot exceed MetalAvailable units.",
            "formulation": "\\sum_{i=1}^{NumBoxTypes} MetalPerBoxType_i \\times BoxesProduced_i \\leq MetalAvailable",
            "code": {
                "gurobipy": "model.addConstr(quicksum(MetalPerBoxType[i] * BoxesProduced[i] for i in range(NumBoxTypes)) <= MetalAvailable)"
            }
        },
        {
            "description": "The total acid used for production cannot exceed AcidAvailable units.",
            "formulation": "\\sum_{i=1}^{NumBoxTypes} AcidPerBoxType_i \\times BoxesProduced_i \\leq AcidAvailable",
            "code": {
                "gurobipy": "model.addConstr(quicksum(AcidPerBoxType[i] * BoxesProduced[i] for i in range(NumBoxTypes)) <= AcidAvailable)"
            }
        },
        {
            "description": "The total heat emitted by all produced boxes must not exceed MaxHeat units.",
            "formulation": "\\sum_{i=1}^{\\text{NumBoxTypes}} \\text{HeatPerBoxType}_i \\times \\text{BoxesProduced}_i \\leq \\text{MaxHeat}",
            "code": {
                "gurobipy": "model.addConstr(quicksum(HeatPerBoxType[i] * BoxesProduced[i] for i in range(NumBoxTypes)) <= MaxHeat)"
            }
        }
    ],
    "objective": {
        "description": "Maximize the total foam produced, which is the sum of FoamPerBoxType units multiplied by the number of each box type produced.",
        "formulation": "Max \\sum_{i=1}^{\\text{NumBoxTypes}} \\text{FoamPerBoxType}_i \\times \\text{BoxesProduced}_i",
        "code": {
            "gurobipy": "model.setObjective(quicksum(FoamPerBoxType[i] * BoxesProduced[i] for i in range(NumBoxTypes)), GRB.MAXIMIZE)"
        }
    }
}