{
    "parametrized_description": "A farmer needs to transport TotalCows cows using helicopters and trucks. Each helicopter trip can transport HelicopterCapacity cows and produces HelicopterPollution units of pollution. Each truck trip can transport TruckCapacity cows and produces TruckPollution units of pollution. Due to budget constraints, at most MaxTruckTrips truck trips can be made. The objective is to minimize the total pollution produced.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "TotalCows": {
            "description": "The total number of cows that need to be transported",
            "shape": []
        },
        "HelicopterCapacity": {
            "description": "The number of cows that a helicopter can transport per trip",
            "shape": []
        },
        "HelicopterPollution": {
            "description": "The amount of pollution created by a helicopter per trip",
            "shape": []
        },
        "TruckCapacity": {
            "description": "The number of cows that a truck can transport per trip",
            "shape": []
        },
        "TruckPollution": {
            "description": "The amount of pollution created by a truck per trip",
            "shape": []
        },
        "MaxTruckTrips": {
            "description": "The maximum number of truck trips that can be made due to budget constraints",
            "shape": []
        }
    },
    "variables": {
        "NumHelicopterTrips": {
            "description": "The number of trips made by helicopters",
            "type": "continuous",
            "shape": []
        },
        "NumTruckTrips": {
            "description": "The number of trips made by trucks",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total number of cows transported by helicopters and trucks must equal TotalCows.",
            "formulation": "HelicopterCapacity \\times NumHelicopterTrips + TruckCapacity \\times NumTruckTrips = TotalCows",
            "code": {
                "gurobipy": "model.addConstr(HelicopterCapacity * NumHelicopterTrips + TruckCapacity * NumTruckTrips == TotalCows)"
            }
        },
        {
            "description": "At most MaxTruckTrips truck trips can be made.",
            "formulation": "NumTruckTrips \\leq MaxTruckTrips",
            "code": {
                "gurobipy": "model.addConstr(NumTruckTrips <= MaxTruckTrips)"
            }
        }
    ],
    "objective": {
        "description": "Total pollution is the sum of the pollution from helicopter trips and truck trips. The objective is to minimize the total pollution produced.",
        "formulation": "Min HelicopterPollution \\cdot NumHelicopterTrips + TruckPollution \\cdot NumTruckTrips",
        "code": {
            "gurobipy": "model.setObjective(HelicopterPollution * NumHelicopterTrips + TruckPollution * NumTruckTrips, GRB.MINIMIZE)"
        }
    }
}