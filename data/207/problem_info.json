{
    "parametrized_description": "Super Shop sells two types of snack mixes. The first mix contains PercentageCatPawMix1 of cat paw snacks and a corresponding percentage of gold shark snacks. The second mix contains PercentageCatPawMix2 of cat paw snacks and a corresponding percentage of gold shark snacks. The store has AvailableCatPawKg kilograms of cat paw snacks and AvailableGoldSharkKg kilograms of gold shark snacks available. The profit per kilogram of the first mix is ProfitPerKgMix1 and the profit per kilogram of the second mix is ProfitPerKgMix2. Determine the number of kilograms of each mix to prepare in order to maximize profit.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "PercentageCatPawMix1": {
            "description": "Percentage of cat paw snacks in the first mix",
            "shape": []
        },
        "PercentageCatPawMix2": {
            "description": "Percentage of cat paw snacks in the second mix",
            "shape": []
        },
        "AvailableCatPawKg": {
            "description": "Available kilograms of cat paw snacks",
            "shape": []
        },
        "AvailableGoldSharkKg": {
            "description": "Available kilograms of gold shark snacks",
            "shape": []
        },
        "ProfitPerKgMix1": {
            "description": "Profit per kilogram of the first mix",
            "shape": []
        },
        "ProfitPerKgMix2": {
            "description": "Profit per kilogram of the second mix",
            "shape": []
        }
    },
    "variables": {
        "Mix1": {
            "description": "The quantity of the first mix in kilograms",
            "type": "continuous",
            "shape": []
        },
        "Mix2": {
            "description": "The quantity of the second mix in kilograms",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total cat paw snacks used in both mixes must not exceed AvailableCatPawKg kilograms, calculated as (PercentageCatPawMix1 * Mix1) + (PercentageCatPawMix2 * Mix2).",
            "formulation": "PercentageCatPawMix1 \\times Mix1 + PercentageCatPawMix2 \\times Mix2 \\leq AvailableCatPawKg",
            "code": {
                "gurobipy": "model.addConstr(PercentageCatPawMix1 * Mix1 + PercentageCatPawMix2 * Mix2 <= AvailableCatPawKg)"
            }
        },
        {
            "description": "The total gold shark snacks used in both mixes must not exceed AvailableGoldSharkKg kilograms, calculated as ((100 - PercentageCatPawMix1) * Mix1) + ((100 - PercentageCatPawMix2) * Mix2).",
            "formulation": "\\frac{(100 - PercentageCatPawMix1)}{100} \\cdot Mix1 + \\frac{(100 - PercentageCatPawMix2)}{100} \\cdot Mix2 \\leq AvailableGoldSharkKg",
            "code": {
                "gurobipy": "model.addConstr(((100 - PercentageCatPawMix1) / 100) * Mix1 + ((100 - PercentageCatPawMix2) / 100) * Mix2 <= AvailableGoldSharkKg)"
            }
        }
    ],
    "objective": {
        "description": "The objective is to maximize the total profit, calculated as (ProfitPerKgMix1 * Mix1) + (ProfitPerKgMix2 * Mix2).",
        "formulation": "Max \\left( ProfitPerKgMix1 \\times Mix1 + ProfitPerKgMix2 \\times Mix2 \\right)",
        "code": {
            "gurobipy": "model.setObjective(ProfitPerKgMix1 * Mix1 + ProfitPerKgMix2 * Mix2, GRB.MAXIMIZE)"
        }
    }
}