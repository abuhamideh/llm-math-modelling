{
    "parametrized_description": "A popup clinic administers two types of virus tests: spit tests and swab tests. Administering a spit test takes TimeSpitTest minutes and administering a swab test takes TimeSwabTest minutes. At least MinRatioSpitToSwab times as many spit tests as swab tests must be administered, and at least MinSwabTests swab tests must be administered. The clinic operates for TotalOperatingTime minutes. The objective is to maximize the total number of tests administered.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "TimeSpitTest": {
            "description": "Time to administer a spit test",
            "shape": []
        },
        "TimeSwabTest": {
            "description": "Time to administer a swab test",
            "shape": []
        },
        "MinRatioSpitToSwab": {
            "description": "Minimum ratio of spit tests to swab tests",
            "shape": []
        },
        "MinSwabTests": {
            "description": "Minimum number of swab tests to administer",
            "shape": []
        },
        "TotalOperatingTime": {
            "description": "Total operating time in minutes",
            "shape": []
        }
    },
    "variables": {
        "NumberOfSpitTests": {
            "description": "The number of spit tests to administer",
            "type": "continuous",
            "shape": []
        },
        "NumberOfSwabTests": {
            "description": "The number of swab tests to administer",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "Administering a spit test takes TimeSpitTest minutes and administering a swab test takes TimeSwabTest minutes. The total operating time cannot exceed TotalOperatingTime minutes.",
            "formulation": "TimeSpitTest \\times NumberOfSpitTests + TimeSwabTest \\times NumberOfSwabTests \\leq TotalOperatingTime",
            "code": {
                "gurobipy": "model.addConstr(TimeSpitTest * NumberOfSpitTests + TimeSwabTest * NumberOfSwabTests <= TotalOperatingTime)"
            }
        },
        {
            "description": "At least MinRatioSpitToSwab times as many spit tests as swab tests must be administered.",
            "formulation": "NumberOfSpitTests \\geq MinRatioSpitToSwab \\times NumberOfSwabTests",
            "code": {
                "gurobipy": "model.addConstr(NumberOfSpitTests >= MinRatioSpitToSwab * NumberOfSwabTests)"
            }
        },
        {
            "description": "At least MinSwabTests swab tests must be administered.",
            "formulation": "NumberOfSwabTests \\geq MinSwabTests",
            "code": {
                "gurobipy": "model.addConstr(NumberOfSwabTests >= MinSwabTests)"
            }
        }
    ],
    "objective": {
        "description": "The total number of tests administered is the sum of spit tests and swab tests. The objective is to maximize the total number of tests administered.",
        "formulation": "Max NumberOfSpitTests + NumberOfSwabTests",
        "code": {
            "gurobipy": "model.setObjective(NumberOfSpitTests + NumberOfSwabTests, GRB.MAXIMIZE)"
        }
    }
}