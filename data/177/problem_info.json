{
    "parametrized_description": "A farmer sends boxes of corn via ferry and light rail. Each ferry trip transports FerryTripCapacity boxes, and each light rail trip transports LightRailTripCapacity boxes. The number of light rail trips must be at least MinLightRailMultiplier times the number of ferry trips. The farmer aims to send at least MinBoxesToSend boxes of corn. The objective is to minimize the total number of ferry and light rail trips.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "FerryTripCapacity": {
            "description": "Number of boxes of corn that can be sent per ferry trip",
            "shape": []
        },
        "LightRailTripCapacity": {
            "description": "Number of boxes of corn that can be sent per light rail trip",
            "shape": []
        },
        "MinLightRailMultiplier": {
            "description": "Minimum multiple that the number of light rail trips must be compared to ferry trips",
            "shape": []
        },
        "MinBoxesToSend": {
            "description": "Minimum number of boxes of corn that the farmer wants to send",
            "shape": []
        }
    },
    "variables": {
        "FerryTrips": {
            "description": "The number of ferry trips",
            "type": "continuous",
            "shape": []
        },
        "LightRailTrips": {
            "description": "The number of light rail trips",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The number of light rail trips must be at least MinLightRailMultiplier times the number of ferry trips.",
            "formulation": "LightRailTrips \\geq MinLightRailMultiplier \\times FerryTrips",
            "code": {
                "gurobipy": "model.addConstr(LightRailTrips >= MinLightRailMultiplier * FerryTrips)"
            }
        },
        {
            "description": "FerryTripCapacity multiplied by the number of ferry trips plus LightRailTripCapacity multiplied by the number of light rail trips must be at least MinBoxesToSend.",
            "formulation": "FerryTripCapacity \\cdot FerryTrips + LightRailTripCapacity \\cdot LightRailTrips \\geq MinBoxesToSend",
            "code": {
                "gurobipy": "model.addConstr(FerryTripCapacity * FerryTrips + LightRailTripCapacity * LightRailTrips >= MinBoxesToSend)"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total number of ferry and light rail trips.",
        "formulation": "Min FerryTrips + LightRailTrips",
        "code": {
            "gurobipy": "model.setObjective(quicksum([FerryTrips, LightRailTrips]), GRB.MINIMIZE)"
        }
    }
}