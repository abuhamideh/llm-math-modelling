{
    "parametrized_description": "A young boy aims to meet at least MinCalcium units of calcium and MinIron units of iron per day by consuming milk and vegetables. Each serving of milk costs MilkCost and contains MilkCalcium units of calcium and MilkIron units of iron. Each serving of vegetables costs VegetableCost and contains VegetableCalcium units of calcium and VegetableIron units of iron. The objective is to determine the number of milk and vegetable servings to minimize the total cost.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "MinCalcium": {
            "description": "Minimum required units of calcium per day",
            "shape": []
        },
        "MinIron": {
            "description": "Minimum required units of iron per day",
            "shape": []
        },
        "MilkCost": {
            "description": "Cost of a glass of milk",
            "shape": []
        },
        "MilkCalcium": {
            "description": "Units of calcium in a glass of milk",
            "shape": []
        },
        "MilkIron": {
            "description": "Units of iron in a glass of milk",
            "shape": []
        },
        "VegetableCost": {
            "description": "Cost of a plate of vegetables",
            "shape": []
        },
        "VegetableCalcium": {
            "description": "Units of calcium in a plate of vegetables",
            "shape": []
        },
        "VegetableIron": {
            "description": "Units of iron in a plate of vegetables",
            "shape": []
        }
    },
    "variables": {
        "MilkAmount": {
            "description": "The number of glasses of milk consumed per day",
            "type": "continuous",
            "shape": []
        },
        "VegetablesAmount": {
            "description": "The number of plates of vegetables consumed per day",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total calcium obtained from milk and vegetables must be at least MinCalcium units per day.",
            "formulation": "MilkCalcium \\cdot MilkAmount + VegetableCalcium \\cdot VegetablesAmount \\geq MinCalcium",
            "code": {
                "gurobipy": "model.addConstr(MilkCalcium * MilkAmount + VegetableCalcium * VegetablesAmount >= MinCalcium)"
            }
        },
        {
            "description": "The total iron obtained from milk and vegetables must be at least MinIron units per day.",
            "formulation": "MilkIron \\cdot MilkAmount + VegetableIron \\cdot VegetablesAmount \\geq MinIron",
            "code": {
                "gurobipy": "model.addConstr(MilkIron * MilkAmount + VegetableIron * VegetablesAmount >= MinIron, 'IronRequirement')"
            }
        },
        {
            "description": "The number of milk servings and vegetable servings must be non-negative.",
            "formulation": "MilkAmount \\geq 0 \\n VegetablesAmount \\geq 0",
            "code": {
                "gurobipy": "model.addConstr(MilkAmount >= 0, \"MilkAmount_nonnegative\")\nmodel.addConstr(VegetablesAmount >= 0, \"VegetablesAmount_nonnegative\")"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total cost, which is the sum of the costs of milk servings and vegetable servings.",
        "formulation": "Min \\; MilkCost \\cdot MilkAmount + VegetableCost \\cdot VegetablesAmount",
        "code": {
            "gurobipy": "model.setObjective(MilkCost * MilkAmount + VegetableCost * VegetablesAmount, GRB.MINIMIZE)"
        }
    }
}