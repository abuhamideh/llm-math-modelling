{
    "parametrized_description": "A smoothie shop produces AcaiSmoothies and BananaSmoothies. Each AcaiSmoothie requires AcaiBerriesPerAcaiSmoothie units of acai berries and WaterPerAcaiSmoothie units of water. Each BananaSmoothie requires BananaChocolatePerBananaSmoothie units of banana chocolate and WaterPerBananaSmoothie units of water. The number of BananaSmoothies produced must be greater than the number of AcaiSmoothies produced. At least MinAcaiProportion proportion of the total smoothies made must be AcaiSmoothies. The shop has AcaiBerriesAvailable units of acai berries and BananaChocolateAvailable units of banana chocolate available. The objective is to minimize the total amount of water used.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "AcaiBerriesAvailable": {
            "description": "Total units of acai berries available",
            "shape": []
        },
        "BananaChocolateAvailable": {
            "description": "Total units of banana chocolate available",
            "shape": []
        },
        "AcaiBerriesPerAcaiSmoothie": {
            "description": "Units of acai berries required per acai berry smoothie",
            "shape": []
        },
        "WaterPerAcaiSmoothie": {
            "description": "Units of water required per acai berry smoothie",
            "shape": []
        },
        "BananaChocolatePerBananaSmoothie": {
            "description": "Units of banana chocolate required per banana chocolate smoothie",
            "shape": []
        },
        "WaterPerBananaSmoothie": {
            "description": "Units of water required per banana chocolate smoothie",
            "shape": []
        },
        "MinAcaiProportion": {
            "description": "Minimum proportion of smoothies that must be acai berry smoothies",
            "shape": []
        }
    },
    "variables": {
        "AcaiSmoothies": {
            "description": "The number of AcaiSmoothies produced",
            "type": "continuous",
            "shape": []
        },
        "BananaSmoothies": {
            "description": "The number of BananaSmoothies produced",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total units of acai berries used for AcaiSmoothies cannot exceed AcaiBerriesAvailable.",
            "formulation": "AcaiBerriesPerAcaiSmoothie \\times AcaiSmoothies \\leq AcaiBerriesAvailable",
            "code": {
                "gurobipy": "model.addConstr(AcaiBerriesPerAcaiSmoothie * AcaiSmoothies <= AcaiBerriesAvailable)"
            }
        },
        {
            "description": "The total units of banana chocolate used for BananaSmoothies cannot exceed BananaChocolateAvailable.",
            "formulation": "BananaChocolatePerBananaSmoothie \\times BananaSmoothies \\leq BananaChocolateAvailable",
            "code": {
                "gurobipy": "model.addConstr(BananaChocolatePerBananaSmoothie * BananaSmoothies <= BananaChocolateAvailable)"
            }
        },
        {
            "description": "The number of BananaSmoothies produced must be greater than the number of AcaiSmoothies produced.",
            "formulation": "BananaSmoothies - AcaiSmoothies \\geq 0",
            "code": {
                "gurobipy": "model.addConstr(BananaSmoothies - AcaiSmoothies >= 0)"
            }
        },
        {
            "description": "At least MinAcaiProportion proportion of the total smoothies made must be AcaiSmoothies.",
            "formulation": "AcaiSmoothies \\geq MinAcaiProportion \\left( AcaiSmoothies + BananaSmoothies \\right)",
            "code": {
                "gurobipy": "model.addConstr(AcaiSmoothies >= MinAcaiProportion * (AcaiSmoothies + BananaSmoothies))"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total amount of water used, which is the sum of the water used by AcaiSmoothies and BananaSmoothies.",
        "formulation": "Min \\left( WaterPerAcaiSmoothie \\times AcaiSmoothies + WaterPerBananaSmoothie \\times BananaSmoothies \\right)",
        "code": {
            "gurobipy": "model.setObjective(WaterPerAcaiSmoothie * AcaiSmoothies + WaterPerBananaSmoothie * BananaSmoothies, GRB.MINIMIZE)"
        }
    }
}