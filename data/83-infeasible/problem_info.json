{
    "parametrized_description": "A chemical plant can purchase two types of generators, Generator A and Generator B, which use different processes to generate hydrogen. Generator A produces HydrogenProductionA amount of hydrogen and PollutantOutputA units of pollutants per day. Generator B produces HydrogenProductionB amount of hydrogen and PollutantOutputB units of pollutants per day. The plant must produce at least MinHydrogenRequired amount of hydrogen per day and can produce at most MaxPollutantAllowed units of pollutants per day. The objective is to minimize the total number of generators purchased.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "HydrogenProductionA": {
            "description": "Amount of hydrogen produced per day by generator A",
            "shape": []
        },
        "PollutantOutputA": {
            "description": "Amount of pollutants produced per day by generator A",
            "shape": []
        },
        "HydrogenProductionB": {
            "description": "Amount of hydrogen produced per day by generator B",
            "shape": []
        },
        "PollutantOutputB": {
            "description": "Amount of pollutants produced per day by generator B",
            "shape": []
        },
        "MinHydrogenRequired": {
            "description": "Minimum hydrogen required per day",
            "shape": []
        },
        "MaxPollutantAllowed": {
            "description": "Maximum pollutants allowed per day",
            "shape": []
        }
    },
    "variables": {
        "NumberOfGeneratorA": {
            "description": "The number of Generator A used per day",
            "type": "continuous",
            "shape": []
        },
        "NumberOfGeneratorB": {
            "description": "The number of Generator B used per day",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total hydrogen produced by Generator A and Generator B must be at least MinHydrogenRequired per day.",
            "formulation": "HydrogenProductionA \\cdot NumberOfGeneratorA + HydrogenProductionB \\cdot NumberOfGeneratorB \\geq MinHydrogenRequired",
            "code": {
                "gurobipy": "model.addConstr(HydrogenProductionA * NumberOfGeneratorA + HydrogenProductionB * NumberOfGeneratorB >= MinHydrogenRequired)"
            }
        },
        {
            "description": "The total pollutant output from Generator A and Generator B must be at most MaxPollutantAllowed units per day.",
            "formulation": "NumberOfGeneratorA \\cdot PollutantOutputA + NumberOfGeneratorB \\cdot PollutantOutputB \\leq MaxPollutantAllowed",
            "code": {
                "gurobipy": "model.addConstr(NumberOfGeneratorA * PollutantOutputA + NumberOfGeneratorB * PollutantOutputB <= MaxPollutantAllowed)"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total number of generators purchased.",
        "formulation": "Min \\left( NumberOfGeneratorA + NumberOfGeneratorB \\right)",
        "code": {
            "gurobipy": "model.setObjective(NumberOfGeneratorA + NumberOfGeneratorB, GRB.MINIMIZE)"
        }
    }
}