{
    "parametrized_description": "A manufacturing company produces NumProducts different types of sports equipment. Each product requires MaterialRequirement units of materials and TimeRequirement hours to produce. The company has a total of TotalMaterialsAvailable units of materials and TotalLaborHoursAvailable labor hours available. The production must ensure that the number of basketballs is at least MinBasketballToFootballRatio times the number of footballs and that at least MinimumFootballs footballs are produced. The objective is to maximize the total number of sports equipment produced.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "NumProducts": {
            "description": "Number of different sports equipment produced",
            "shape": []
        },
        "MaterialRequirement": {
            "description": "Amount of materials required to produce one unit of each sports equipment",
            "shape": [
                "NumProducts"
            ]
        },
        "TimeRequirement": {
            "description": "Amount of labor hours required to produce one unit of each sports equipment",
            "shape": [
                "NumProducts"
            ]
        },
        "TotalMaterialsAvailable": {
            "description": "Total units of materials available for production",
            "shape": []
        },
        "TotalLaborHoursAvailable": {
            "description": "Total labor hours available for production",
            "shape": []
        },
        "MinBasketballToFootballRatio": {
            "description": "Minimum ratio of basketballs to footballs production",
            "shape": []
        },
        "MinimumFootballs": {
            "description": "Minimum number of footballs to produce",
            "shape": []
        }
    },
    "variables": {
        "ProductionQuantity": {
            "description": "The number of each sports equipment produced",
            "type": "continuous",
            "shape": [
                "NumProducts"
            ]
        },
        "ProductionQuantityBasketballs": {
            "description": "The number of basketballs produced",
            "type": "continuous",
            "shape": []
        },
        "ProductionQuantityFootballs": {
            "description": "The number of footballs produced",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total materials used to produce all sports equipment cannot exceed TotalMaterialsAvailable units.",
            "formulation": "\\sum_{i=1}^{\\text{NumProducts}} \\text{MaterialRequirement}_i \\cdot \\text{ProductionQuantity}_i \\leq \\text{TotalMaterialsAvailable}",
            "code": {
                "gurobipy": "model.addConstr(quicksum(MaterialRequirement[i] * ProductionQuantity[i] for i in range(NumProducts)) <= TotalMaterialsAvailable)"
            }
        },
        {
            "description": "The total labor hours used to produce all sports equipment cannot exceed TotalLaborHoursAvailable labor hours.",
            "formulation": "\\sum_{i=1}^{NumProducts} TimeRequirement_i \\cdot ProductionQuantity_i \\leq TotalLaborHoursAvailable",
            "code": {
                "gurobipy": "model.addConstr(quicksum(TimeRequirement[i] * ProductionQuantity[i] for i in range(NumProducts)) <= TotalLaborHoursAvailable)"
            }
        },
        {
            "description": "The number of basketballs produced must be at least MinBasketballToFootballRatio times the number of footballs produced.",
            "formulation": "ProductionQuantityBasketballs \\geq MinBasketballToFootballRatio \\times ProductionQuantityFootballs",
            "code": {
                "gurobipy": "model.addConstr(ProductionQuantityBasketballs >= MinBasketballToFootballRatio * ProductionQuantityFootballs)"
            }
        },
        {
            "description": "At least MinimumFootballs footballs must be produced.",
            "formulation": "ProductionQuantityFootballs \\geq MinimumFootballs",
            "code": {
                "gurobipy": "model.addConstr(ProductionQuantityFootballs >= MinimumFootballs)"
            }
        }
    ],
    "objective": {
        "description": "Maximize the total number of sports equipment produced.",
        "formulation": "Max \\sum_{k=1}^{NumProducts} ProductionQuantity_k",
        "code": {
            "gurobipy": "model.setObjective(quicksum(ProductionQuantity[k] for k in range(NumProducts)), GRB.MAXIMIZE)"
        }
    }
}