{
    "parametrized_description": "A restaurant produces two types of curry: goat curry and chicken curry. Each bowl of goat curry requires GoatMeatPerGoatCurry units of goat meat and CurryBasePerGoatCurry units of curry base. Each bowl of chicken curry requires ChickenMeatPerChickenCurry units of chicken meat and CurryBasePerChickenCurry units of curry base. The restaurant has TotalGoatMeatAvailable units of goat meat and TotalChickenMeatAvailable units of chicken meat available. At least MinChickenCurryPercentage of the total curry bowls produced must be chicken curry. Additionally, the number of goat curry bowls produced must be greater than the number of chicken curry bowls. The objective is to determine the number of bowls of each type of curry to produce in order to minimize the total units of curry base used.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "GoatMeatPerGoatCurry": {
            "description": "Units of goat meat required to produce one bowl of goat curry",
            "shape": []
        },
        "ChickenMeatPerChickenCurry": {
            "description": "Units of chicken meat required to produce one bowl of chicken curry",
            "shape": []
        },
        "CurryBasePerGoatCurry": {
            "description": "Units of curry base required to produce one bowl of goat curry",
            "shape": []
        },
        "CurryBasePerChickenCurry": {
            "description": "Units of curry base required to produce one bowl of chicken curry",
            "shape": []
        },
        "TotalGoatMeatAvailable": {
            "description": "Total available units of goat meat",
            "shape": []
        },
        "TotalChickenMeatAvailable": {
            "description": "Total available units of chicken meat",
            "shape": []
        },
        "MinChickenCurryPercentage": {
            "description": "Minimum percentage of curry bowls that must be chicken curry",
            "shape": []
        }
    },
    "variables": {
        "NumGoatCurry": {
            "description": "The number of bowls of goat curry",
            "type": "continuous",
            "shape": [
                "integer"
            ]
        },
        "NumChickenCurry": {
            "description": "The number of bowls of chicken curry",
            "type": "continuous",
            "shape": [
                "integer"
            ]
        }
    },
    "constraints": [
        {
            "description": "Each bowl of goat curry requires GoatMeatPerGoatCurry units of goat meat, and the total goat meat used cannot exceed TotalGoatMeatAvailable units.",
            "formulation": "GoatMeatPerGoatCurry \\times NumGoatCurry \\leq TotalGoatMeatAvailable",
            "code": {
                "gurobipy": "model.addConstr(GoatMeatPerGoatCurry * NumGoatCurry <= TotalGoatMeatAvailable)"
            }
        },
        {
            "description": "Each bowl of chicken curry requires ChickenMeatPerChickenCurry units of chicken meat, and the total chicken meat used cannot exceed TotalChickenMeatAvailable units.",
            "formulation": "ChickenMeatPerChickenCurry \\times NumChickenCurry \\leq TotalChickenMeatAvailable",
            "code": {
                "gurobipy": "model.addConstr(ChickenMeatPerChickenCurry * NumChickenCurry <= TotalChickenMeatAvailable)"
            }
        },
        {
            "description": "At least MinChickenCurryPercentage of the total curry bowls produced must be chicken curry.",
            "formulation": "NumChickenCurry \\geq MinChickenCurryPercentage \\cdot (NumChickenCurry + NumGoatCurry)",
            "code": {
                "gurobipy": "model.addConstr(NumChickenCurry >= MinChickenCurryPercentage * (NumChickenCurry + NumGoatCurry))"
            }
        },
        {
            "description": "The number of goat curry bowls produced must be greater than the number of chicken curry bowls.",
            "formulation": "NumGoatCurry \\geq NumChickenCurry + 1",
            "code": {
                "gurobipy": "model.addConstr(NumGoatCurry >= NumChickenCurry + 1)"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total units of curry base used, calculated as (CurryBasePerGoatCurry * number of goat curry bowls) + (CurryBasePerChickenCurry * number of chicken curry bowls).",
        "formulation": "Min CurryBasePerGoatCurry \\times NumGoatCurry + CurryBasePerChickenCurry \\times NumChickenCurry",
        "code": {
            "gurobipy": "model.setObjective(CurryBasePerGoatCurry * NumGoatCurry + CurryBasePerChickenCurry * NumChickenCurry, GRB.MINIMIZE)"
        }
    }
}