{
    "parametrized_description": "A strata-management company aims to purchase a combination of low-powered and high-powered air conditioners. Each low-powered air conditioner provides LowPowerCoolingCapacity and consumes LowPowerElectricityUsage units of electricity daily. Each high-powered air conditioner provides HighPowerCoolingCapacity and consumes HighPowerElectricityUsage units of electricity daily. The number of low-powered air conditioners is restricted to MaxLowPowerPercentage of the total air conditioners. Additionally, the company must acquire at least MinHighPowerModels high-powered air conditioners. The total cooling requirement is TotalCoolingRequired housing units, and the available electricity is TotalElectricityAvailable units. The objective is to minimize the total number of air conditioners purchased.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "LowPowerCoolingCapacity": {
            "description": "Cooling capacity of a low-powered air conditioner (number of housing units it can cool)",
            "shape": []
        },
        "LowPowerElectricityUsage": {
            "description": "Electricity usage of a low-powered air conditioner (units per day)",
            "shape": []
        },
        "HighPowerCoolingCapacity": {
            "description": "Cooling capacity of a high-powered air conditioner (number of housing units it can cool)",
            "shape": []
        },
        "HighPowerElectricityUsage": {
            "description": "Electricity usage of a high-powered air conditioner (units per day)",
            "shape": []
        },
        "MaxLowPowerPercentage": {
            "description": "Maximum percentage of low-powered air conditioners allowed",
            "shape": []
        },
        "MinHighPowerModels": {
            "description": "Minimum number of high-powered air conditioners required",
            "shape": []
        },
        "TotalCoolingRequired": {
            "description": "Total number of housing units to be cooled",
            "shape": []
        },
        "TotalElectricityAvailable": {
            "description": "Total units of electricity available",
            "shape": []
        }
    },
    "variables": {
        "LowPowerUnits": {
            "description": "The number of low-powered air conditioners",
            "type": "continuous",
            "shape": []
        },
        "HighPowerUnits": {
            "description": "The number of high-powered air conditioners",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total cooling capacity provided by low-powered and high-powered air conditioners must meet or exceed the total cooling requirement of TotalCoolingRequired housing units.",
            "formulation": "LowPowerCoolingCapacity \\times LowPowerUnits + HighPowerCoolingCapacity \\times HighPowerUnits \\geq TotalCoolingRequired",
            "code": {
                "gurobipy": "model.addConstr(LowPowerCoolingCapacity * LowPowerUnits + HighPowerCoolingCapacity * HighPowerUnits >= TotalCoolingRequired)"
            }
        },
        {
            "description": "The total electricity consumption of all air conditioners must not exceed the available electricity of TotalElectricityAvailable units.",
            "formulation": "LowPowerUnits \\times LowPowerElectricityUsage + HighPowerUnits \\times HighPowerElectricityUsage \\leq TotalElectricityAvailable",
            "code": {
                "gurobipy": "model.addConstr(LowPowerElectricityUsage * LowPowerUnits + HighPowerElectricityUsage * HighPowerUnits <= TotalElectricityAvailable)"
            }
        },
        {
            "description": "The number of low-powered air conditioners must not exceed MaxLowPowerPercentage of the total number of air conditioners purchased.",
            "formulation": "LowPowerUnits \\leq MaxLowPowerPercentage \\cdot \\left( LowPowerUnits + HighPowerUnits \\right )",
            "code": {
                "gurobipy": "model.addConstr(LowPowerUnits <= MaxLowPowerPercentage * (LowPowerUnits + HighPowerUnits))"
            }
        },
        {
            "description": "At least MinHighPowerModels high-powered air conditioners must be acquired.",
            "formulation": "HighPowerUnits \\geq MinHighPowerModels",
            "code": {
                "gurobipy": "model.addConstr(HighPowerUnits >= MinHighPowerModels)"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total number of air conditioners purchased.",
        "formulation": "Min \\ LowPowerUnits + HighPowerUnits",
        "code": {
            "gurobipy": "model.setObjective(LowPowerUnits + HighPowerUnits, GRB.MINIMIZE)"
        }
    }
}