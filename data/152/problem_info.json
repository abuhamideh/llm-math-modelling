{
    "parametrized_description": "A zoo needs to transport TotalMonkeys monkeys to the vet using buses and cars. Each bus can carry BusCapacity monkeys per trip and takes BusTripTime minutes per trip. Each car can carry CarCapacity monkeys per trip and takes CarTripTime minutes per trip. The number of bus trips cannot exceed MaxBusTrips. Additionally, at least MinCarTripFraction of all trips must be by car. The objective is to determine the number of bus and car trips that minimize the total transportation time.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "TotalMonkeys": {
            "description": "Number of monkeys to transport",
            "shape": []
        },
        "BusCapacity": {
            "description": "Number of monkeys a bus can transport per trip",
            "shape": []
        },
        "BusTripTime": {
            "description": "Time in minutes a bus takes per trip",
            "shape": []
        },
        "CarCapacity": {
            "description": "Number of monkeys a car can transport per trip",
            "shape": []
        },
        "CarTripTime": {
            "description": "Time in minutes a car takes per trip",
            "shape": []
        },
        "MaxBusTrips": {
            "description": "Maximum number of bus trips allowed",
            "shape": []
        },
        "MinCarTripFraction": {
            "description": "Minimum fraction of trips that must be by car",
            "shape": []
        }
    },
    "variables": {
        "BusTrips": {
            "description": "The number of bus trips",
            "type": "continuous",
            "shape": []
        },
        "CarTrips": {
            "description": "The number of car trips",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The number of bus trips cannot exceed MaxBusTrips.",
            "formulation": "BusTrips \\leq MaxBusTrips",
            "code": {
                "gurobipy": "model.addConstr(BusTrips <= MaxBusTrips)"
            }
        },
        {
            "description": "At least MinCarTripFraction of all trips must be by car.",
            "formulation": "CarTrips \\geq MinCarTripFraction \\times (CarTrips + BusTrips)",
            "code": {
                "gurobipy": "model.addConstr(CarTrips >= MinCarTripFraction * (CarTrips + BusTrips))"
            }
        },
        {
            "description": "The total number of monkeys transported by buses and cars must equal TotalMonkeys.",
            "formulation": "BusTrips \\times BusCapacity + CarTrips \\times CarCapacity = TotalMonkeys",
            "code": {
                "gurobipy": "model.addConstr(BusTrips * BusCapacity + CarTrips * CarCapacity == TotalMonkeys)"
            }
        }
    ],
    "objective": {
        "description": "The total transportation time is the sum of the time taken by all bus trips and car trips. The objective is to minimize the total transportation time.",
        "formulation": "Min BusTrips \\cdot BusTripTime + CarTrips \\cdot CarTripTime",
        "code": {
            "gurobipy": "model.setObjective(BusTrips * BusTripTime + CarTrips * CarTripTime, GRB.MINIMIZE)"
        }
    }
}