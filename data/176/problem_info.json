{
    "parametrized_description": "A construction company uses cows and elephants to carry bricks. Each cow can carry BrickCapacityCow bricks and each elephant can carry BrickCapacityElephant bricks. The number of elephants cannot exceed MaxElephantsToCowsRatio times the number of cows, and the number of cows cannot exceed MaxCowsToElephantsRatio times the number of elephants. The company needs to transport at least RequiredBricks bricks. Determine the minimum number of animals, cows, and elephants required.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "BrickCapacityCow": {
            "description": "Number of bricks a cow can carry on its back",
            "shape": []
        },
        "BrickCapacityElephant": {
            "description": "Number of bricks an elephant can carry on its back",
            "shape": []
        },
        "MaxElephantsToCowsRatio": {
            "description": "Maximum ratio of elephants to cows",
            "shape": []
        },
        "MaxCowsToElephantsRatio": {
            "description": "Maximum ratio of cows to elephants",
            "shape": []
        },
        "RequiredBricks": {
            "description": "Minimum number of bricks to transport",
            "shape": []
        }
    },
    "variables": {
        "NumberOfCows": {
            "description": "The number of cows",
            "type": "continuous",
            "shape": []
        },
        "NumberOfElephants": {
            "description": "The number of elephants",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "Each cow can carry BrickCapacityCow bricks and each elephant can carry BrickCapacityElephant bricks. The total number of bricks transported must be at least RequiredBricks.",
            "formulation": "BrickCapacityCow \\cdot NumberOfCows + BrickCapacityElephant \\cdot NumberOfElephants \\geq RequiredBricks",
            "code": {
                "gurobipy": "model.addConstr(BrickCapacityCow * NumberOfCows + BrickCapacityElephant * NumberOfElephants >= RequiredBricks)"
            }
        },
        {
            "description": "The number of elephants cannot exceed MaxElephantsToCowsRatio times the number of cows.",
            "formulation": "NumberOfElephants \\leq MaxElephantsToCowsRatio \\times NumberOfCows",
            "code": {
                "gurobipy": "model.addConstr(NumberOfElephants <= MaxElephantsToCowsRatio * NumberOfCows)"
            }
        },
        {
            "description": "The number of cows cannot exceed MaxCowsToElephantsRatio times the number of elephants.",
            "formulation": "NumberOfCows \\leq MaxCowsToElephantsRatio \\times NumberOfElephants",
            "code": {
                "gurobipy": "model.addConstr(NumberOfCows <= MaxCowsToElephantsRatio * NumberOfElephants)"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total number of animals (cows and elephants) required to transport at least RequiredBricks bricks while adhering to the specified ratio constraints between cows and elephants.",
        "formulation": "\\min \\left( NumberOfCows + NumberOfElephants \\right)",
        "code": {
            "gurobipy": "model.setObjective(NumberOfCows + NumberOfElephants, GRB.MINIMIZE)"
        }
    }
}