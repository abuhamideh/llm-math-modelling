{
    "parametrized_description": "A patient receives radiation treatment using Beam1 and Beam2. Beam1 delivers DoseRateBeam1BenignPancreas units per minute to the benign area of the pancreas, DoseRateBeam1BenignSkin units per minute to the benign area of the skin, and DoseRateBeam1Tumor units per minute to the tumor. Similarly, Beam2 delivers DoseRateBeam2BenignPancreas units per minute to the benign area of the pancreas, DoseRateBeam2BenignSkin units per minute to the benign area of the skin, and DoseRateBeam2Tumor units per minute to the tumor. The total dose to the skin must not exceed MaxDoseSkin, and the total dose to the tumor must be at least MinDoseTumor. The objective is to determine the number of minutes to use Beam1 and Beam2 to minimize the total radiation received by the pancreas.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "DoseRateBeam1BenignPancreas": {
            "description": "Dose delivered per minute by Beam 1 to the benign area of the pancreas",
            "shape": []
        },
        "DoseRateBeam1BenignSkin": {
            "description": "Dose delivered per minute by Beam 1 to the benign area of the skin",
            "shape": []
        },
        "DoseRateBeam1Tumor": {
            "description": "Dose delivered per minute by Beam 1 to the tumor",
            "shape": []
        },
        "DoseRateBeam2BenignPancreas": {
            "description": "Dose delivered per minute by Beam 2 to the benign area of the pancreas",
            "shape": []
        },
        "DoseRateBeam2BenignSkin": {
            "description": "Dose delivered per minute by Beam 2 to the benign area of the skin",
            "shape": []
        },
        "DoseRateBeam2Tumor": {
            "description": "Dose delivered per minute by Beam 2 to the tumor",
            "shape": []
        },
        "MaxDoseSkin": {
            "description": "Maximum allowable dose to the skin",
            "shape": []
        },
        "MinDoseTumor": {
            "description": "Minimum required dose to the tumor",
            "shape": []
        }
    },
    "variables": {
        "MinutesBeam1": {
            "description": "The number of minutes Beam 1 is used",
            "type": "continuous",
            "shape": []
        },
        "MinutesBeam2": {
            "description": "The number of minutes Beam 2 is used",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total dose to the skin is DoseRateBeam1BenignSkin multiplied by the number of minutes Beam1 is used plus DoseRateBeam2BenignSkin multiplied by the number of minutes Beam2 is used. The total dose to the skin must not exceed MaxDoseSkin.",
            "formulation": "DoseRateBeam1BenignSkin \\cdot MinutesBeam1 + DoseRateBeam2BenignSkin \\cdot MinutesBeam2 \\leq MaxDoseSkin",
            "code": {
                "gurobipy": "model.addConstr(DoseRateBeam1BenignSkin * MinutesBeam1 + DoseRateBeam2BenignSkin * MinutesBeam2 <= MaxDoseSkin)"
            }
        },
        {
            "description": "The total dose to the tumor is DoseRateBeam1Tumor multiplied by the number of minutes Beam1 is used plus DoseRateBeam2Tumor multiplied by the number of minutes Beam2 is used. The total dose to the tumor must be at least MinDoseTumor.",
            "formulation": "DoseRateBeam1Tumor \\times MinutesBeam1 + DoseRateBeam2Tumor \\times MinutesBeam2 \\geq MinDoseTumor",
            "code": {
                "gurobipy": "model.addConstr(DoseRateBeam1Tumor * MinutesBeam1 + DoseRateBeam2Tumor * MinutesBeam2 >= MinDoseTumor)"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total radiation received by the pancreas, which is calculated as DoseRateBeam1BenignPancreas multiplied by the number of minutes Beam1 is used plus DoseRateBeam2BenignPancreas multiplied by the number of minutes Beam2 is used.",
        "formulation": "Min \\ DoseRateBeam1BenignPancreas \\times MinutesBeam1 + DoseRateBeam2BenignPancreas \\times MinutesBeam2",
        "code": {
            "gurobipy": "model.setObjective(DoseRateBeam1BenignPancreas * MinutesBeam1 + DoseRateBeam2BenignPancreas * MinutesBeam2, GRB.MINIMIZE)"
        }
    }
}