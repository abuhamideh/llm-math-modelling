{
    "parametrized_description": "A milk tea shop owner aims to produce NumMilkTeaTypes different types of milk tea. Each type requires specific amounts of NumResources different resources as defined by ResourceUsage. The profit earned from each bottle of milk tea type j is ProfitPerBottle[j]. The total usage of each resource i must not exceed AvailableResource[i]. The objective is to determine the number of bottles of each milk tea type to produce in order to maximize total profit.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "NumMilkTeaTypes": {
            "description": "Number of different milk tea types to be produced",
            "shape": []
        },
        "NumResources": {
            "description": "Number of different resources used in production",
            "shape": []
        },
        "ResourceUsage": {
            "description": "Amount of resource i required to produce one bottle of milk tea type j",
            "shape": [
                "NumResources",
                "NumMilkTeaTypes"
            ]
        },
        "ProfitPerBottle": {
            "description": "Profit earned from selling one bottle of milk tea type j",
            "shape": [
                "NumMilkTeaTypes"
            ]
        },
        "AvailableResource": {
            "description": "Total available amount of resource i",
            "shape": [
                "NumResources"
            ]
        }
    },
    "variables": {
        "Produce": {
            "description": "The number of bottles produced for each milk tea type",
            "type": "continuous",
            "shape": [
                "NumMilkTeaTypes"
            ]
        }
    },
    "constraints": [
        {
            "description": "The total usage of each resource must not exceed the available amount of that resource.",
            "formulation": "\\sum_{j=1}^{NumMilkTeaTypes} ResourceUsage_{i,j} \\cdot Produce_j \\leq AvailableResource_i, \\quad \\forall i \\in \\{1, \\dots, NumResources\\}",
            "code": {
                "gurobipy": "model.addConstrs((quicksum(ResourceUsage[i][j] * Produce[j] for j in range(NumMilkTeaTypes)) <= AvailableResource[i] for i in range(NumResources)), name='ResourceLimits')"
            }
        },
        {
            "description": "The number of bottles of each milk tea type to produce must be non-negative.",
            "formulation": "Produce \\geq 0",
            "code": {
                "gurobipy": "model.addConstrs((Produce[j] >= 0 for j in range(NumMilkTeaTypes)), \"ProduceNonNegative\")"
            }
        }
    ],
    "objective": {
        "description": "Total profit is the sum of the profits from each milk tea type. The objective is to maximize the total profit.",
        "formulation": "Max \\sum_{j=1}^{\\text{NumMilkTeaTypes}} \\text{ProfitPerBottle}_j \\cdot \\text{Produce}_j",
        "code": {
            "gurobipy": "model.setObjective(quicksum(ProfitPerBottle[j] * Produce[j] for j in range(NumMilkTeaTypes)), GRB.MAXIMIZE)"
        }
    }
}