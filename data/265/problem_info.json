{
    "parametrized_description": "Determine the number of units of chemical A and chemical B to add to the mixer to minimize the total time for the mixed bread to be ready. Each unit of chemical A takes TimeChemicalA to become effective, and each unit of chemical B takes TimeChemicalB to become effective. The number of units of chemical A must be at least MinChemicalA, the total number of units of chemicals A and B must be at least MinTotalChemicals, and the number of units of chemical A must not exceed MaxRatioAtoB times the number of units of chemical B.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "TimeChemicalA": {
            "description": "Time for one unit of chemical A to become effective",
            "shape": []
        },
        "TimeChemicalB": {
            "description": "Time for one unit of chemical B to become effective",
            "shape": []
        },
        "MaxRatioAtoB": {
            "description": "Maximum ratio of chemical A to chemical B",
            "shape": []
        },
        "MinChemicalA": {
            "description": "Minimum units of chemical A required",
            "shape": []
        },
        "MinTotalChemicals": {
            "description": "Minimum total units of chemicals in the mixer",
            "shape": []
        }
    },
    "variables": {
        "QuantityChemicalA": {
            "description": "The number of units of chemical A",
            "type": "continuous",
            "shape": []
        },
        "QuantityChemicalB": {
            "description": "The number of units of chemical B",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The number of units of chemical A must be at least MinChemicalA.",
            "formulation": "QuantityChemicalA \\geq MinChemicalA",
            "code": {
                "gurobipy": "model.addConstr(QuantityChemicalA >= MinChemicalA)"
            }
        },
        {
            "description": "The total number of units of chemicals A and B must be at least MinTotalChemicals.",
            "formulation": "QuantityChemicalA + QuantityChemicalB \\geq MinTotalChemicals",
            "code": {
                "gurobipy": "model.addConstr(QuantityChemicalA + QuantityChemicalB >= MinTotalChemicals)"
            }
        },
        {
            "description": "The number of units of chemical A must not exceed MaxRatioAtoB times the number of units of chemical B.",
            "formulation": "QuantityChemicalA \\leq MaxRatioAtoB \\times QuantityChemicalB",
            "code": {
                "gurobipy": "model.addConstr(QuantityChemicalA <= MaxRatioAtoB * QuantityChemicalB)"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total time for the mixed bread to be ready, calculated as (TimeChemicalA * Units of Chemical A) + (TimeChemicalB * Units of Chemical B).",
        "formulation": "Min \\left(TimeChemicalA \\cdot QuantityChemicalA + TimeChemicalB \\cdot QuantityChemicalB\\right)",
        "code": {
            "gurobipy": "model.setObjective(TimeChemicalA * QuantityChemicalA + TimeChemicalB * QuantityChemicalB, GRB.MINIMIZE)"
        }
    }
}