{
    "parametrized_description": "A bakery produces Brownies and LemonSquares. Each Brownie requires ChocolateMixPerBrownie units of ChocolateMix and FiberPerBrownie units of Fiber. Each LemonSquare requires LemonMixPerLemonSquare units of LemonMix and FiberPerLemonSquare units of Fiber. The number of LemonSquares produced must exceed the number of Brownies produced. Additionally, at least MinBrowniePercentage of the total items produced must be Brownies. The bakery has TotalChocolateMix units of ChocolateMix and TotalLemonMix units of LemonMix available. The objective is to minimize the total Fiber used.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "ChocolateMixPerBrownie": {
            "description": "Amount of chocolate mix required to produce one brownie",
            "shape": []
        },
        "FiberPerBrownie": {
            "description": "Amount of fiber required to produce one brownie",
            "shape": []
        },
        "LemonMixPerLemonSquare": {
            "description": "Amount of lemon mix required to produce one lemon square",
            "shape": []
        },
        "FiberPerLemonSquare": {
            "description": "Amount of fiber required to produce one lemon square",
            "shape": []
        },
        "TotalChocolateMix": {
            "description": "Total units of chocolate mix available",
            "shape": []
        },
        "TotalLemonMix": {
            "description": "Total units of lemon mix available",
            "shape": []
        },
        "MinBrowniePercentage": {
            "description": "Minimum percentage of items that must be brownies",
            "shape": []
        },
        "MinLemonExceedsBrownie": {
            "description": "Minimum required difference between the number of lemon squares and brownies",
            "shape": []
        }
    },
    "variables": {
        "NumberOfBrownies": {
            "description": "The number of brownies to be produced",
            "type": "continuous",
            "shape": []
        },
        "NumberOfLemonSquares": {
            "description": "The number of lemon squares to be produced",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total ChocolateMix used does not exceed TotalChocolateMix units.",
            "formulation": "ChocolateMixPerBrownie \\times NumberOfBrownies \\leq TotalChocolateMix",
            "code": {
                "gurobipy": "model.addConstr(ChocolateMixPerBrownie * NumberOfBrownies <= TotalChocolateMix)"
            }
        },
        {
            "description": "The total LemonMix used does not exceed TotalLemonMix units.",
            "formulation": "LemonMixPerLemonSquare \\times NumberOfLemonSquares \\leq TotalLemonMix",
            "code": {
                "gurobipy": "model.addConstr(LemonMixPerLemonSquare * NumberOfLemonSquares <= TotalLemonMix)"
            }
        },
        {
            "description": "The number of LemonSquares produced exceeds the number of Brownies produced by at least MinLemonExceedsBrownie.",
            "formulation": "NumberOfLemonSquares - NumberOfBrownies \\geq MinLemonExceedsBrownie",
            "code": {
                "gurobipy": "model.addConstr(NumberOfLemonSquares - NumberOfBrownies >= MinLemonExceedsBrownie)"
            }
        },
        {
            "description": "At least MinBrowniePercentage of the total items produced are Brownies.",
            "formulation": "NumberOfBrownies \\geq MinBrowniePercentage \\times \\left(NumberOfBrownies + NumberOfLemonSquares\\right)",
            "code": {
                "gurobipy": "model.addConstr(NumberOfBrownies >= MinBrowniePercentage * (NumberOfBrownies + NumberOfLemonSquares))"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total Fiber used, calculated as FiberPerBrownie multiplied by the number of Brownies plus FiberPerLemonSquare multiplied by the number of LemonSquares.",
        "formulation": "Min \\ FiberPerBrownie \\times NumberOfBrownies + FiberPerLemonSquare \\times NumberOfLemonSquares",
        "code": {
            "gurobipy": "model.setObjective(FiberPerBrownie * NumberOfBrownies + FiberPerLemonSquare * NumberOfLemonSquares, GRB.MINIMIZE)"
        }
    }
}