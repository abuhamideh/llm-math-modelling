{
    "parametrized_description": "An office purchases NumPrinterTypes different printer types, each with a specific PrintingSpeed and InkUsage. The office must ensure that the total pages printed per minute is at least MinPagesPerMinute and that the total ink used per minute does not exceed MaxInkPerMinute. Additionally, the quantity of one printer type must be greater than the quantity of another printer type. The objective is to minimize the total number of printers purchased.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "NumPrinterTypes": {
            "description": "Number of different printer types",
            "shape": []
        },
        "PrintingSpeed": {
            "description": "Pages printed per minute by each printer type",
            "shape": [
                "NumPrinterTypes"
            ]
        },
        "InkUsage": {
            "description": "Ink units used per minute by each printer type",
            "shape": [
                "NumPrinterTypes"
            ]
        },
        "MinPagesPerMinute": {
            "description": "Minimum number of pages to be printed per minute",
            "shape": []
        },
        "MaxInkPerMinute": {
            "description": "Maximum number of ink units allowed per minute",
            "shape": []
        }
    },
    "variables": {
        "NumPrinters": {
            "description": "Number of printers for each printer type",
            "type": "continuous",
            "shape": [
                "NumPrinterTypes"
            ]
        }
    },
    "constraints": [
        {
            "description": "The total pages printed per minute must be at least MinPagesPerMinute.",
            "formulation": "\\sum_{j=1}^{NumPrinterTypes} PrintingSpeed_j \\cdot NumPrinters_j \\geq MinPagesPerMinute",
            "code": {
                "gurobipy": "model.addConstr(quicksum(PrintingSpeed[j] * NumPrinters[j] for j in range(NumPrinterTypes)) >= MinPagesPerMinute)"
            }
        },
        {
            "description": "The total ink used per minute must not exceed MaxInkPerMinute.",
            "formulation": "\\sum_{i=1}^{NumPrinterTypes} NumPrinters_i \\times InkUsage_i \\leq MaxInkPerMinute",
            "code": {
                "gurobipy": "model.addConstr(quicksum(NumPrinters[i] * InkUsage[i] for i in range(NumPrinterTypes)) <= MaxInkPerMinute)"
            }
        },
        {
            "description": "The quantity of one printer type must be greater than the quantity of another printer type.",
            "formulation": "NumPrinters_{i} \\geq NumPrinters_{j}",
            "code": {
                "gurobipy": "model.addConstr(NumPrinters[i] >= NumPrinters[j], name=\"PrinterTypeConstraint\")"
            }
        }
    ],
    "objective": {
        "description": "The objective is to minimize the total number of printers purchased.",
        "formulation": "Min \\sum_{i=1}^{NumPrinterTypes} NumPrinters_{i}",
        "code": {
            "gurobipy": "model.setObjective(quicksum(NumPrinters[i] for i in range(NumPrinterTypes)), GRB.MINIMIZE)"
        }
    }
}