{
    "parametrized_description": "A tropical city sends mail using submarines and boats. Each submarine can carry SubmarineCapacity pieces of mail per trip and consumes SubmarineGasUsage liters of gas per trip. Each boat can carry BoatCapacity pieces of mail per trip and consumes BoatGasUsage liters of gas per trip. The number of submarine trips is limited to MaxSubmarineTrips. At least MinBoatTripPercentage of all trips must be by boat. The city needs to transport at least MailRequired pieces of mail. The objective is to minimize the total gas usage.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "SubmarineCapacity": {
            "description": "Number of pieces of mail a submarine can carry per trip",
            "shape": []
        },
        "SubmarineGasUsage": {
            "description": "Amount of gas a submarine uses per trip in liters",
            "shape": []
        },
        "BoatCapacity": {
            "description": "Number of pieces of mail a boat can carry per trip",
            "shape": []
        },
        "BoatGasUsage": {
            "description": "Amount of gas a boat uses per trip in liters",
            "shape": []
        },
        "MaxSubmarineTrips": {
            "description": "Maximum number of submarine trips allowed",
            "shape": []
        },
        "MinBoatTripPercentage": {
            "description": "Minimum percentage of trips that must be by boat",
            "shape": []
        },
        "MailRequired": {
            "description": "Minimum number of pieces of mail to transport",
            "shape": []
        }
    },
    "variables": {
        "SubmarineTrips": {
            "description": "The number of submarine trips",
            "type": "continuous",
            "shape": []
        },
        "BoatTrips": {
            "description": "The number of boat trips",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The number of submarine trips cannot exceed MaxSubmarineTrips.",
            "formulation": "SubmarineTrips \\leq MaxSubmarineTrips",
            "code": {
                "gurobipy": "model.addConstr(SubmarineTrips <= MaxSubmarineTrips)"
            }
        },
        {
            "description": "At least MinBoatTripPercentage of all trips must be by boat.",
            "formulation": "BoatTrips \\geq MinBoatTripPercentage \\times (BoatTrips + SubmarineTrips)",
            "code": {
                "gurobipy": "model.addConstr(BoatTrips >= MinBoatTripPercentage * (BoatTrips + SubmarineTrips))"
            }
        },
        {
            "description": "The total number of pieces of mail transported must be at least MailRequired.",
            "formulation": "SubmarineTrips \\times SubmarineCapacity + BoatTrips \\times BoatCapacity \\geq MailRequired",
            "code": {
                "gurobipy": "model.addConstr(SubmarineTrips * SubmarineCapacity + BoatTrips * BoatCapacity >= MailRequired)"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total gas usage, calculated as the sum of gas consumed by all submarine and boat trips.",
        "formulation": "Min SubmarineGasUsage \\times SubmarineTrips + BoatGasUsage \\times BoatTrips",
        "code": {
            "gurobipy": "model.setObjective(SubmarineGasUsage * SubmarineTrips + BoatGasUsage * BoatTrips, GRB.MINIMIZE)"
        }
    }
}