{
    "parametrized_description": "A venue needs to transport guests using two types of carts: golf carts and pull carts. Each golf cart has a capacity of GolfCartCapacity guests, and each pull cart has a capacity of PullCartCapacity guests. Due to space constraints, no more than MaxGolfCartPercentage of the total carts can be golf carts. The venue must transport at least MinGuests guests. The goal is to determine the number of golf carts and pull carts to use in order to minimize the total number of carts required.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "GolfCartCapacity": {
            "description": "Capacity of a golf cart",
            "shape": []
        },
        "PullCartCapacity": {
            "description": "Capacity of a pull cart",
            "shape": []
        },
        "MaxGolfCartPercentage": {
            "description": "Maximum percentage of carts that can be golf carts",
            "shape": []
        },
        "MinGuests": {
            "description": "Minimum number of guests to transport",
            "shape": []
        }
    },
    "variables": {
        "NumGolfCarts": {
            "description": "The number of golf carts",
            "type": "continuous",
            "shape": [
                "Integer"
            ]
        },
        "NumPullCarts": {
            "description": "The number of pull carts",
            "type": "continuous",
            "shape": [
                "Integer"
            ]
        }
    },
    "constraints": [
        {
            "description": "Each golf cart can transport GolfCartCapacity guests and each pull cart can transport PullCartCapacity guests. The total number of guests transported must be at least MinGuests.",
            "formulation": "GolfCartCapacity \\times NumGolfCarts + PullCartCapacity \\times NumPullCarts \\geq MinGuests",
            "code": {
                "gurobipy": "model.addConstr(GolfCartCapacity * NumGolfCarts + PullCartCapacity * NumPullCarts >= MinGuests)"
            }
        },
        {
            "description": "No more than MaxGolfCartPercentage of the total number of carts can be golf carts.",
            "formulation": "NumGolfCarts \\leq MaxGolfCartPercentage \\times (NumGolfCarts + NumPullCarts)",
            "code": {
                "gurobipy": "model.addConstr(NumGolfCarts <= MaxGolfCartPercentage * (NumGolfCarts + NumPullCarts))"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total number of carts required.",
        "formulation": "Min\\ NumGolfCarts + NumPullCarts",
        "code": {
            "gurobipy": "model.setObjective(NumGolfCarts + NumPullCarts, GRB.MINIMIZE)"
        }
    }
}