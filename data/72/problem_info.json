{
    "parametrized_description": "A company can build two types of butcher shops: small shops that produce HotDogsPerSmallShop hot dogs per day and require WorkersPerSmallShop workers each, and large shops that produce HotDogsPerLargeShop hot dogs per day and require WorkersPerLargeShop workers each. The company must produce at least MinimumHotDogsPerDay hot dogs per day and has AvailableWorkers workers available. The objective is to minimize the total number of butcher shops built.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "HotDogsPerSmallShop": {
            "description": "Number of hot dogs produced per small shop per day",
            "shape": []
        },
        "WorkersPerSmallShop": {
            "description": "Number of workers required for a small shop",
            "shape": []
        },
        "HotDogsPerLargeShop": {
            "description": "Number of hot dogs produced per large shop per day",
            "shape": []
        },
        "WorkersPerLargeShop": {
            "description": "Number of workers required for a large shop",
            "shape": []
        },
        "MinimumHotDogsPerDay": {
            "description": "Minimum number of hot dogs to be produced per day",
            "shape": []
        },
        "AvailableWorkers": {
            "description": "Total number of available workers",
            "shape": []
        }
    },
    "variables": {
        "NumberOfSmallShops": {
            "description": "Number of small shops",
            "type": "continuous",
            "shape": []
        },
        "NumberOfLargeShops": {
            "description": "Number of large shops",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "HotDogsPerSmallShop * NumberOfSmallShops + HotDogsPerLargeShop * NumberOfLargeShops >= MinimumHotDogsPerDay",
            "formulation": "HotDogsPerSmallShop \\cdot NumberOfSmallShops + HotDogsPerLargeShop \\cdot NumberOfLargeShops \\geq MinimumHotDogsPerDay",
            "code": {
                "gurobipy": "model.addConstr(HotDogsPerSmallShop * NumberOfSmallShops + HotDogsPerLargeShop * NumberOfLargeShops >= MinimumHotDogsPerDay)"
            }
        },
        {
            "description": "WorkersPerSmallShop * NumberOfSmallShops + WorkersPerLargeShop * NumberOfLargeShops <= AvailableWorkers",
            "formulation": "WorkersPerSmallShop \\cdot NumberOfSmallShops + WorkersPerLargeShop \\cdot NumberOfLargeShops \\leq AvailableWorkers",
            "code": {
                "gurobipy": "model.addConstr(WorkersPerSmallShop * NumberOfSmallShops + WorkersPerLargeShop * NumberOfLargeShops <= AvailableWorkers)"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total number of butcher shops built, calculated as NumberOfSmallShops + NumberOfLargeShops.",
        "formulation": "\\min (NumberOfSmallShops + NumberOfLargeShops)",
        "code": {
            "gurobipy": "model.setObjective(NumberOfSmallShops + NumberOfLargeShops, GRB.MINIMIZE)"
        }
    }
}