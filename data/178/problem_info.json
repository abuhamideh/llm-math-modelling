{
    "parametrized_description": "A factory provides rides for its employees using either taxis or company cars. Each taxi ride can transport EmployeesPerTaxiRide employees, and each company car ride can transport EmployeesPerCompanyCarRide employees. At most MaxCompanyCarRidePercentage of the total rides can be company car rides, and there must be at least MinCompanyCarRides company car rides. The company needs to transport at least MinEmployees employees. Determine the number of taxi and company car rides to minimize the total number of taxi rides.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "EmployeesPerTaxiRide": {
            "description": "Number of employees that can be transported in one taxi ride.",
            "shape": []
        },
        "EmployeesPerCompanyCarRide": {
            "description": "Number of employees that can be transported in one company car ride.",
            "shape": []
        },
        "MaxCompanyCarRidePercentage": {
            "description": "The upper limit on the proportion of total rides that can be company car rides.",
            "shape": []
        },
        "MinCompanyCarRides": {
            "description": "The minimum required number of company car rides.",
            "shape": []
        },
        "MinEmployees": {
            "description": "The minimum number of employees that need to be transported.",
            "shape": []
        }
    },
    "variables": {
        "NumberOfTaxiRides": {
            "description": "The number of taxi rides",
            "type": "continuous",
            "shape": []
        },
        "NumberOfCompanyCarRides": {
            "description": "The number of company car rides",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total number of employees transported by taxi and company car rides must be at least MinEmployees.",
            "formulation": "EmployeesPerTaxiRide \\times NumberOfTaxiRides + EmployeesPerCompanyCarRides \\times NumberOfCompanyCarRides \\geq MinEmployees",
            "code": {
                "gurobipy": "model.addConstr(EmployeesPerTaxiRide * NumberOfTaxiRides + EmployeesPerCompanyCarRides * NumberOfCompanyCarRides >= MinEmployees)"
            }
        },
        {
            "description": "The number of company car rides must not exceed MaxCompanyCarRidePercentage of the total number of rides.",
            "formulation": "(1 - MaxCompanyCarRidePercentage) \\times NumberOfCompanyCarRides \\leq MaxCompanyCarRidePercentage \\times NumberOfTaxiRides",
            "code": {
                "gurobipy": "model.addConstr((1 - MaxCompanyCarRidePercentage) * NumberOfCompanyCarRides <= MaxCompanyCarRidePercentage * NumberOfTaxiRides)"
            }
        },
        {
            "description": "There must be at least MinCompanyCarRides company car rides.",
            "formulation": "NumberOfCompanyCarRides \\geq MinCompanyCarRides",
            "code": {
                "gurobipy": "model.addConstr(NumberOfCompanyCarRides >= MinCompanyCarRides)"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total number of taxi rides.",
        "formulation": "Min \\ NumberOfTaxiRides",
        "code": {
            "gurobipy": "model.setObjective(NumberOfTaxiRides, GRB.MINIMIZE)"
        }
    }
}