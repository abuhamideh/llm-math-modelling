{
    "parametrized_description": "Determine the number of blueberry packs and strawberry packs to minimize the total sugar intake, where total sugar is the product of SugarPerBlueberryPack and the number of blueberry packs plus the product of SugarPerStrawberryPack and the number of strawberry packs. Ensure that the total anti-oxidants, calculated as AntiOxidantsPerBlueberryPack multiplied by the number of blueberry packs plus AntiOxidantsPerStrawberryPack multiplied by the number of strawberry packs, is at least MinimumAntiOxidants. Similarly, the total minerals, calculated as MineralsPerBlueberryPack multiplied by the number of blueberry packs plus MineralsPerStrawberryPack multiplied by the number of strawberry packs, meets or exceeds MinimumMinerals. Additionally, the number of strawberry packs must be at least MinimumStrawberriesToBlueberriesRatio times the number of blueberry packs.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "AntiOxidantsPerBlueberryPack": {
            "description": "Units of anti-oxidants per pack of blueberries",
            "shape": []
        },
        "AntiOxidantsPerStrawberryPack": {
            "description": "Units of anti-oxidants per pack of strawberries",
            "shape": []
        },
        "MineralsPerBlueberryPack": {
            "description": "Units of minerals per pack of blueberries",
            "shape": []
        },
        "MineralsPerStrawberryPack": {
            "description": "Units of minerals per pack of strawberries",
            "shape": []
        },
        "SugarPerBlueberryPack": {
            "description": "Grams of sugar per pack of blueberries",
            "shape": []
        },
        "SugarPerStrawberryPack": {
            "description": "Grams of sugar per pack of strawberries",
            "shape": []
        },
        "MinimumAntiOxidants": {
            "description": "Minimum required units of anti-oxidants",
            "shape": []
        },
        "MinimumMinerals": {
            "description": "Minimum required units of minerals",
            "shape": []
        },
        "MinimumStrawberriesToBlueberriesRatio": {
            "description": "Minimum ratio of strawberries packs to blueberry packs",
            "shape": []
        }
    },
    "variables": {
        "NumberOfBlueberryPacks": {
            "description": "The number of blueberry packs",
            "type": "continuous",
            "shape": []
        },
        "NumberOfStrawberryPacks": {
            "description": "The number of strawberry packs",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total anti-oxidants, calculated as AntiOxidantsPerBlueberryPack multiplied by the number of blueberry packs plus AntiOxidantsPerStrawberryPack multiplied by the number of strawberry packs, is at least MinimumAntiOxidants.",
            "formulation": "AntiOxidantsPerBlueberryPack \\times NumberOfBlueberryPacks + AntiOxidantsPerStrawberryPack \\times NumberOfStrawberryPacks \\geq MinimumAntiOxidants",
            "code": {
                "gurobipy": "model.addConstr(AntiOxidantsPerBlueberryPack * NumberOfBlueberryPacks + AntiOxidantsPerStrawberryPack * NumberOfStrawberryPacks >= MinimumAntiOxidants)"
            }
        },
        {
            "description": "The total minerals, calculated as MineralsPerBlueberryPack multiplied by the number of blueberry packs plus MineralsPerStrawberryPack multiplied by the number of strawberry packs, meets or exceeds MinimumMinerals.",
            "formulation": "MineralsPerBlueberryPack \\times NumberOfBlueberryPacks + MineralsPerStrawberryPack \\times NumberOfStrawberryPacks \\geq MinimumMinerals",
            "code": {
                "gurobipy": "model.addConstr(MineralsPerBlueberryPack * NumberOfBlueberryPacks + MineralsPerStrawberryPack * NumberOfStrawberryPacks >= MinimumMinerals)"
            }
        },
        {
            "description": "The number of strawberry packs must be at least MinimumStrawberriesToBlueberriesRatio times the number of blueberry packs.",
            "formulation": "NumberOfStrawberryPacks \\geq MinimumStrawberriesToBlueberriesRatio \\times NumberOfBlueberryPacks",
            "code": {
                "gurobipy": "model.addConstr(NumberOfStrawberryPacks >= MinimumStrawberriesToBlueberriesRatio * NumberOfBlueberryPacks)"
            }
        }
    ],
    "objective": {
        "description": "Total sugar intake is the product of SugarPerBlueberryPack and the number of blueberry packs plus the product of SugarPerStrawberryPack and the number of strawberry packs. The objective is to minimize the total sugar intake.",
        "formulation": "Min \\ SugarPerBlueberryPack \\times NumberOfBlueberryPacks + SugarPerStrawberryPack \\times NumberOfStrawberryPacks",
        "code": {
            "gurobipy": "model.setObjective(SugarPerBlueberryPack * NumberOfBlueberryPacks + SugarPerStrawberryPack * NumberOfStrawberryPacks, GRB.MINIMIZE)"
        }
    }
}