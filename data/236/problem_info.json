{
    "parametrized_description": "A lighting company has access to NumTypes types of lights to provide their customers. Each type uses ElectricityUsage[i] units of electricity per hour and needs to be changed ChangesPerDecade[i] times per decade. Due to previous installations, at least MinPercentageFluorescence fraction of implemented lights must be fluorescence lamps. If the customer requires at least MinNumFixtures light fixtures and can use at most MaxElectricity units of electricity, determine the number of each type of light to install to minimize the total number of light changes.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "NumTypes": {
            "description": "Number of types of lights available",
            "shape": []
        },
        "ElectricityUsage": {
            "description": "Electricity units used per hour by each type of light",
            "shape": [
                "NumTypes"
            ]
        },
        "ChangesPerDecade": {
            "description": "Number of times each type of light needs to be changed per decade",
            "shape": [
                "NumTypes"
            ]
        },
        "MinPercentageFluorescence": {
            "description": "Minimum fraction of implemented light fixtures that must be fluorescence lamps",
            "shape": []
        },
        "MinNumFixtures": {
            "description": "Minimum number of light fixtures required",
            "shape": []
        },
        "MaxElectricity": {
            "description": "Maximum number of electricity units that can be used",
            "shape": []
        }
    },
    "variables": {
        "NumFixtures": {
            "description": "The number of fixtures for each type of light",
            "type": "continuous",
            "shape": [
                "NumTypes"
            ]
        },
        "NumFluorescenceFixtures": {
            "description": "The number of fluorescence light fixtures",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "At least MinPercentageFluorescence fraction of the implemented light fixtures must be fluorescence lamps.",
            "formulation": "NumFluorescenceFixtures \\geq MinPercentageFluorescence \\cdot \\sum_{i=1}^{NumTypes} NumFixtures_i",
            "code": {
                "gurobipy": "model.addConstr(NumFluorescenceFixtures >= MinPercentageFluorescence * quicksum(NumFixtures[i] for i in range(NumTypes)))"
            }
        },
        {
            "description": "The total number of light fixtures installed must be at least MinNumFixtures.",
            "formulation": "\\sum_{t=1}^{NumTypes} NumFixtures_{t} + NumFluorescenceFixtures \\geq MinNumFixtures",
            "code": {
                "gurobipy": "model.addConstr(quicksum(NumFixtures[t] for t in range(NumTypes)) + NumFluorescenceFixtures >= MinNumFixtures)"
            }
        },
        {
            "description": "The total electricity usage of all installed lights must not exceed MaxElectricity units.",
            "formulation": "\\sum_{t=1}^{NumTypes} ElectricityUsage_t \\cdot NumFixtures_t \\leq MaxElectricity",
            "code": {
                "gurobipy": "model.addConstr(quicksum(ElectricityUsage[t] * NumFixtures[t] for t in range(NumTypes)) <= MaxElectricity)"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total number of light changes, calculated as the sum of ChangesPerDecade[i] multiplied by the number of each type of light installed.",
        "formulation": "Min \\sum_{i=1}^{NumTypes} ChangesPerDecade_{i} \\cdot NumFixtures_{i}",
        "code": {
            "gurobipy": "model.setObjective(quicksum(ChangesPerDecade[i] * NumFixtures[i] for i in range(NumTypes)), GRB.MINIMIZE)"
        }
    }
}