{
    "parametrized_description": "Lucy aims to determine the number of regular and premium bags to purchase to minimize the total cost, subject to the constraints that the combined calcium from regular and premium bags is at least MinCalcium, the combined vitamin mix is at least MinVitaminMix, and the combined protein is at least MinProtein. The cost per regular bag is PriceRegular and per premium bag is PricePremium. Each regular bag provides CalciumRegular units of calcium, VitaminMixRegular units of vitamin mix, and ProteinRegular units of protein, while each premium bag provides CalciumPremium units of calcium, VitaminMixPremium units of vitamin mix, and ProteinPremium units of protein.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "MinCalcium": {
            "description": "Minimum required units of calcium",
            "shape": []
        },
        "MinVitaminMix": {
            "description": "Minimum required units of vitamin mix",
            "shape": []
        },
        "MinProtein": {
            "description": "Minimum required units of protein",
            "shape": []
        },
        "PriceRegular": {
            "description": "Price per bag of regular brand",
            "shape": []
        },
        "PricePremium": {
            "description": "Price per bag of premium brand",
            "shape": []
        },
        "CalciumRegular": {
            "description": "Units of calcium per bag of regular brand",
            "shape": []
        },
        "CalciumPremium": {
            "description": "Units of calcium per bag of premium brand",
            "shape": []
        },
        "VitaminMixRegular": {
            "description": "Units of vitamin mix per bag of regular brand",
            "shape": []
        },
        "VitaminMixPremium": {
            "description": "Units of vitamin mix per bag of premium brand",
            "shape": []
        },
        "ProteinRegular": {
            "description": "Units of protein per bag of regular brand",
            "shape": []
        },
        "ProteinPremium": {
            "description": "Units of protein per bag of premium brand",
            "shape": []
        }
    },
    "variables": {
        "NumRegularBags": {
            "description": "The number of regular bags",
            "type": "continuous",
            "shape": [
                "Integer"
            ]
        },
        "NumPremiumBags": {
            "description": "The number of premium bags",
            "type": "continuous",
            "shape": [
                "Integer"
            ]
        }
    },
    "constraints": [
        {
            "description": "The combined calcium from regular and premium bags is at least MinCalcium.",
            "formulation": "CalciumRegular \\times NumRegularBags + CalciumPremium \\times NumPremiumBags \\geq MinCalcium",
            "code": {
                "gurobipy": "model.addConstr(CalciumRegular * NumRegularBags + CalciumPremium * NumPremiumBags >= MinCalcium)"
            }
        },
        {
            "description": "The combined vitamin mix from regular and premium bags is at least MinVitaminMix.",
            "formulation": "VitaminMixRegular \\cdot NumRegularBags + VitaminMixPremium \\cdot NumPremiumBags \\geq MinVitaminMix",
            "code": {
                "gurobipy": "model.addConstr(VitaminMixRegular * NumRegularBags + VitaminMixPremium * NumPremiumBags >= MinVitaminMix)"
            }
        },
        {
            "description": "The combined protein from regular and premium bags is at least MinProtein.",
            "formulation": "ProteinRegular \\cdot NumRegularBags + ProteinPremium \\cdot NumPremiumBags \\geq MinProtein",
            "code": {
                "gurobipy": "model.addConstr(ProteinRegular * NumRegularBags + ProteinPremium * NumPremiumBags >= MinProtein)"
            }
        }
    ],
    "objective": {
        "description": "Total cost is PriceRegular multiplied by the number of regular bags plus PricePremium multiplied by the number of premium bags. The objective is to minimize the total cost while meeting the nutritional requirements for calcium, vitamin mix, and protein.",
        "formulation": "Min PriceRegular \\times NumRegularBags + PricePremium \\times NumPremiumBags",
        "code": {
            "gurobipy": "model.setObjective(PriceRegular * NumRegularBags + PricePremium * NumPremiumBags, GRB.MINIMIZE)"
        }
    }
}