{
    "parametrized_description": "In a science club, there are NumTables different tables for making slime. At each table i, PowderUsed[i] units of powder and GlueUsed[i] units of glue are used to produce SlimeProduced[i] units of slime. Each table i also generates MessProduced[i] units of mess. The club has AvailablePowder units of powder and AvailableGlue units of glue available. Additionally, no more than MaxMess units of mess can be created. The objective is to determine the number of each table to set up to maximize the total amount of slime produced.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "NumTables": {
            "description": "Number of different tables for making slime",
            "shape": []
        },
        "PowderUsed": {
            "description": "Amount of powder used by table i",
            "shape": [
                "NumTables"
            ]
        },
        "GlueUsed": {
            "description": "Amount of glue used by table i",
            "shape": [
                "NumTables"
            ]
        },
        "SlimeProduced": {
            "description": "Amount of slime produced by table i",
            "shape": [
                "NumTables"
            ]
        },
        "MessProduced": {
            "description": "Amount of mess produced by table i",
            "shape": [
                "NumTables"
            ]
        },
        "AvailablePowder": {
            "description": "Total available units of powder",
            "shape": []
        },
        "AvailableGlue": {
            "description": "Total available units of glue",
            "shape": []
        },
        "MaxMess": {
            "description": "Maximum allowable units of mess",
            "shape": []
        }
    },
    "variables": {
        "Production": {
            "description": "The amount produced at table i",
            "type": "continuous",
            "shape": [
                "NumTables"
            ]
        }
    },
    "constraints": [
        {
            "description": "The total amount of powder used by all tables cannot exceed AvailablePowder.",
            "formulation": "\\sum_{i=1}^{\\text{NumTables}} \\text{PowderUsed}_i \\cdot \\text{Production}_i \\leq \\text{AvailablePowder}",
            "code": {
                "gurobipy": "model.addConstr(quicksum(PowderUsed[i] * Production[i] for i in range(NumTables)) <= AvailablePowder)"
            }
        },
        {
            "description": "The total amount of glue used by all tables cannot exceed AvailableGlue.",
            "formulation": "\\sum_{i=1}^{NumTables} GlueUsed_i Production_i \\leq AvailableGlue",
            "code": {
                "gurobipy": "model.addConstr(quicksum(GlueUsed[i] * Production[i] for i in range(NumTables)) <= AvailableGlue)"
            }
        },
        {
            "description": "The total amount of mess produced by all tables cannot exceed MaxMess.",
            "formulation": "\\sum_{i=1}^{NumTables} Production_i \\times MessProduced_i \\leq MaxMess",
            "code": {
                "gurobipy": "model.addConstr(quicksum(Production[i] * MessProduced[i] for i in range(NumTables)) <= MaxMess)"
            }
        }
    ],
    "objective": {
        "description": "The total amount of slime produced is the sum of SlimeProduced[i] multiplied by the number of each table set up. The objective is to maximize the total amount of slime produced.",
        "formulation": "Max \\sum_{i=1}^{NumTables} SlimeProduced_i \\cdot Production_i",
        "code": {
            "gurobipy": "model.setObjective(quicksum(SlimeProduced[i] * Production[i] for i in range(NumTables)), GRB.MAXIMIZE)"
        }
    }
}