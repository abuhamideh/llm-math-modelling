{
    "parametrized_description": "Determine the number of motion activated machines and manual machines to minimize the total number of machines, ensuring that the number of manual machines does not exceed MaxManualPercentage of the total machines, at least MinMotionActivatedMachines are motion activated, the combined drop rate is at least MinTotalDrops, and the total energy consumption does not exceed MaxTotalEnergy.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "MotionActivatedDropRate": {
            "description": "Drop rate (drops per minute) of motion activated machine",
            "shape": []
        },
        "MotionActivatedEnergyConsumption": {
            "description": "Energy consumption (kWh) of motion activated machine",
            "shape": []
        },
        "ManualDropRate": {
            "description": "Drop rate (drops per minute) of manual machine",
            "shape": []
        },
        "ManualEnergyConsumption": {
            "description": "Energy consumption (kWh) of manual machine",
            "shape": []
        },
        "MaxManualPercentage": {
            "description": "Maximum percentage of machines that can be manual",
            "shape": []
        },
        "MinMotionActivatedMachines": {
            "description": "Minimum number of motion activated machines",
            "shape": []
        },
        "MinTotalDrops": {
            "description": "Minimum total drop delivery (drops per minute)",
            "shape": []
        },
        "MaxTotalEnergy": {
            "description": "Maximum total energy consumption (kWh per minute)",
            "shape": []
        }
    },
    "variables": {
        "ManualMachines": {
            "description": "The number of manual machines",
            "type": "continuous",
            "shape": []
        },
        "MotionActivatedMachines": {
            "description": "The number of motion activated machines",
            "type": "continuous",
            "shape": []
        },
        "TotalMachines": {
            "description": "The total number of machines",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The number of manual machines does not exceed MaxManualPercentage of the total machines.",
            "formulation": "ManualMachines \\leq MaxManualPercentage \\times (ManualMachines + MotionActivatedMachines)",
            "code": {
                "gurobipy": "model.addConstr((1 - MaxManualPercentage) * ManualMachines - MaxManualPercentage * MotionActivatedMachines <= 0)"
            }
        },
        {
            "description": "At least MinMotionActivatedMachines are motion activated.",
            "formulation": "MotionActivatedMachines \\geq MinMotionActivatedMachines",
            "code": {
                "gurobipy": "model.addConstr(MotionActivatedMachines >= MinMotionActivatedMachines)"
            }
        },
        {
            "description": "The combined drop rate is at least MinTotalDrops.",
            "formulation": "MotionActivatedDropRate \\times MotionActivatedMachines + ManualDropRate \\times ManualMachines \\geq MinTotalDrops",
            "code": {
                "gurobipy": "model.addConstr(MotionActivatedDropRate * MotionActivatedMachines + ManualDropRate * ManualMachines >= MinTotalDrops)"
            }
        },
        {
            "description": "The total energy consumption does not exceed MaxTotalEnergy.",
            "formulation": "ManualMachines \\cdot ManualEnergyConsumption + MotionActivatedMachines \\cdot MotionActivatedEnergyConsumption \\leq MaxTotalEnergy",
            "code": {
                "gurobipy": "model.addConstr(ManualMachines * ManualEnergyConsumption + MotionActivatedMachines * MotionActivatedEnergyConsumption <= MaxTotalEnergy)"
            }
        },
        {
            "description": "The total number of machines is equal to the sum of manual and motion-activated machines.",
            "formulation": "TotalMachines = ManualMachines + MotionActivatedMachines",
            "code": {
                "gurobipy": "model.addConstr(TotalMachines == ManualMachines + MotionActivatedMachines)"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total number of machines.",
        "formulation": "Minimize\\ TotalMachines",
        "code": {
            "gurobipy": "model.setObjective(TotalMachines, GRB.MINIMIZE)"
        }
    }
}