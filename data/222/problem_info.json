{
    "parametrized_description": "Determine the number of circular tables and rectangular tables to set up, where each circular table accommodates PosterBoardsPerCircularTable poster boards and ParticipantsPerCircularTable participants, thereby catering to GuestsPerCircularTable guests, and occupies SpacePerCircularTable space units. Each rectangular table accommodates PosterBoardsPerRectangularTable poster boards and ParticipantsPerRectangularTable participants, thereby catering to GuestsPerRectangularTable guests, and occupies SpacePerRectangularTable space units. The total number of participants must be at least MinimumParticipants, the total number of poster boards must be at least MinimumPosterBoards, and the total space used must not exceed AvailableSpace. The objective is to maximize the number of catered guests.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "PosterBoardsPerCircularTable": {
            "description": "Number of poster boards per circular table",
            "shape": []
        },
        "ParticipantsPerCircularTable": {
            "description": "Number of participants per circular table",
            "shape": []
        },
        "GuestsPerCircularTable": {
            "description": "Number of guests catered per circular table",
            "shape": []
        },
        "SpacePerCircularTable": {
            "description": "Space units taken by one circular table",
            "shape": []
        },
        "PosterBoardsPerRectangularTable": {
            "description": "Number of poster boards per rectangular table",
            "shape": []
        },
        "ParticipantsPerRectangularTable": {
            "description": "Number of participants per rectangular table",
            "shape": []
        },
        "GuestsPerRectangularTable": {
            "description": "Number of guests catered per rectangular table",
            "shape": []
        },
        "SpacePerRectangularTable": {
            "description": "Space units taken by one rectangular table",
            "shape": []
        },
        "MinimumParticipants": {
            "description": "Minimum number of participants to be accommodated",
            "shape": []
        },
        "MinimumPosterBoards": {
            "description": "Minimum number of poster boards to be accommodated",
            "shape": []
        },
        "AvailableSpace": {
            "description": "Total available space units",
            "shape": []
        }
    },
    "variables": {
        "CircularTables": {
            "description": "The number of circular tables",
            "type": "continuous",
            "shape": [
                "integer"
            ]
        },
        "RectangularTables": {
            "description": "The number of rectangular tables",
            "type": "continuous",
            "shape": [
                "integer"
            ]
        }
    },
    "constraints": [
        {
            "description": "The total number of participants from circular and rectangular tables must be at least MinimumParticipants.",
            "formulation": "ParticipantsPerCircularTable \\cdot CircularTables + ParticipantsPerRectangularTable \\cdot RectangularTables \\geq MinimumParticipants",
            "code": {
                "gurobipy": "model.addConstr(ParticipantsPerCircularTable * CircularTables + ParticipantsPerRectangularTable * RectangularTables >= MinimumParticipants)"
            }
        },
        {
            "description": "The total number of poster boards from circular and rectangular tables must be at least MinimumPosterBoards.",
            "formulation": "PosterBoardsPerCircularTable \\cdot CircularTables + PosterBoardsPerRectangularTable \\cdot RectangularTables \\geq MinimumPosterBoards",
            "code": {
                "gurobipy": "model.addConstr(PosterBoardsPerCircularTable * CircularTables + PosterBoardsPerRectangularTable * RectangularTables >= MinimumPosterBoards)"
            }
        },
        {
            "description": "The total space used by circular and rectangular tables must not exceed AvailableSpace.",
            "formulation": "SpacePerCircularTable \\cdot CircularTables + SpacePerRectangularTable \\cdot RectangularTables \\leq AvailableSpace",
            "code": {
                "gurobipy": "model.addConstr(SpacePerCircularTable * CircularTables + SpacePerRectangularTable * RectangularTables <= AvailableSpace)"
            }
        }
    ],
    "objective": {
        "description": "The total number of catered guests is the sum of guests from circular and rectangular tables. The objective is to maximize the number of catered guests.",
        "formulation": "Max \\ GuestsPerCircularTable \\times CircularTables + GuestsPerRectangularTable \\times RectangularTables",
        "code": {
            "gurobipy": "model.setObjective(GuestsPerCircularTable * CircularTables + GuestsPerRectangularTable * RectangularTables, GRB.MAXIMIZE)"
        }
    }
}