{
    "parametrized_description": "A patient selects a number of FishMeals and ChickenMeals to minimize the total fat intake, which is calculated as FatPerFishMeal multiplied by FishMeals plus FatPerChickenMeal multiplied by ChickenMeals. This selection must satisfy the following constraints: the total protein intake, calculated as ProteinPerFishMeal multiplied by FishMeals plus ProteinPerChickenMeal multiplied by ChickenMeals, must be at least MinimumProtein; the total iron intake, calculated as IronPerFishMeal multiplied by FishMeals plus IronPerChickenMeal multiplied by ChickenMeals, must be at least MinimumIron; and the number of ChickenMeals must be at least ChickenToFishRatio multiplied by the number of FishMeals.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "ProteinPerFishMeal": {
            "description": "Protein per fish meal",
            "shape": []
        },
        "ProteinPerChickenMeal": {
            "description": "Protein per chicken meal",
            "shape": []
        },
        "IronPerFishMeal": {
            "description": "Iron per fish meal",
            "shape": []
        },
        "IronPerChickenMeal": {
            "description": "Iron per chicken meal",
            "shape": []
        },
        "FatPerFishMeal": {
            "description": "Fat per fish meal",
            "shape": []
        },
        "FatPerChickenMeal": {
            "description": "Fat per chicken meal",
            "shape": []
        },
        "MinimumProtein": {
            "description": "Minimum required protein",
            "shape": []
        },
        "MinimumIron": {
            "description": "Minimum required iron",
            "shape": []
        },
        "ChickenToFishRatio": {
            "description": "Minimum ratio of chicken meals to fish meals",
            "shape": []
        }
    },
    "variables": {
        "FishMeals": {
            "description": "The number of fish meals",
            "type": "continuous",
            "shape": []
        },
        "ChickenMeals": {
            "description": "The number of chicken meals",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total protein intake, calculated as ProteinPerFishMeal multiplied by FishMeals plus ProteinPerChickenMeal multiplied by ChickenMeals, must be at least MinimumProtein.",
            "formulation": "ProteinPerFishMeal \\times FishMeals + ProteinPerChickenMeal \\times ChickenMeals \\geq MinimumProtein",
            "code": {
                "gurobipy": "model.addConstr(ProteinPerFishMeal * FishMeals + ProteinPerChickenMeal * ChickenMeals >= MinimumProtein)"
            }
        },
        {
            "description": "The total iron intake, calculated as IronPerFishMeal multiplied by FishMeals plus IronPerChickenMeal multiplied by ChickenMeals, must be at least MinimumIron.",
            "formulation": "IronPerFishMeal \\cdot FishMeals + IronPerChickenMeal \\cdot ChickenMeals \\geq MinimumIron",
            "code": {
                "gurobipy": "model.addConstr(IronPerFishMeal * FishMeals + IronPerChickenMeal * ChickenMeals >= MinimumIron)"
            }
        },
        {
            "description": "The number of ChickenMeals must be at least ChickenToFishRatio multiplied by the number of FishMeals.",
            "formulation": "ChickenMeals \\geq ChickenToFishRatio \\times FishMeals",
            "code": {
                "gurobipy": "model.addConstr(ChickenMeals >= ChickenToFishRatio * FishMeals)"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total fat intake, calculated as FatPerFishMeal multiplied by FishMeals plus FatPerChickenMeal multiplied by ChickenMeals.",
        "formulation": "Min FatPerFishMeal \\cdot FishMeals + FatPerChickenMeal \\cdot ChickenMeals",
        "code": {
            "gurobipy": "model.setObjective(FatPerFishMeal * FishMeals + FatPerChickenMeal * ChickenMeals, GRB.MINIMIZE)"
        }
    }
}