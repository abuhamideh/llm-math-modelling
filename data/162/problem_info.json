{
    "parametrized_description": "A farmer needs to transport TotalChickens chickens using buses and cars. Each bus trip can carry BusCapacity chickens and takes BusTripTime hours. Each car trip can carry CarCapacity chickens and takes CarTripTime hours. The number of bus trips cannot exceed MaxBusTrips. At least MinCarTripPercentage of the total trips must be by car. The objective is to minimize the total transportation time.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "BusCapacity": {
            "description": "Number of chickens that a bus can carry per trip",
            "shape": []
        },
        "BusTripTime": {
            "description": "Time taken by a bus per trip in hours",
            "shape": []
        },
        "CarCapacity": {
            "description": "Number of chickens that a car can carry per trip",
            "shape": []
        },
        "CarTripTime": {
            "description": "Time taken by a car per trip in hours",
            "shape": []
        },
        "MaxBusTrips": {
            "description": "Maximum allowed number of bus trips",
            "shape": []
        },
        "MinCarTripPercentage": {
            "description": "Minimum required percentage of total trips that must be by car",
            "shape": []
        },
        "TotalChickens": {
            "description": "Total number of chickens that need to be transported",
            "shape": []
        }
    },
    "variables": {
        "NumberOfBusTrips": {
            "description": "The number of bus trips",
            "type": "continuous",
            "shape": []
        },
        "NumberOfCarTrips": {
            "description": "The number of car trips",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The number of bus trips cannot exceed MaxBusTrips.",
            "formulation": "NumberOfBusTrips \\leq MaxBusTrips",
            "code": {
                "gurobipy": "model.addConstr(NumberOfBusTrips <= MaxBusTrips)"
            }
        },
        {
            "description": "At least MinCarTripPercentage of the total trips must be by car.",
            "formulation": "NumberOfCarTrips \\geq MinCarTripPercentage \\times (NumberOfCarTrips + NumberOfBusTrips)",
            "code": {
                "gurobipy": "model.addConstr(NumberOfCarTrips >= MinCarTripPercentage * (NumberOfCarTrips + NumberOfBusTrips))"
            }
        },
        {
            "description": "The total number of chickens transported by buses and cars must be at least TotalChickens.",
            "formulation": "NumberOfBusTrips \\cdot BusCapacity + NumberOfCarTrips \\cdot CarCapacity \\geq TotalChickens",
            "code": {
                "gurobipy": "model.addConstr(NumberOfBusTrips * BusCapacity + NumberOfCarTrips * CarCapacity >= TotalChickens)"
            }
        }
    ],
    "objective": {
        "description": "The total transportation time is the sum of the times of all bus and car trips. The objective is to minimize the total transportation time.",
        "formulation": "Min \\left( NumberOfBusTrips \\times BusTripTime + NumberOfCarTrips \\times CarTripTime \\right)",
        "code": {
            "gurobipy": "model.setObjective(NumberOfBusTrips * BusTripTime + NumberOfCarTrips * CarTripTime, GRB.MINIMIZE)"
        }
    }
}