{
    "parametrized_description": "A company delivers packages using camels and horses. Each camel can carry CamelCapacity packages and requires CamelFood units of food each, while each horse can carry HorseCapacity packages and requires HorseFood units of food each. The company needs to deliver at least MinPackages packages and has FoodAvailable units of food available. The number of horses cannot exceed the number of camels. Determine the number of camels and horses to minimize the total number of animals used.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "CamelCapacity": {
            "description": "Number of packages a camel can carry",
            "shape": []
        },
        "HorseCapacity": {
            "description": "Number of packages a horse can carry",
            "shape": []
        },
        "CamelFood": {
            "description": "Units of food a camel requires",
            "shape": []
        },
        "HorseFood": {
            "description": "Units of food a horse requires",
            "shape": []
        },
        "MinPackages": {
            "description": "Minimum number of packages to be delivered",
            "shape": []
        },
        "FoodAvailable": {
            "description": "Total units of food available",
            "shape": []
        }
    },
    "variables": {
        "NumberOfCamels": {
            "description": "The number of camels used to deliver packages",
            "type": "continuous",
            "shape": [
                "Integer"
            ]
        },
        "NumberOfHorses": {
            "description": "The number of horses used to deliver packages",
            "type": "continuous",
            "shape": [
                "Integer"
            ]
        }
    },
    "constraints": [
        {
            "description": "The total number of packages delivered by camels and horses must be at least MinPackages.",
            "formulation": "NumberOfCamels \\cdot CamelCapacity + NumberOfHorses \\cdot HorseCapacity \\geq MinPackages",
            "code": {
                "gurobipy": "model.addConstr(NumberOfCamels * CamelCapacity + NumberOfHorses * HorseCapacity >= MinPackages)"
            }
        },
        {
            "description": "The total food consumed by camels and horses must not exceed FoodAvailable units.",
            "formulation": "CamelFood \\cdot NumberOfCamels + HorseFood \\cdot NumberOfHorses \\leq FoodAvailable",
            "code": {
                "gurobipy": "model.addConstr(CamelFood * NumberOfCamels + HorseFood * NumberOfHorses <= FoodAvailable)"
            }
        },
        {
            "description": "The number of horses cannot exceed the number of camels.",
            "formulation": "NumberOfHorses \\leq NumberOfCamels",
            "code": {
                "gurobipy": "model.addConstr(NumberOfHorses <= NumberOfCamels)"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total number of camels and horses used.",
        "formulation": "Min \\left( NumberOfCamels + NumberOfHorses \\right )",
        "code": {
            "gurobipy": "model.setObjective(NumberOfCamels + NumberOfHorses, GRB.MINIMIZE)"
        }
    }
}