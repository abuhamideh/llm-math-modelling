{
    "parametrized_description": "Both subsoil and topsoil need to be added to a garden bed. The objective is to minimize the total amount of water required to hydrate the garden bed, where each bag of subsoil requires WaterSubsoil units of water per day and each bag of topsoil requires WaterTopsoil units of water per day. The total number of bags of subsoil and topsoil combined must not exceed MaxTotalBags. Additionally, at least MinTopsoilBags bags of topsoil must be used, and the proportion of topsoil bags must not exceed MaxTopsoilProportion of all bags.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "WaterSubsoil": {
            "description": "Amount of water required to hydrate one bag of subsoil per day",
            "shape": []
        },
        "WaterTopsoil": {
            "description": "Amount of water required to hydrate one bag of topsoil per day",
            "shape": []
        },
        "MaxTotalBags": {
            "description": "Maximum number of bags of topsoil and subsoil combined",
            "shape": []
        },
        "MinTopsoilBags": {
            "description": "Minimum number of topsoil bags to be used",
            "shape": []
        },
        "MaxTopsoilProportion": {
            "description": "Maximum proportion of bags that can be topsoil",
            "shape": []
        }
    },
    "variables": {
        "SubsoilBags": {
            "description": "The number of subsoil bags",
            "type": "continuous",
            "shape": []
        },
        "TopsoilBags": {
            "description": "The number of topsoil bags",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total number of subsoil and topsoil bags combined must not exceed MaxTotalBags.",
            "formulation": "SubsoilBags + TopsoilBags \\leq MaxTotalBags",
            "code": {
                "gurobipy": "model.addConstr(SubsoilBags + TopsoilBags <= MaxTotalBags)"
            }
        },
        {
            "description": "At least MinTopsoilBags bags of topsoil must be used.",
            "formulation": "TopsoilBags \\geq MinTopsoilBags",
            "code": {
                "gurobipy": "model.addConstr(TopsoilBags >= MinTopsoilBags)"
            }
        },
        {
            "description": "The proportion of topsoil bags must not exceed MaxTopsoilProportion of all bags.",
            "formulation": "TopsoilBags \\leq MaxTopsoilProportion \\times ( TopsoilBags + SubsoilBags )",
            "code": {
                "gurobipy": "model.addConstr(TopsoilBags <= MaxTopsoilProportion * (TopsoilBags + SubsoilBags))"
            }
        }
    ],
    "objective": {
        "description": "Total water required is the sum of (WaterSubsoil * number of subsoil bags) and (WaterTopsoil * number of topsoil bags). The objective is to minimize the total water required.",
        "formulation": "Min \\left( WaterSubsoil \\times SubsoilBags + WaterTopsoil \\times TopsoilBags \\right )",
        "code": {
            "gurobipy": "model.setObjective(WaterSubsoil * SubsoilBags + WaterTopsoil * TopsoilBags, GRB.MINIMIZE)"
        }
    }
}