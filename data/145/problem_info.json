{
    "parametrized_description": "An aquarium uses Otters and Dolphins to perform tricks. Each Otter performs OtterTricks at a time and requires OtterTreats treats per performance. Each Dolphin performs DolphinTricks at a time and requires DolphinTreats treats per performance. The aquarium must use at least MinDolphins Dolphins and ensure that no more than MaxOtterPercentage of the total performers are Otters. With a total of TotalTreats treats available, the objective is to maximize the total number of tricks performed.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "OtterTricks": {
            "description": "Number of tricks an otter can perform at a time",
            "shape": []
        },
        "OtterTreats": {
            "description": "Number of treats an otter requires to perform at a time",
            "shape": []
        },
        "DolphinTricks": {
            "description": "Number of tricks a dolphin can perform at a time",
            "shape": []
        },
        "DolphinTreats": {
            "description": "Number of treats a dolphin requires to perform at a time",
            "shape": []
        },
        "MinDolphins": {
            "description": "Minimum number of dolphins required",
            "shape": []
        },
        "MaxOtterPercentage": {
            "description": "Maximum percentage of performers that can be otters",
            "shape": []
        },
        "TotalTreats": {
            "description": "Total number of treats available",
            "shape": []
        }
    },
    "variables": {
        "NumberOfDolphins": {
            "description": "The number of dolphins",
            "type": "continuous",
            "shape": []
        },
        "NumberOfOtters": {
            "description": "The number of otters",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The number of Dolphins must be at least MinDolphins.",
            "formulation": "NumberOfDolphins \\geq MinDolphins",
            "code": {
                "gurobipy": "model.addConstr(NumberOfDolphins >= MinDolphins)"
            }
        },
        {
            "description": "The number of Otters must not exceed MaxOtterPercentage of the total number of performers.",
            "formulation": "NumberOfOtters \\leq MaxOtterPercentage \\times (NumberOfOtters + NumberOfDolphins)",
            "code": {
                "gurobipy": "model.addConstr(NumberOfOtters <= MaxOtterPercentage * (NumberOfOtters + NumberOfDolphins))"
            }
        },
        {
            "description": "The total number of treats used by Otters and Dolphins must not exceed TotalTreats.",
            "formulation": "NumberOfOtters \\times OtterTreats + NumberOfDolphins \\times DolphinTreats \\leq TotalTreats",
            "code": {
                "gurobipy": "model.addConstr(OtterTreats * NumberOfOtters + DolphinTreats * NumberOfDolphins <= TotalTreats)"
            }
        }
    ],
    "objective": {
        "description": "Maximize the total number of tricks performed, which is the sum of OtterTricks multiplied by the number of Otters and DolphinTricks multiplied by the number of Dolphins.",
        "formulation": "Max \\ OtterTricks \\cdot NumberOfOtters + DolphinTricks \\cdot NumberOfDolphins",
        "code": {
            "gurobipy": "model.setObjective(OtterTricks * NumberOfOtters + DolphinTricks * NumberOfDolphins, GRB.MAXIMIZE)"
        }
    }
}