{
    "parametrized_description": "Determine the quantities of crab cakes and lobster rolls that minimize the total unsaturated fat, where total unsaturated fat is calculated as UnsaturatedFatPerCrabCake multiplied by the number of crab cakes plus UnsaturatedFatPerLobsterRoll multiplied by the number of lobster rolls. Ensure that the total vitamin A intake is at least MinimumVitaminA, the total vitamin C intake is at least MinimumVitaminC, and the proportion of lobster rolls does not exceed MaximumLobsterFraction of the total meals.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "MinimumVitaminA": {
            "description": "Minimum required units of vitamin A",
            "shape": []
        },
        "MinimumVitaminC": {
            "description": "Minimum required units of vitamin C",
            "shape": []
        },
        "VitaminAPerCrabCake": {
            "description": "Units of vitamin A per crab cake",
            "shape": []
        },
        "VitaminCPerCrabCake": {
            "description": "Units of vitamin C per crab cake",
            "shape": []
        },
        "VitaminAPerLobsterRoll": {
            "description": "Units of vitamin A per lobster roll",
            "shape": []
        },
        "VitaminCPerLobsterRoll": {
            "description": "Units of vitamin C per lobster roll",
            "shape": []
        },
        "UnsaturatedFatPerCrabCake": {
            "description": "Units of unsaturated fat per crab cake",
            "shape": []
        },
        "UnsaturatedFatPerLobsterRoll": {
            "description": "Units of unsaturated fat per lobster roll",
            "shape": []
        },
        "MaximumLobsterFraction": {
            "description": "Maximum fraction of meals that can be lobster rolls",
            "shape": []
        }
    },
    "variables": {
        "QuantityCrabCake": {
            "description": "The number of crab cakes",
            "type": "continuous",
            "shape": []
        },
        "QuantityLobsterRoll": {
            "description": "The number of lobster rolls",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total vitamin A intake from crab cakes and lobster rolls must be at least MinimumVitaminA.",
            "formulation": "VitaminAPerCrabCake \\cdot QuantityCrabCake + VitaminAPerLobsterRoll \\cdot QuantityLobsterRoll \\geq MinimumVitaminA",
            "code": {
                "gurobipy": "model.addConstr(VitaminAPerCrabCake * QuantityCrabCake + VitaminAPerLobsterRoll * QuantityLobsterRoll >= MinimumVitaminA)"
            }
        },
        {
            "description": "The total vitamin C intake from crab cakes and lobster rolls must be at least MinimumVitaminC.",
            "formulation": "VitaminCPerCrabCake QuantityCrabCake + VitaminCPerLobsterRoll QuantityLobsterRoll \\geq MinimumVitaminC",
            "code": {
                "gurobipy": "model.addConstr(VitaminCPerCrabCake * QuantityCrabCake + VitaminCPerLobsterRoll * QuantityLobsterRoll >= MinimumVitaminC)"
            }
        },
        {
            "description": "The proportion of lobster rolls in the total meals must not exceed MaximumLobsterFraction.",
            "formulation": "QuantityLobsterRoll \\leq MaximumLobsterFraction \\times (QuantityCrabCake + QuantityLobsterRoll)",
            "code": {
                "gurobipy": "model.addConstr(QuantityLobsterRoll <= MaximumLobsterFraction * (QuantityCrabCake + QuantityLobsterRoll))"
            }
        }
    ],
    "objective": {
        "description": "Total unsaturated fat is calculated as UnsaturatedFatPerCrabCake multiplied by the number of crab cakes plus UnsaturatedFatPerLobsterRoll multiplied by the number of lobster rolls. The objective is to minimize the total unsaturated fat.",
        "formulation": "Min UnsaturatedFatPerCrabCake \\cdot QuantityCrabCake + UnsaturatedFatPerLobsterRoll \\cdot QuantityLobsterRoll",
        "code": {
            "gurobipy": "model.setObjective(UnsaturatedFatPerCrabCake * QuantityCrabCake + UnsaturatedFatPerLobsterRoll * QuantityLobsterRoll, GRB.MINIMIZE)"
        }
    }
}