{
    "parametrized_description": "A pharmacy has TotalMorphine amount of morphine to produce painkiller and sleeping pills. Each painkiller pill requires MorphinePerPainkiller of morphine and DigestiveMedicinePerPainkiller units of digestive medicine. Each sleeping pill requires MorphinePerSleepingPill of morphine and DigestiveMedicinePerSleepingPill units of digestive medicine. The pharmacy must produce at least MinPainkillerPills painkiller pills. Additionally, at least MinSleepingPillsProportion proportion of the total pills produced should be sleeping pills. The objective is to determine the number of each type of pill to produce in order to minimize the total amount of digestive medicine used.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "TotalMorphine": {
            "description": "Total amount of morphine available",
            "shape": []
        },
        "MorphinePerPainkiller": {
            "description": "Amount of morphine required for one painkiller pill",
            "shape": []
        },
        "MorphinePerSleepingPill": {
            "description": "Amount of morphine required for one sleeping pill",
            "shape": []
        },
        "DigestiveMedicinePerPainkiller": {
            "description": "Amount of digestive medicine required for one painkiller pill",
            "shape": []
        },
        "DigestiveMedicinePerSleepingPill": {
            "description": "Amount of digestive medicine required for one sleeping pill",
            "shape": []
        },
        "MinPainkillerPills": {
            "description": "Minimum number of painkiller pills to be produced",
            "shape": []
        },
        "MinSleepingPillsProportion": {
            "description": "Minimum proportion of pills that should be sleeping pills",
            "shape": []
        }
    },
    "variables": {
        "PainkillerPills": {
            "description": "The number of painkiller pills to be produced",
            "type": "continuous",
            "shape": []
        },
        "SleepingPills": {
            "description": "The number of sleeping pills to be produced",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total amount of morphine used for producing painkiller and sleeping pills does not exceed TotalMorphine.",
            "formulation": "MorphinePerPainkiller \\cdot PainkillerPills + MorphinePerSleepingPill \\cdot SleepingPills \\leq TotalMorphine",
            "code": {
                "gurobipy": "model.addConstr(MorphinePerPainkiller * PainkillerPills + MorphinePerSleepingPill * SleepingPills <= TotalMorphine)"
            }
        },
        {
            "description": "At least MinPainkillerPills painkiller pills must be produced.",
            "formulation": "PainkillerPills \\geq MinPainkillerPills",
            "code": {
                "gurobipy": "model.addConstr(PainkillerPills >= MinPainkillerPills)"
            }
        },
        {
            "description": "At least MinSleepingPillsProportion proportion of the total pills produced must be sleeping pills.",
            "formulation": "SleepingPills \\geq MinSleepingPillsProportion \\times (PainkillerPills + SleepingPills)",
            "code": {
                "gurobipy": "model.addConstr(SleepingPills >= MinSleepingPillsProportion * (PainkillerPills + SleepingPills))"
            }
        }
    ],
    "objective": {
        "description": "The total amount of digestive medicine used is the sum of DigestiveMedicinePerPainkiller times the number of painkiller pills and DigestiveMedicinePerSleepingPill times the number of sleeping pills. The objective is to minimize the total amount of digestive medicine used.",
        "formulation": "Min \\ DigestiveMedicinePerPainkiller \\times PainkillerPills + DigestiveMedicinePerSleepingPill \\times SleepingPills",
        "code": {
            "gurobipy": "model.setObjective(DigestiveMedicinePerPainkiller * PainkillerPills + DigestiveMedicinePerSleepingPill * SleepingPills, GRB.MINIMIZE)"
        }
    }
}