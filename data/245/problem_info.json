{
    "parametrized_description": "An autobody shop needs to purchase AutoElectricJacks and GasPoweredJacks. Each AutoElectricJack can process AutoElectricProcessingRate cars per hour and uses AutoElectricElectricityUsage units of electricity per hour. Each GasPoweredJack can process GasPoweredProcessingRate cars per hour and uses GasPoweredGasUsage units of gas per hour. The shop must use fewer than MaxAutoElectricJacks AutoElectricJacks. Additionally, the shop can use at most MaxElectricityUnits units of electricity and MaxGasUnits units of gas. The objective is to maximize the number of cars processed every hour.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "AutoElectricProcessingRate": {
            "description": "The number of cars processed per hour by one automatic electric jack.",
            "shape": []
        },
        "AutoElectricElectricityUsage": {
            "description": "Units of electricity used per hour by one automatic electric jack.",
            "shape": []
        },
        "GasPoweredProcessingRate": {
            "description": "The number of cars processed per hour by one gas-powered jack.",
            "shape": []
        },
        "GasPoweredGasUsage": {
            "description": "Units of gas used per hour by one gas-powered jack.",
            "shape": []
        },
        "MaxAutoElectricJacks": {
            "description": "The maximum number of automatic electric jacks that can be used.",
            "shape": []
        },
        "MaxElectricityUnits": {
            "description": "The maximum units of electricity available.",
            "shape": []
        },
        "MaxGasUnits": {
            "description": "The maximum units of gas available.",
            "shape": []
        }
    },
    "variables": {
        "AutoElectricJacksUsed": {
            "description": "The number of automatic electric jacks used",
            "type": "continuous",
            "shape": []
        },
        "GasPoweredJacksUsed": {
            "description": "The number of gas-powered jacks used",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The number of AutoElectricJacks used must be fewer than MaxAutoElectricJacks.",
            "formulation": "AutoElectricJacksUsed \\leq MaxAutoElectricJacks - 1",
            "code": {
                "gurobipy": "model.addConstr(AutoElectricJacksUsed <= MaxAutoElectricJacks - 1)"
            }
        },
        {
            "description": "The total electricity usage by AutoElectricJacks must not exceed MaxElectricityUnits.",
            "formulation": "AutoElectricElectricityUsage \\cdot AutoElectricJacksUsed \\leq MaxElectricityUnits",
            "code": {
                "gurobipy": "model.addConstr(AutoElectricElectricityUsage * AutoElectricJacksUsed <= MaxElectricityUnits)"
            }
        },
        {
            "description": "The total gas usage by GasPoweredJacks must not exceed MaxGasUnits.",
            "formulation": "GasPoweredGasUsage \\times GasPoweredJacksUsed \\leq MaxGasUnits",
            "code": {
                "gurobipy": "model.addConstr(GasPoweredGasUsage * GasPoweredJacksUsed <= MaxGasUnits)"
            }
        }
    ],
    "objective": {
        "description": "Maximize the number of cars processed every hour.",
        "formulation": "Max AutoElectricJacksUsed \\times AutoElectricProcessingRate + GasPoweredJacksUsed \\times GasPoweredProcessingRate",
        "code": {
            "gurobipy": "model.setObjective(AutoElectricJacksUsed * AutoElectricProcessingRate + GasPoweredJacksUsed * GasPoweredProcessingRate, GRB.MAXIMIZE)"
        }
    }
}