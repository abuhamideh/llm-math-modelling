{
    "parametrized_description": "A patient can be connected to two machines, Machine1 and Machine2, for certain durations. Machine1 delivers Machine1HeartDeliveryRate units of medicine to the heart per minute and Machine1BrainDeliveryRate units to the brain per minute, while producing Machine1WasteRate units of waste per minute. Machine2 delivers Machine2HeartDeliveryRate units of medicine to the heart per minute and Machine2BrainDeliveryRate units to the brain per minute, while producing Machine2WasteRate units of waste per minute. The total medicine delivered to the heart must not exceed HeartMedicineMax units, and the total medicine delivered to the brain must be at least BrainMedicineMin units. Determine the operating time for each machine to minimize the total waste produced.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "Machine1HeartDeliveryRate": {
            "description": "Units of medicine delivered to the heart per minute by machine 1",
            "shape": []
        },
        "Machine1BrainDeliveryRate": {
            "description": "Units of medicine delivered to the brain per minute by machine 1",
            "shape": []
        },
        "Machine1WasteRate": {
            "description": "Units of waste produced per minute by machine 1",
            "shape": []
        },
        "Machine2HeartDeliveryRate": {
            "description": "Units of medicine delivered to the heart per minute by machine 2",
            "shape": []
        },
        "Machine2BrainDeliveryRate": {
            "description": "Units of medicine delivered to the brain per minute by machine 2",
            "shape": []
        },
        "Machine2WasteRate": {
            "description": "Units of waste produced per minute by machine 2",
            "shape": []
        },
        "HeartMedicineMax": {
            "description": "Maximum units of medicine that can be received by the heart",
            "shape": []
        },
        "BrainMedicineMin": {
            "description": "Minimum units of medicine that should be received by the brain",
            "shape": []
        }
    },
    "variables": {
        "Machine1OperatingTime": {
            "description": "The operating time of Machine 1 in minutes",
            "type": "continuous",
            "shape": []
        },
        "Machine2OperatingTime": {
            "description": "The operating time of Machine 2 in minutes",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total medicine delivered to the heart by Machine1 and Machine2 must not exceed HeartMedicineMax units.",
            "formulation": "Machine1HeartDeliveryRate \\cdot Machine1OperatingTime + Machine2HeartDeliveryRate \\cdot Machine2OperatingTime \\leq HeartMedicineMax",
            "code": {
                "gurobipy": "model.addConstr(Machine1HeartDeliveryRate * Machine1OperatingTime + Machine2HeartDeliveryRate * Machine2OperatingTime <= HeartMedicineMax)"
            }
        },
        {
            "description": "The total medicine delivered to the brain by Machine1 and Machine2 must be at least BrainMedicineMin units.",
            "formulation": "Machine1BrainDeliveryRate \\times Machine1OperatingTime + Machine2BrainDeliveryRate \\times Machine2OperatingTime \\geq BrainMedicineMin",
            "code": {
                "gurobipy": "model.addConstr(Machine1BrainDeliveryRate * Machine1OperatingTime + Machine2BrainDeliveryRate * Machine2OperatingTime >= BrainMedicineMin)"
            }
        }
    ],
    "objective": {
        "description": "The total waste produced is the sum of waste produced by Machine1 and Machine2. The objective is to minimize the total waste produced.",
        "formulation": "Min \\ Machine1WasteRate \\times Machine1OperatingTime + Machine2WasteRate \\times Machine2OperatingTime",
        "code": {
            "gurobipy": "model.setObjective(Machine1WasteRate * Machine1OperatingTime + Machine2WasteRate * Machine2OperatingTime, GRB.MINIMIZE)"
        }
    }
}