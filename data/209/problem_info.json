{
    "parametrized_description": "The company produces two types of workbooks: math and English. It must produce at least MinMathWorkbooks math workbooks and at least MinEnglishWorkbooks English workbooks, but no more than MaxMathWorkbooks math workbooks and no more than MaxEnglishWorkbooks English workbooks. Additionally, the total number of workbooks produced must be at least MinTotalWorkbooks. The objective is to maximize the total profit, which is calculated as ProfitMathWorkbook multiplied by the number of math workbooks plus ProfitEnglishWorkbook multiplied by the number of English workbooks.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "MinMathWorkbooks": {
            "description": "Minimum number of math workbooks to produce",
            "shape": []
        },
        "MinEnglishWorkbooks": {
            "description": "Minimum number of English workbooks to produce",
            "shape": []
        },
        "MaxMathWorkbooks": {
            "description": "Maximum number of math workbooks to produce",
            "shape": []
        },
        "MaxEnglishWorkbooks": {
            "description": "Maximum number of English workbooks to produce",
            "shape": []
        },
        "MinTotalWorkbooks": {
            "description": "Minimum total number of workbooks to produce",
            "shape": []
        },
        "ProfitMathWorkbook": {
            "description": "Profit per math workbook",
            "shape": []
        },
        "ProfitEnglishWorkbook": {
            "description": "Profit per English workbook",
            "shape": []
        }
    },
    "variables": {
        "QuantityMathWorkbooks": {
            "description": "The number of math workbooks produced",
            "type": "continuous",
            "shape": []
        },
        "QuantityEnglishWorkbooks": {
            "description": "The number of English workbooks produced",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The number of math workbooks produced must be at least MinMathWorkbooks.",
            "formulation": "QuantityMathWorkbooks \\geq MinMathWorkbooks",
            "code": {
                "gurobipy": "model.addConstr(QuantityMathWorkbooks >= MinMathWorkbooks)"
            }
        },
        {
            "description": "The number of English workbooks produced must be at least MinEnglishWorkbooks.",
            "formulation": "QuantityEnglishWorkbooks \\geq MinEnglishWorkbooks",
            "code": {
                "gurobipy": "model.addConstr(QuantityEnglishWorkbooks >= MinEnglishWorkbooks)"
            }
        },
        {
            "description": "The number of math workbooks produced must not exceed MaxMathWorkbooks.",
            "formulation": "QuantityMathWorkbooks \\leq MaxMathWorkbooks",
            "code": {
                "gurobipy": "model.addConstr(QuantityMathWorkbooks <= MaxMathWorkbooks)"
            }
        },
        {
            "description": "The number of English workbooks produced must not exceed MaxEnglishWorkbooks.",
            "formulation": "QuantityEnglishWorkbooks \\leq MaxEnglishWorkbooks",
            "code": {
                "gurobipy": "model.addConstr(QuantityEnglishWorkbooks <= MaxEnglishWorkbooks)"
            }
        },
        {
            "description": "The total number of workbooks produced must be at least MinTotalWorkbooks.",
            "formulation": "QuantityMathWorkbooks + QuantityEnglishWorkbooks \\geq MinTotalWorkbooks",
            "code": {
                "gurobipy": "model.addConstr(QuantityMathWorkbooks + QuantityEnglishWorkbooks >= MinTotalWorkbooks, \"TotalWorkbooks\")"
            }
        }
    ],
    "objective": {
        "description": "Total profit is calculated as ProfitMathWorkbook multiplied by the number of math workbooks plus ProfitEnglishWorkbook multiplied by the number of English workbooks. The objective is to maximize the total profit.",
        "formulation": "Max \\ ProfitMathWorkbook \\times QuantityMathWorkbooks + ProfitEnglishWorkbook \\times QuantityEnglishWorkbooks",
        "code": {
            "gurobipy": "model.setObjective(ProfitMathWorkbook * QuantityMathWorkbooks + ProfitEnglishWorkbook * QuantityEnglishWorkbooks, GRB.MAXIMIZE)"
        }
    }
}