{
    "parametrized_description": "Define decision variables for the number of seasonal volunteers and full-time volunteers. The objective is to maximize the total number of gifts delivered, calculated as GiftsPerSeasonal multiplied by the number of seasonal volunteers plus GiftsPerFullTime multiplied by the number of full-time volunteers. The constraints are that the total points awarded, PointsPerSeasonal times seasonal volunteers plus PointsPerFullTime times full-time volunteers, does not exceed PointsLimit; the number of seasonal volunteers does not exceed MaxSeasonalPercentage of the total number of volunteers; and the number of full-time volunteers is at least MinFullTimeVolunteers.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "PointsLimit": {
            "description": "Number of points available to distribute",
            "shape": []
        },
        "MaxSeasonalPercentage": {
            "description": "Maximum percentage of volunteers that can be seasonal",
            "shape": []
        },
        "MinFullTimeVolunteers": {
            "description": "Minimum number of full-time volunteers required",
            "shape": []
        },
        "GiftsPerSeasonal": {
            "description": "Number of gifts delivered by each seasonal volunteer",
            "shape": []
        },
        "PointsPerSeasonal": {
            "description": "Points awarded to each seasonal volunteer",
            "shape": []
        },
        "GiftsPerFullTime": {
            "description": "Number of gifts delivered by each full-time volunteer",
            "shape": []
        },
        "PointsPerFullTime": {
            "description": "Points awarded to each full-time volunteer",
            "shape": []
        }
    },
    "variables": {
        "SeasonalVolunteers": {
            "description": "The number of seasonal volunteers",
            "type": "continuous",
            "shape": [
                "integer"
            ]
        },
        "FullTimeVolunteers": {
            "description": "The number of full-time volunteers",
            "type": "continuous",
            "shape": [
                "integer"
            ]
        }
    },
    "constraints": [
        {
            "description": "The total points awarded to volunteers must not exceed PointsLimit. This is calculated as PointsPerSeasonal multiplied by the number of seasonal volunteers plus PointsPerFullTime multiplied by the number of full-time volunteers.",
            "formulation": "PointsPerSeasonal \\cdot SeasonalVolunteers + PointsPerFullTime \\cdot FullTimeVolunteers \\leq PointsLimit",
            "code": {
                "gurobipy": "model.addConstr(PointsPerSeasonal * SeasonalVolunteers + PointsPerFullTime * FullTimeVolunteers <= PointsLimit)"
            }
        },
        {
            "description": "The number of seasonal volunteers must not exceed MaxSeasonalPercentage of the total number of volunteers. Mathematically, SeasonalVolunteers \u2264 MaxSeasonalPercentage * (SeasonalVolunteers + FullTimeVolunteers).",
            "formulation": "SeasonalVolunteers \\leq MaxSeasonalPercentage \\times (SeasonalVolunteers + FullTimeVolunteers)",
            "code": {
                "gurobipy": "model.addConstr(SeasonalVolunteers <= MaxSeasonalPercentage * (SeasonalVolunteers + FullTimeVolunteers))"
            }
        },
        {
            "description": "The number of full-time volunteers must be at least MinFullTimeVolunteers.",
            "formulation": "FullTimeVolunteers \\geq MinFullTimeVolunteers",
            "code": {
                "gurobipy": "model.addConstr(FullTimeVolunteers >= MinFullTimeVolunteers)"
            }
        }
    ],
    "objective": {
        "description": "Maximize the total number of gifts delivered, calculated as GiftsPerSeasonal multiplied by the number of seasonal volunteers plus GiftsPerFullTime multiplied by the number of full-time volunteers.",
        "formulation": "Max \\left( GiftsPerSeasonal \\times SeasonalVolunteers + GiftsPerFullTime \\times FullTimeVolunteers \\right)",
        "code": {
            "gurobipy": "model.setObjective(GiftsPerSeasonal * SeasonalVolunteers + GiftsPerFullTime * FullTimeVolunteers, GRB.MAXIMIZE)"
        }
    }
}