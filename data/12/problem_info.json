{
    "parametrized_description": "A glass factory produces Regular and Tempered glass panes. Producing one Regular pane requires HeatingRegular time on the heating machine and CoolingRegular time on the cooling machine. Producing one Tempered pane requires HeatingTempered time on the heating machine and CoolingTempered time on the cooling machine. The heating machine is available for a maximum of MaxHeatingTime per day, and the cooling machine is available for a maximum of MaxCoolingTime per day. Each Regular pane generates a profit of ProfitRegular, and each Tempered pane generates a profit of ProfitTempered. The factory aims to determine the number of Regular and Tempered panes to produce in order to maximize total profit.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "MaxHeatingTime": {
            "description": "Maximum available time for the heating machine per day",
            "shape": []
        },
        "MaxCoolingTime": {
            "description": "Maximum available time for the cooling machine per day",
            "shape": []
        },
        "HeatingRegular": {
            "description": "Heating time required to produce one regular glass pane",
            "shape": []
        },
        "CoolingRegular": {
            "description": "Cooling time required to produce one regular glass pane",
            "shape": []
        },
        "HeatingTempered": {
            "description": "Heating time required to produce one tempered glass pane",
            "shape": []
        },
        "CoolingTempered": {
            "description": "Cooling time required to produce one tempered glass pane",
            "shape": []
        },
        "ProfitRegular": {
            "description": "Profit per regular glass pane",
            "shape": []
        },
        "ProfitTempered": {
            "description": "Profit per tempered glass pane",
            "shape": []
        }
    },
    "variables": {
        "QuantityRegular": {
            "description": "The number of regular glass panes to produce",
            "type": "continuous",
            "shape": []
        },
        "QuantityTempered": {
            "description": "The number of tempered glass panes to produce",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total heating time required for producing Regular and Tempered panes does not exceed MaxHeatingTime.",
            "formulation": "HeatingRegular \\cdot QuantityRegular + HeatingTempered \\cdot QuantityTempered \\leq MaxHeatingTime",
            "code": {
                "gurobipy": "model.addConstr(HeatingRegular * QuantityRegular + HeatingTempered * QuantityTempered <= MaxHeatingTime, name=\"HeatingTime\")"
            }
        },
        {
            "description": "The total cooling time required for producing Regular and Tempered panes does not exceed MaxCoolingTime.",
            "formulation": "CoolingRegular \\times QuantityRegular + CoolingTempered \\times QuantityTempered \\leq MaxCoolingTime",
            "code": {
                "gurobipy": "model.addConstr(CoolingRegular * QuantityRegular + CoolingTempered * QuantityTempered <= MaxCoolingTime)"
            }
        }
    ],
    "objective": {
        "description": "Total profit is ProfitRegular multiplied by the number of Regular panes plus ProfitTempered multiplied by the number of Tempered panes. The objective is to maximize the total profit.",
        "formulation": "Max \\ ProfitRegular \\times QuantityRegular + ProfitTempered \\times QuantityTempered",
        "code": {
            "gurobipy": "model.setObjective(ProfitRegular * QuantityRegular + ProfitTempered * QuantityTempered, GRB.MAXIMIZE)"
        }
    }
}