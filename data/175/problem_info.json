{
    "parametrized_description": "A dog school trains NumDogTypes different dog types to deliver newspapers. Each dog type delivers NewspapersPerService newspapers per service and requires TreatsPerService small bone treats per service. The total number of small bone treats available is TotalBoneTreatsAvailable. At least MinGoldenRetrievers golden retrievers must be used, and at most MaxPercentageLabradors of the dogs can be labradors. The goal is to maximize the number of newspapers delivered.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "NumDogTypes": {
            "description": "Number of different dog types used in the school",
            "shape": []
        },
        "NewspapersPerService": {
            "description": "Number of newspapers delivered per service by each dog type",
            "shape": [
                "NumDogTypes"
            ]
        },
        "TreatsPerService": {
            "description": "Number of small bone treats required per service by each dog type",
            "shape": [
                "NumDogTypes"
            ]
        },
        "TotalBoneTreatsAvailable": {
            "description": "Total number of small bone treats available",
            "shape": []
        },
        "MinGoldenRetrievers": {
            "description": "Minimum number of golden retrievers to be used",
            "shape": []
        },
        "MaxPercentageLabradors": {
            "description": "Maximum percentage of dogs that can be labradors",
            "shape": []
        }
    },
    "variables": {
        "ServicesDelivered": {
            "description": "The number of services delivered by each dog type",
            "type": "continuous",
            "shape": [
                "NumDogTypes"
            ]
        },
        "NumGoldenRetrievers": {
            "description": "The number of golden retrievers used",
            "type": "continuous",
            "shape": []
        },
        "NumLabradors": {
            "description": "The number of Labradors used",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total number of small bone treats required by all dog types cannot exceed TotalBoneTreatsAvailable.",
            "formulation": "\\sum_{d=1}^{NumDogTypes} \\text{TreatsPerService}_{d} \\cdot \\text{ServicesDelivered}_{d} \\leq \\text{TotalBoneTreatsAvailable}",
            "code": {
                "gurobipy": "model.addConstr(quicksum(TreatsPerService[d] * ServicesDelivered[d] for d in range(NumDogTypes)) <= TotalBoneTreatsAvailable)"
            }
        },
        {
            "description": "At least MinGoldenRetrievers golden retrievers must be used.",
            "formulation": "NumGoldenRetrievers \\geq MinGoldenRetrievers",
            "code": {
                "gurobipy": "model.addConstr(NumGoldenRetrievers >= MinGoldenRetrievers)"
            }
        },
        {
            "description": "No more than MaxPercentageLabradors of the total number of dogs can be labradors.",
            "formulation": "NumLabradors \\leq MaxPercentageLabradors \\times (NumGoldenRetrievers + NumLabradors)",
            "code": {
                "gurobipy": "model.addConstr(NumLabradors <= MaxPercentageLabradors * (NumGoldenRetrievers + NumLabradors))"
            }
        }
    ],
    "objective": {
        "description": "Maximize the total number of newspapers delivered by the dog school while adhering to constraints on treat availability, minimum golden retrievers, and the proportion of labradors.",
        "formulation": "Max \\sum_{i=1}^{NumDogTypes} ServicesDelivered_{i} \\times NewspapersPerService_{i}",
        "code": {
            "gurobipy": "model.setObjective(quicksum(ServicesDelivered[i] * NewspapersPerService[i] for i in range(NumDogTypes)), GRB.MAXIMIZE)"
        }
    }
}