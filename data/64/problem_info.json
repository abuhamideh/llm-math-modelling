{
    "parametrized_description": "To maximize the production of carbon dioxide, wood is burned using NumProcesses different processes. Each process requires WoodRequiredPerProcess units of wood and OxygenRequiredPerProcess units of oxygen to produce CO2ProducedPerProcess units of carbon dioxide. The total available wood and oxygen are TotalWoodAvailable and TotalOxygenAvailable units, respectively. Determine the number of each process to use to maximize carbon dioxide production.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "NumProcesses": {
            "description": "Number of available processes",
            "shape": []
        },
        "WoodRequiredPerProcess": {
            "description": "Amount of wood required for each process",
            "shape": [
                "NumProcesses"
            ]
        },
        "OxygenRequiredPerProcess": {
            "description": "Amount of oxygen required for each process",
            "shape": [
                "NumProcesses"
            ]
        },
        "CO2ProducedPerProcess": {
            "description": "Amount of carbon dioxide produced by each process",
            "shape": [
                "NumProcesses"
            ]
        },
        "TotalWoodAvailable": {
            "description": "Total amount of wood available",
            "shape": []
        },
        "TotalOxygenAvailable": {
            "description": "Total amount of oxygen available",
            "shape": []
        }
    },
    "variables": {
        "ProcessUsage": {
            "description": "The amount of each process to be used",
            "type": "continuous",
            "shape": [
                "NumProcesses"
            ]
        }
    },
    "constraints": [
        {
            "description": "The total wood consumed by all processes cannot exceed TotalWoodAvailable.",
            "formulation": "\\sum_{i=1}^{NumProcesses} WoodRequiredPerProcess_i \\cdot ProcessUsage_i \\leq TotalWoodAvailable",
            "code": {
                "gurobipy": "model.addConstr(quicksum(WoodRequiredPerProcess[i] * ProcessUsage[i] for i in range(NumProcesses)) <= TotalWoodAvailable)"
            }
        },
        {
            "description": "The total oxygen consumed by all processes cannot exceed TotalOxygenAvailable.",
            "formulation": "\\sum_{i=1}^{\\text{NumProcesses}} \\text{ProcessUsage}_i \\cdot \\text{OxygenRequiredPerProcess}_i \\leq \\text{TotalOxygenAvailable}",
            "code": {
                "gurobipy": "model.addConstr(quicksum(ProcessUsage[i] * OxygenRequiredPerProcess[i] for i in range(NumProcesses)) <= TotalOxygenAvailable)"
            }
        }
    ],
    "objective": {
        "description": "Maximize the total carbon dioxide production by summing the carbon dioxide produced by each process.",
        "formulation": "Max \\sum_{i=1}^{NumProcesses} CO2ProducedPerProcess_i \\times ProcessUsage_i",
        "code": {
            "gurobipy": "model.setObjective(quicksum(CO2ProducedPerProcess[i] * ProcessUsage[i] for i in range(NumProcesses)), GRB.MAXIMIZE)"
        }
    }
}