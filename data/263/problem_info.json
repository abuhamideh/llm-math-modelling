{
    "parametrized_description": "A company uses camel caravans and desert trucks to transport goods to rural cities. Each camel caravan can deliver CamelCaravanCapacity units of goods per trip and takes CamelCaravanTime hours per trip. Each desert truck can deliver DesertTruckCapacity units of goods per trip and takes DesertTruckTime hours per trip. The company needs to deliver TotalGoodsToDeliver units of goods and prefers to have more camel caravans than desert trucks. The objective is to minimize the total number of hours required.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "CamelCaravanCapacity": {
            "description": "Amount of goods delivered per trip by a camel caravan",
            "shape": []
        },
        "CamelCaravanTime": {
            "description": "Time taken for one trip by a camel caravan",
            "shape": []
        },
        "DesertTruckCapacity": {
            "description": "Amount of goods delivered per trip by a desert truck",
            "shape": []
        },
        "DesertTruckTime": {
            "description": "Time taken for one trip by a desert truck",
            "shape": []
        },
        "TotalGoodsToDeliver": {
            "description": "Total amount of goods to be delivered",
            "shape": []
        }
    },
    "variables": {
        "NumberCamelCaravans": {
            "description": "The number of camel caravans used",
            "type": "continuous",
            "shape": []
        },
        "NumberDesertTrucks": {
            "description": "The number of desert trucks used",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The combined delivery capacity of all camel caravans and desert trucks must be at least TotalGoodsToDeliver units.",
            "formulation": "CamelCaravanCapacity \\cdot NumberCamelCaravans + DesertTruckCapacity \\cdot NumberDesertTrucks \\geq TotalGoodsToDeliver",
            "code": {
                "gurobipy": "model.addConstr(CamelCaravanCapacity * NumberCamelCaravans + DesertTruckCapacity * NumberDesertTrucks >= TotalGoodsToDeliver)"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total number of hours required, calculated as (Number of Camel Caravans \u00d7 CamelCaravanTime) + (Number of Desert Trucks \u00d7 DesertTruckTime), while preferring to use more camel caravans than desert trucks.",
        "formulation": "Min \\left( \\text{NumberCamelCaravans} \\times \\text{CamelCaravanTime} + \\text{NumberDesertTrucks} \\times \\text{DesertTruckTime} - \\epsilon \\times \\text{NumberCamelCaravans} \\right)",
        "code": {
            "gurobipy": "epsilon = 1e-5\nmodel.setObjective(NumberCamelCaravans * CamelCaravanTime + NumberDesertTrucks * DesertTruckTime - epsilon * NumberCamelCaravans, GRB.MINIMIZE)"
        }
    }
}