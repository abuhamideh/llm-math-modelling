{
    "parametrized_description": "A chemical company is transporting their hydrogen using NumTransportMethods different transportation methods. Each method has a transport capacity per trip given by TransportCapacity and a cost per trip given by TransportCost. The company needs to transport at least MinimumHydrogen amount of hydrogen and has a budget of Budget available. Additionally, the number of transports done by the first transportation method must be less than the number of transports done by the second transportation method. The company aims to determine the number of each transportation method to minimize the total number of trips.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "TransportCapacity": {
            "description": "Transport capacity per trip for each transportation method",
            "shape": [
                "NumTransportMethods"
            ]
        },
        "TransportCost": {
            "description": "Transport cost per trip for each transportation method",
            "shape": [
                "NumTransportMethods"
            ]
        },
        "MinimumHydrogen": {
            "description": "Minimum total hydrogen to transport",
            "shape": []
        },
        "Budget": {
            "description": "Available budget for transportation",
            "shape": []
        },
        "NumTransportMethods": {
            "description": "Number of transportation methods",
            "shape": []
        }
    },
    "variables": {
        "NumTrips": {
            "description": "The number of trips for each transportation method",
            "type": "continuous",
            "shape": [
                "NumTransportMethods"
            ]
        }
    },
    "constraints": [
        {
            "description": "The total amount of hydrogen transported must be at least MinimumHydrogen.",
            "formulation": "\\sum_{i=1}^{\\text{NumTransportMethods}} TransportCapacity_{i} \\times NumTrips_{i} \\geq MinimumHydrogen",
            "code": {
                "gurobipy": "model.addConstr(quicksum(TransportCapacity[i] * NumTrips[i] for i in range(NumTransportMethods)) >= MinimumHydrogen)"
            }
        },
        {
            "description": "The total transportation cost must not exceed Budget.",
            "formulation": "\\sum_{i=1}^{\\text{NumTransportMethods}} \\text{TransportCost}_i \\times \\text{NumTrips}_i \\leq \\text{Budget}",
            "code": {
                "gurobipy": "model.addConstr(quicksum(TransportCost[i] * NumTrips[i] for i in range(NumTransportMethods)) <= Budget)"
            }
        },
        {
            "description": "The number of transports done by the first transportation method must be less than the number of transports done by the second transportation method.",
            "formulation": "NumTrips_{0} \\leq NumTrips_{1} - 1",
            "code": {
                "gurobipy": "model.addConstr(NumTrips[0] <= NumTrips[1] - 1)"
            }
        }
    ],
    "objective": {
        "description": "The total number of trips is the sum of the number of transports for each transportation method. The objective is to minimize the total number of trips.",
        "formulation": "Min \\sum_{i=1}^{NumTransportMethods} NumTrips_i",
        "code": {
            "gurobipy": "model.setObjective(quicksum(NumTrips[i] for i in range(NumTransportMethods)), GRB.MINIMIZE)"
        }
    }
}