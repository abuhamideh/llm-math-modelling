{
    "parametrized_description": "Determine the number of fertilizer units and seed units to minimize the total time for the lawn to be ready, where the total time is the maximum of the fertilizer units multiplied by TimePerFertilizer and the seed units multiplied by TimePerSeeds. The combined units of fertilizer and seeds must not exceed MaxTotalUnits, the fertilizer units must be at least MinFertilizer, and the fertilizer units must not exceed MaxFertilizerRatio times the seed units.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "TimePerFertilizer": {
            "description": "Time one unit of fertilizer takes to be effective",
            "shape": []
        },
        "TimePerSeeds": {
            "description": "Time one unit of seeds takes to be effective",
            "shape": []
        },
        "MaxTotalUnits": {
            "description": "Maximum total units of fertilizer and seeds combined",
            "shape": []
        },
        "MinFertilizer": {
            "description": "Minimum units of fertilizer to be added",
            "shape": []
        },
        "MaxFertilizerRatio": {
            "description": "Maximum ratio of fertilizer to seeds",
            "shape": []
        }
    },
    "variables": {
        "FertilizerUnits": {
            "description": "The number of units of fertilizer",
            "type": "continuous",
            "shape": []
        },
        "SeedsUnits": {
            "description": "The number of units of seeds",
            "type": "continuous",
            "shape": []
        },
        "TotalTime": {
            "description": "The total time for the lawn to be ready",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The combined units of fertilizer and seeds must not exceed MaxTotalUnits.",
            "formulation": "FertilizerUnits + SeedsUnits \\leq MaxTotalUnits",
            "code": {
                "gurobipy": "model.addConstr(FertilizerUnits + SeedsUnits <= MaxTotalUnits)"
            }
        },
        {
            "description": "The fertilizer units must be at least MinFertilizer.",
            "formulation": "FertilizerUnits \\geq MinFertilizer",
            "code": {
                "gurobipy": "model.addConstr(FertilizerUnits >= MinFertilizer)"
            }
        },
        {
            "description": "The fertilizer units must not exceed MaxFertilizerRatio times the seed units.",
            "formulation": "FertilizerUnits \\leq MaxFertilizerRatio \\times SeedsUnits",
            "code": {
                "gurobipy": "model.addConstr(FertilizerUnits <= MaxFertilizerRatio * SeedsUnits)"
            }
        }
    ],
    "objective": {
        "description": "The total time is the maximum of (fertilizer units multiplied by TimePerFertilizer) and (seed units multiplied by TimePerSeeds). The objective is to minimize the total time for the lawn to be ready.",
        "formulation": "Min \\ TotalTime \\n TotalTime \\geq FertilizerUnits \\times TimePerFertilizer \\n TotalTime \\geq SeedsUnits \\times TimePerSeeds",
        "code": {
            "gurobipy": "model.setObjective(TotalTime, GRB.MINIMIZE)\nmodel.addConstr(TotalTime >= FertilizerUnits * TimePerFertilizer, \"Time_Fertilizer\")\nmodel.addConstr(TotalTime >= SeedsUnits * TimePerSeeds, \"Time_Seeds\")"
        }
    }
}