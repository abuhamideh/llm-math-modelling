{
    "parametrized_description": "A bakery uses a stand mixer with MixerMaximumHours available operating hours per year and an oven with OvenMaximumHours available operating hours per year. Producing one loaf of bread requires BreadMixerTime hours in the stand mixer and BreadOvenTime hours in the oven. Producing one batch of cookies requires CookiesMixerTime hours in the stand mixer and CookiesOvenTime hours in the oven. Each loaf of bread generates a profit of BreadProfit and each batch of cookies generates a profit of CookiesProfit. The bakery aims to maximize its total profit.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "MixerMaximumHours": {
            "description": "Maximum available operating hours per year for the stand mixer",
            "shape": []
        },
        "OvenMaximumHours": {
            "description": "Maximum available operating hours per year for the oven",
            "shape": []
        },
        "BreadMixerTime": {
            "description": "Number of hours the stand mixer is required to bake one loaf of bread",
            "shape": []
        },
        "BreadOvenTime": {
            "description": "Number of hours the oven is required to bake one loaf of bread",
            "shape": []
        },
        "CookiesMixerTime": {
            "description": "Number of hours the stand mixer is required to bake one batch of cookies",
            "shape": []
        },
        "CookiesOvenTime": {
            "description": "Number of hours the oven is required to bake one batch of cookies",
            "shape": []
        },
        "BreadProfit": {
            "description": "Profit earned per loaf of bread",
            "shape": []
        },
        "CookiesProfit": {
            "description": "Profit earned per batch of cookies",
            "shape": []
        }
    },
    "variables": {
        "BreadQuantity": {
            "description": "The number of loaves of bread produced",
            "type": "continuous",
            "shape": []
        },
        "CookiesQuantity": {
            "description": "The number of batches of cookies produced",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total stand mixer time used for producing bread and cookies must not exceed MixerMaximumHours hours per year.",
            "formulation": "BreadMixerTime \\times BreadQuantity + CookiesMixerTime \\times CookiesQuantity \\leq MixerMaximumHours",
            "code": {
                "gurobipy": "model.addConstr(BreadMixerTime * BreadQuantity + CookiesMixerTime * CookiesQuantity <= MixerMaximumHours)"
            }
        },
        {
            "description": "The total oven time used for producing bread and cookies must not exceed OvenMaximumHours hours per year.",
            "formulation": "BreadOvenTime \\times BreadQuantity + CookiesOvenTime \\times CookiesQuantity \\leq OvenMaximumHours",
            "code": {
                "gurobipy": "model.addConstr(BreadOvenTime * BreadQuantity + CookiesOvenTime * CookiesQuantity <= OvenMaximumHours)"
            }
        }
    ],
    "objective": {
        "description": "Maximize the total profit, where total profit is (BreadProfit \u00d7 number of bread loaves) + (CookiesProfit \u00d7 number of cookie batches).",
        "formulation": "Max \\left( BreadProfit \\times BreadQuantity + CookiesProfit \\times CookiesQuantity \\right)",
        "code": {
            "gurobipy": "model.setObjective(BreadProfit * BreadQuantity + CookiesProfit * CookiesQuantity, GRB.MAXIMIZE)"
        }
    }
}