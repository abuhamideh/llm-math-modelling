{
    "parametrized_description": "A neighbourhood pizza restaurant produces large and medium pizzas. Each large pizza requires DoughLarge units of dough and ToppingsLarge units of toppings and takes BakingTimeLarge minutes to bake. Each medium pizza requires DoughMedium units of dough and ToppingsMedium units of toppings and takes BakingTimeMedium minutes to bake. The restaurant must use at least MinDough units of dough and MinToppings units of toppings. At least MinMediumPizzas medium pizzas must be made, and the number of large pizzas must be at least MinRatioLargeToMedium times the number of medium pizzas. The objective is to minimize the total baking time.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "DoughLarge": {
            "description": "Units of dough required per large pizza",
            "shape": []
        },
        "DoughMedium": {
            "description": "Units of dough required per medium pizza",
            "shape": []
        },
        "ToppingsLarge": {
            "description": "Units of toppings required per large pizza",
            "shape": []
        },
        "ToppingsMedium": {
            "description": "Units of toppings required per medium pizza",
            "shape": []
        },
        "BakingTimeLarge": {
            "description": "Baking time per large pizza in minutes",
            "shape": []
        },
        "BakingTimeMedium": {
            "description": "Baking time per medium pizza in minutes",
            "shape": []
        },
        "MinDough": {
            "description": "Minimum units of dough required",
            "shape": []
        },
        "MinToppings": {
            "description": "Minimum units of toppings required",
            "shape": []
        },
        "MinMediumPizzas": {
            "description": "Minimum number of medium pizzas to be made",
            "shape": []
        },
        "MinRatioLargeToMedium": {
            "description": "Minimum ratio of large pizzas to medium pizzas",
            "shape": []
        }
    },
    "variables": {
        "NumberLargePizzas": {
            "description": "The number of large pizzas to be made",
            "type": "continuous",
            "shape": [
                "Integer",
                "NonNegative"
            ]
        },
        "NumberMediumPizzas": {
            "description": "The number of medium pizzas to be made",
            "type": "continuous",
            "shape": [
                "Integer",
                "NonNegative"
            ]
        }
    },
    "constraints": [
        {
            "description": "Each large pizza requires DoughLarge units of dough and each medium pizza requires DoughMedium units of dough. The total dough used must be at least MinDough units.",
            "formulation": "DoughLarge \\cdot NumberLargePizzas + DoughMedium \\cdot NumberMediumPizzas \\geq MinDough",
            "code": {
                "gurobipy": "model.addConstr(DoughLarge * NumberLargePizzas + DoughMedium * NumberMediumPizzas >= MinDough)"
            }
        },
        {
            "description": "Each large pizza requires ToppingsLarge units of toppings and each medium pizza requires ToppingsMedium units of toppings. The total toppings used must be at least MinToppings units.",
            "formulation": "ToppingsLarge \\cdot NumberLargePizzas + ToppingsMedium \\cdot NumberMediumPizzas \\geq MinToppings",
            "code": {
                "gurobipy": "model.addConstr(ToppingsLarge * NumberLargePizzas + ToppingsMedium * NumberMediumPizzas >= MinToppings)"
            }
        },
        {
            "description": "At least MinMediumPizzas medium pizzas must be made.",
            "formulation": "NumberMediumPizzas \\geq MinMediumPizzas",
            "code": {
                "gurobipy": "model.addConstr(NumberMediumPizzas >= MinMediumPizzas)"
            }
        },
        {
            "description": "The number of large pizzas must be at least MinRatioLargeToMedium times the number of medium pizzas.",
            "formulation": "NumberLargePizzas \\geq MinRatioLargeToMedium \\times NumberMediumPizzas",
            "code": {
                "gurobipy": "model.addConstr(NumberLargePizzas >= MinRatioLargeToMedium * NumberMediumPizzas)"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total baking time, which is the sum of the baking times for all large and medium pizzas.",
        "formulation": "Min \\ NumberLargePizzas \\times BakingTimeLarge + NumberMediumPizzas \\times BakingTimeMedium",
        "code": {
            "gurobipy": "model.setObjective(NumberLargePizzas * BakingTimeLarge + NumberMediumPizzas * BakingTimeMedium, GRB.MINIMIZE)"
        }
    }
}