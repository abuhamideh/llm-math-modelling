{
    "parametrized_description": "Jordan aims to minimize the total cost of his diet by selecting servings of Rice and Kebab. Each serving of Rice and Kebab costs CostRice and CostKebab respectively. The diet must provide at least MinCalories in calories and at least MinProtein in protein per day. Each serving of Rice and Kebab contributes CaloriesRice and CaloriesKebab calories, and ProteinRice and ProteinKebab grams of protein respectively.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "CostRice": {
            "description": "Cost per serving of Rice",
            "shape": []
        },
        "CostKebab": {
            "description": "Cost per serving of Kebab",
            "shape": []
        },
        "CaloriesRice": {
            "description": "Calories per serving of Rice",
            "shape": []
        },
        "CaloriesKebab": {
            "description": "Calories per serving of Kebab",
            "shape": []
        },
        "ProteinRice": {
            "description": "Protein per serving of Rice",
            "shape": []
        },
        "ProteinKebab": {
            "description": "Protein per serving of Kebab",
            "shape": []
        },
        "MinCalories": {
            "description": "Minimum daily calories required",
            "shape": []
        },
        "MinProtein": {
            "description": "Minimum daily protein required",
            "shape": []
        }
    },
    "variables": {
        "ServingsRice": {
            "description": "The number of servings of Rice",
            "type": "continuous",
            "shape": []
        },
        "ServingsKebab": {
            "description": "The number of servings of Kebab",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The diet must provide at least MinCalories in calories.",
            "formulation": "ServingsRice \\times CaloriesRice + ServingsKebab \\times CaloriesKebab \\geq MinCalories",
            "code": {
                "gurobipy": "model.addConstr(ServingsRice * CaloriesRice + ServingsKebab * CaloriesKebab >= MinCalories)"
            }
        },
        {
            "description": "The diet must provide at least MinProtein in protein.",
            "formulation": "ProteinRice \\times ServingsRice + ProteinKebab \\times ServingsKebab \\geq MinProtein",
            "code": {
                "gurobipy": "model.addConstr(ProteinRice * ServingsRice + ProteinKebab * ServingsKebab >= MinProtein)"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total cost of the diet, calculated as CostRice multiplied by the number of servings of Rice plus CostKebab multiplied by the number of servings of Kebab.",
        "formulation": "Min CostRice \\times ServingsRice + CostKebab \\times ServingsKebab",
        "code": {
            "gurobipy": "model.setObjective(CostRice * ServingsRice + CostKebab * ServingsKebab, GRB.MINIMIZE)"
        }
    }
}