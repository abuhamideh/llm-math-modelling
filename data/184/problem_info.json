{
    "parametrized_description": "Maximize the total snow transported by small and large trucks, where each small truck has a snow carrying capacity of SnowCapacitySmallTruck and each large truck has a snow carrying capacity of SnowCapacityLargeTruck. This is subject to the constraint that the total number of people required, calculated as PeoplePerSmallTruck multiplied by the number of small trucks plus PeoplePerLargeTruck multiplied by the number of large trucks, does not exceed TotalPeople. Additionally, the number of small trucks must be at least MinSmallTrucks, the number of large trucks must be at least MinLargeTrucks, and the number of small trucks must be SmallTrucksPerLargeTruck times the number of large trucks.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "PeoplePerSmallTruck": {
            "description": "Number of people required to shovel snow per small truck",
            "shape": []
        },
        "PeoplePerLargeTruck": {
            "description": "Number of people required to shovel snow per large truck",
            "shape": []
        },
        "SnowCapacitySmallTruck": {
            "description": "Snow carrying capacity of a small truck (in units)",
            "shape": []
        },
        "SnowCapacityLargeTruck": {
            "description": "Snow carrying capacity of a large truck (in units)",
            "shape": []
        },
        "TotalPeople": {
            "description": "Total number of people available for snow shoveling",
            "shape": []
        },
        "MinSmallTrucks": {
            "description": "Minimum number of small trucks required",
            "shape": []
        },
        "MinLargeTrucks": {
            "description": "Minimum number of large trucks required",
            "shape": []
        },
        "SmallTrucksPerLargeTruck": {
            "description": "Number of small trucks per large truck",
            "shape": []
        }
    },
    "variables": {
        "NumberSmallTrucks": {
            "description": "The number of small trucks",
            "type": "continuous",
            "shape": []
        },
        "NumberLargeTrucks": {
            "description": "The number of large trucks",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total number of people required, calculated as PeoplePerSmallTruck multiplied by the number of small trucks plus PeoplePerLargeTruck multiplied by the number of large trucks, does not exceed TotalPeople.",
            "formulation": "PeoplePerSmallTruck \\times NumberSmallTrucks + PeoplePerLargeTruck \\times NumberLargeTrucks \\leq TotalPeople",
            "code": {
                "gurobipy": "model.addConstr(PeoplePerSmallTruck * NumberSmallTrucks + PeoplePerLargeTruck * NumberLargeTrucks <= TotalPeople)"
            }
        },
        {
            "description": "The number of small trucks must be at least MinSmallTrucks.",
            "formulation": "NumberSmallTrucks \\geq MinSmallTrucks",
            "code": {
                "gurobipy": "model.addConstr(NumberSmallTrucks >= MinSmallTrucks)"
            }
        },
        {
            "description": "The number of large trucks must be at least MinLargeTrucks.",
            "formulation": "NumberLargeTrucks \\geq MinLargeTrucks",
            "code": {
                "gurobipy": "model.addConstr(NumberLargeTrucks >= MinLargeTrucks)"
            }
        },
        {
            "description": "The number of small trucks must be SmallTrucksPerLargeTruck times the number of large trucks.",
            "formulation": "NumberSmallTrucks = SmallTrucksPerLargeTruck \\times NumberLargeTrucks",
            "code": {
                "gurobipy": "model.addConstr(NumberSmallTrucks == SmallTrucksPerLargeTruck * NumberLargeTrucks)"
            }
        }
    ],
    "objective": {
        "description": "Maximize the total snow transported by small and large trucks, where each small truck has a snow carrying capacity of SnowCapacitySmallTruck and each large truck has a snow carrying capacity of SnowCapacityLargeTruck.",
        "formulation": "Max NumberSmallTrucks \\times SnowCapacitySmallTruck + NumberLargeTrucks \\times SnowCapacityLargeTruck",
        "code": {
            "gurobipy": "model.setObjective(NumberSmallTrucks * SnowCapacitySmallTruck + NumberLargeTrucks * SnowCapacityLargeTruck, GRB.MAXIMIZE)"
        }
    }
}