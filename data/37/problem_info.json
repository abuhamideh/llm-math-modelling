{
    "parametrized_description": "A bakery manufactures NumProducts distinct products, each yielding a specific Profit per batch. Each product requires a certain amount of time from each of the NumResources resource types for production. The bakery has a limited amount of time available for each resource, defined by ResourceAvailability. The goal is to maximize the total Profit by fully utilizing the available Resource capacities.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "NumProducts": {
            "description": "Number of products baked",
            "shape": []
        },
        "NumResources": {
            "description": "Number of resource types",
            "shape": []
        },
        "Profit": {
            "description": "Profit per batch of each product",
            "shape": [
                "NumProducts"
            ]
        },
        "ResourceTime": {
            "description": "Time required per batch of each product for each resource",
            "shape": [
                "NumResources",
                "NumProducts"
            ]
        },
        "ResourceAvailability": {
            "description": "Total available time per resource",
            "shape": [
                "NumResources"
            ]
        }
    },
    "variables": {
        "Batch": {
            "description": "The number of batches for each product",
            "type": "continuous",
            "shape": [
                "NumProducts"
            ]
        }
    },
    "constraints": [
        {
            "description": "For each resource type, the total time required by all product batches does not exceed the ResourceAvailability.",
            "formulation": "\\sum_{p=1}^{\\text{NumProducts}} \\text{ResourceTime}_{r,p} \\cdot \\text{Batch}_p \\leq \\text{ResourceAvailability}_r \\quad \\forall r \\in \\{1, \\dots, \\text{NumResources}\\}",
            "code": {
                "gurobipy": "model.addConstrs((quicksum(ResourceTime[r][p] * Batch[p] for p in range(NumProducts)) <= ResourceAvailability[r] for r in range(NumResources)), name=\"ResourceLimit\")"
            }
        }
    ],
    "objective": {
        "description": "Total Profit is the sum of the profit per batch of each product multiplied by the number of batches produced. The objective is to maximize the total Profit.",
        "formulation": "Max \\sum_{i=1}^{NumProducts} Profit_i \\times Batch_i",
        "code": {
            "gurobipy": "model.setObjective(quicksum(Profit[i] * Batch[i] for i in range(NumProducts)), GRB.MAXIMIZE)"
        }
    }
}