{
    "parametrized_description": "A patient consumes NumSupplements different health supplements, each providing various amounts of NumNutrients nutrients per serving. Each supplement has a CostPerServing. The patient must consume enough supplements to meet the MinimumRequirement for each nutrient. The objective is to determine the number of servings of each supplement to minimize the total daily cost.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "NumSupplements": {
            "description": "Number of health supplements",
            "shape": []
        },
        "NumNutrients": {
            "description": "Number of nutrients",
            "shape": []
        },
        "AmountPerServing": {
            "description": "Amount of nutrient i per serving of supplement j",
            "shape": [
                "NumNutrients",
                "NumSupplements"
            ]
        },
        "CostPerServing": {
            "description": "Cost per serving of supplement j",
            "shape": [
                "NumSupplements"
            ]
        },
        "MinimumRequirement": {
            "description": "Minimum required amount of nutrient i",
            "shape": [
                "NumNutrients"
            ]
        }
    },
    "variables": {
        "Servings": {
            "description": "The number of servings for each supplement",
            "type": "continuous",
            "shape": [
                "NumSupplements"
            ]
        }
    },
    "constraints": [
        {
            "description": "The total amount of Calcium obtained from the supplements must meet or exceed the minimum required.",
            "formulation": "\\sum_{j=1}^{\\text{NumSupplements}} \\text{AmountPerServing}_{\\text{Calcium},j} \\cdot \\text{Servings}_j \\geq \\text{MinimumRequirement}_{\\text{Calcium}}",
            "code": {
                "gurobipy": "model.addConstr(quicksum(AmountPerServing[0][j] * Servings[j] for j in range(NumSupplements)) >= MinimumRequirement[0])"
            }
        },
        {
            "description": "The total amount of Magnesium obtained from the supplements must meet or exceed the minimum required.",
            "formulation": "\\sum_{j=1}^{NumSupplements} \\text{AmountPerServing}_{\\text{Mg},j} \\cdot \\text{Servings}_j \\geq \\text{MinimumRequirement}_{\\text{Mg}}",
            "code": {
                "gurobipy": "model.addConstr(quicksum(AmountPerServing[0][j] * Servings[j] for j in range(NumSupplements)) >= MinimumRequirement[0])"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total daily cost of supplements while meeting the minimum requirements for Calcium and Magnesium.",
        "formulation": "Min \\sum_{j=1}^{NumSupplements} CostPerServing_j \\times Servings_j",
        "code": {
            "gurobipy": "model.setObjective(quicksum(CostPerServing[j] * Servings[j] for j in range(NumSupplements)), GRB.MINIMIZE)"
        }
    }
}