{
    "parametrized_description": "A clinical firm operates two factories, northern and western. The firm decides the number of hours to run each factory. The northern factory produces NorthernFactoryAntiItchRate grams of anti-itch injections and NorthernFactoryTopicalCreamRate grams of topical cream per hour. The western factory produces WesternFactoryAntiItchRate grams of anti-itch injections and WesternFactoryTopicalCreamRate grams of topical cream per hour. The northern factory uses NorthernFactoryPlasticUsage units of plastic per hour, and the western factory uses WesternFactoryPlasticUsage units of plastic per hour. The total plastic available is TotalPlasticAvailable units. The firm must produce at least MinimumAntiItchProduction grams of anti-itch injections and MinimumTopicalCreamProduction grams of topical cream. The objective is to minimize the total time the factories are run.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "NorthernFactoryAntiItchRate": {
            "description": "Production rate of anti-itch injections per hour at the northern factory",
            "shape": []
        },
        "NorthernFactoryTopicalCreamRate": {
            "description": "Production rate of topical cream per hour at the northern factory",
            "shape": []
        },
        "WesternFactoryAntiItchRate": {
            "description": "Production rate of anti-itch injections per hour at the western factory",
            "shape": []
        },
        "WesternFactoryTopicalCreamRate": {
            "description": "Production rate of topical cream per hour at the western factory",
            "shape": []
        },
        "NorthernFactoryPlasticUsage": {
            "description": "Units of plastic required per hour at the northern factory",
            "shape": []
        },
        "WesternFactoryPlasticUsage": {
            "description": "Units of plastic required per hour at the western factory",
            "shape": []
        },
        "TotalPlasticAvailable": {
            "description": "Total units of plastic available",
            "shape": []
        },
        "MinimumAntiItchProduction": {
            "description": "Minimum grams of anti-itch injections to produce",
            "shape": []
        },
        "MinimumTopicalCreamProduction": {
            "description": "Minimum grams of topical cream to produce",
            "shape": []
        }
    },
    "variables": {
        "NorthernFactoryAntiItchProduction": {
            "description": "The production quantity of anti-itch injections at the Northern factory",
            "type": "continuous",
            "shape": []
        },
        "NorthernFactoryTopicalCreamProduction": {
            "description": "The production quantity of topical cream at the Northern factory",
            "type": "continuous",
            "shape": []
        },
        "WesternFactoryAntiItchProduction": {
            "description": "The production quantity of anti-itch injections at the Western factory",
            "type": "continuous",
            "shape": []
        },
        "WesternFactoryTopicalCreamProduction": {
            "description": "The production quantity of topical cream at the Western factory",
            "type": "continuous",
            "shape": []
        },
        "NorthernRunTime": {
            "description": "The run time of the Northern factory in hours",
            "type": "continuous",
            "shape": []
        },
        "WesternRunTime": {
            "description": "The run time of the Western factory in hours",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total plastic used by the northern and western factories cannot exceed TotalPlasticAvailable units.",
            "formulation": "\\frac{NorthernFactoryPlasticUsage}{NorthernFactoryAntiItchRate} \\cdot NorthernFactoryAntiItchProduction + \\frac{NorthernFactoryPlasticUsage}{NorthernFactoryTopicalCreamRate} \\cdot NorthernFactoryTopicalCreamProduction + \\frac{WesternFactoryPlasticUsage}{WesternFactoryAntiItchRate} \\cdot WesternFactoryAntiItchProduction + \\frac{WesternFactoryPlasticUsage}{WesternFactoryTopicalCreamRate} \\cdot WesternFactoryTopicalCreamProduction \\leq TotalPlasticAvailable",
            "code": {
                "gurobipy": "model.addConstr((NorthernFactoryPlasticUsage / NorthernFactoryAntiItchRate) * NorthernFactoryAntiItchProduction + (NorthernFactoryPlasticUsage / NorthernFactoryTopicalCreamRate) * NorthernFactoryTopicalCreamProduction + (WesternFactoryPlasticUsage / WesternFactoryAntiItchRate) * WesternFactoryAntiItchProduction + (WesternFactoryPlasticUsage / WesternFactoryTopicalCreamRate) * WesternFactoryTopicalCreamProduction <= TotalPlasticAvailable)"
            }
        },
        {
            "description": "The production of anti-itch injections by the northern and western factories must be at least MinimumAntiItchProduction grams.",
            "formulation": "NorthernFactoryAntiItchProduction + WesternFactoryAntiItchProduction \\geq MinimumAntiItchProduction",
            "code": {
                "gurobipy": "model.addConstr(NorthernFactoryAntiItchProduction + WesternFactoryAntiItchProduction >= MinimumAntiItchProduction)"
            }
        },
        {
            "description": "The production of topical cream by the northern and western factories must be at least MinimumTopicalCreamProduction grams.",
            "formulation": "NorthernFactoryTopicalCreamProduction + WesternFactoryTopicalCreamProduction \\geq MinimumTopicalCreamProduction",
            "code": {
                "gurobipy": "model.addConstr(NorthernFactoryTopicalCreamProduction + WesternFactoryTopicalCreamProduction >= MinimumTopicalCreamProduction)"
            }
        }
    ],
    "objective": {
        "description": "The objective is to minimize the total time the northern and western factories are run.",
        "formulation": "Min \\ NorthernRunTime + WesternRunTime",
        "code": {
            "gurobipy": "model.setObjective(NorthernRunTime + WesternRunTime, GRB.MINIMIZE)"
        }
    }
}