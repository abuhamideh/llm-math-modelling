{
    "parametrized_description": "A volunteer organization transports voters to the polls using vans and cars, where each van can carry VoterCapacityVan voters and each car can carry VoterCapacityCar voters. They need to transport at least MinVoters voters, and no more than MaxVanPercentage of the vehicles can be vans. The objective is to minimize the number of cars used.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "VoterCapacityVan": {
            "description": "Number of voters a van can carry",
            "shape": []
        },
        "VoterCapacityCar": {
            "description": "Number of voters a car can carry",
            "shape": []
        },
        "MinVoters": {
            "description": "Minimum number of voters to transport",
            "shape": []
        },
        "MaxVanPercentage": {
            "description": "Maximum percentage of vehicles that can be vans",
            "shape": []
        }
    },
    "variables": {
        "NumberOfVans": {
            "description": "The number of vans used",
            "type": "continuous",
            "shape": []
        },
        "NumberOfCars": {
            "description": "The number of cars used",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "Each van can carry VoterCapacityVan voters and each car can carry VoterCapacityCar voters. The organization needs to transport at least 200 voters.",
            "formulation": "VoterCapacityVan \\\\cdot NumberOfVans + VoterCapacityCar \\\\cdot NumberOfCars \\\\geq MinVoters",
            "code": {
                "gurobipy": "model.addConstr(VoterCapacityVan * NumberOfVans + VoterCapacityCar * NumberOfCars >= MinVoters)"
            }
        },
        {
            "description": "No more than 30% of the vehicles can be vans.",
            "formulation": "NumberOfVans \\leq MaxVanPercentage \\times (NumberOfVans + NumberOfCars)",
            "code": {
                "gurobipy": "model.addConstr(NumberOfVans <= MaxVanPercentage * (NumberOfVans + NumberOfCars))"
            }
        }
    ],
    "objective": {
        "description": "Minimize the number of cars used.",
        "formulation": "Min NumberOfCars",
        "code": {
            "gurobipy": "model.setObjective(NumberOfCars, GRB.MINIMIZE)"
        }
    }
}