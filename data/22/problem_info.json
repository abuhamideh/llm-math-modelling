{
    "parametrized_description": "The manufacturer aims to maximize total profit, calculated as ProfitRegular multiplied by the number of regular models produced (x\u2081) plus ProfitPremium multiplied by the number of premium models produced (x\u2082). This objective is subject to the following constraints: the number of regular models produced (x\u2081) must not exceed DemandRegular, the number of premium models produced (x\u2082) must not exceed DemandPremium, the combined production of regular and premium models (x\u2081 + x\u2082) must not exceed MaxCarsTotal, and both x\u2081 and x\u2082 must be greater than or equal to zero.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "ProfitRegular": {
            "description": "Profit per regular model",
            "shape": []
        },
        "ProfitPremium": {
            "description": "Profit per premium model",
            "shape": []
        },
        "DemandRegular": {
            "description": "Daily demand for regular models",
            "shape": []
        },
        "DemandPremium": {
            "description": "Daily demand for premium models",
            "shape": []
        },
        "MaxCarsTotal": {
            "description": "Maximum number of cars that can be made per day",
            "shape": []
        }
    },
    "variables": {
        "RegularModelsProduced": {
            "description": "The number of regular models produced",
            "type": "continuous",
            "shape": []
        },
        "PremiumModelsProduced": {
            "description": "The number of premium models produced",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The number of regular models produced (x\u2081) must not exceed DemandRegular.",
            "formulation": "RegularModelsProduced \\leq DemandRegular",
            "code": {
                "gurobipy": "model.addConstr(RegularModelsProduced <= DemandRegular)"
            }
        },
        {
            "description": "The number of premium models produced (x\u2082) must not exceed DemandPremium.",
            "formulation": "PremiumModelsProduced \\leq DemandPremium",
            "code": {
                "gurobipy": "model.addConstr(PremiumModelsProduced <= DemandPremium)"
            }
        },
        {
            "description": "The combined production of regular and premium models (x\u2081 + x\u2082) must not exceed MaxCarsTotal.",
            "formulation": "RegularModelsProduced + PremiumModelsProduced \\leq MaxCarsTotal",
            "code": {
                "gurobipy": "model.addConstr(RegularModelsProduced + PremiumModelsProduced <= MaxCarsTotal)"
            }
        },
        {
            "description": "Both x\u2081 and x\u2082 must be greater than or equal to zero.",
            "formulation": "RegularModelsProduced \\geq 0 \\n PremiumModelsProduced \\geq 0",
            "code": {
                "gurobipy": "model.addConstr(RegularModelsProduced >= 0)\nmodel.addConstr(PremiumModelsProduced >= 0)"
            }
        }
    ],
    "objective": {
        "description": "Maximize total profit, calculated as ProfitRegular multiplied by the number of regular models produced (x\u2081) plus ProfitPremium multiplied by the number of premium models produced (x\u2082).",
        "formulation": "Max ProfitRegular \\times RegularModelsProduced + ProfitPremium \\times PremiumModelsProduced",
        "code": {
            "gurobipy": "model.setObjective(ProfitRegular * RegularModelsProduced + ProfitPremium * PremiumModelsProduced, GRB.MAXIMIZE)"
        }
    }
}