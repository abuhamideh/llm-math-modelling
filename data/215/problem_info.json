{
    "parametrized_description": "The government uses wide pipes and narrow pipes to transport water. Each wide pipe can carry WidePipeCapacity units of water per minute, and each narrow pipe can carry NarrowPipeCapacity units of water per minute. The number of wide pipes is restricted to at most MaxWideToNarrowRatio times the number of narrow pipes. The system must transport at least MinTransportRequired units of water every minute, and at least MinWidePipes wide pipes must be utilized. The objective is to minimize the total number of pipes required.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "WidePipeCapacity": {
            "description": "Water transport capacity of a wide pipe (units per minute)",
            "shape": []
        },
        "NarrowPipeCapacity": {
            "description": "Water transport capacity of a narrow pipe (units per minute)",
            "shape": []
        },
        "MaxWideToNarrowRatio": {
            "description": "Maximum ratio of wide pipes to narrow pipes",
            "shape": []
        },
        "MinTransportRequired": {
            "description": "Minimum required water transported per minute",
            "shape": []
        },
        "MinWidePipes": {
            "description": "Minimum number of wide pipes required",
            "shape": []
        }
    },
    "variables": {
        "WidePipes": {
            "description": "The number of wide pipes",
            "type": "continuous",
            "shape": [
                "Integer"
            ]
        },
        "NarrowPipes": {
            "description": "The number of narrow pipes",
            "type": "continuous",
            "shape": [
                "Integer"
            ]
        }
    },
    "constraints": [
        {
            "description": "WidePipeCapacity * WidePipes + NarrowPipeCapacity * NarrowPipes >= MinTransportRequired",
            "formulation": "WidePipeCapacity \\cdot WidePipes + NarrowPipeCapacity \\cdot NarrowPipes \\geq MinTransportRequired",
            "code": {
                "gurobipy": "model.addConstr(WidePipeCapacity * WidePipes + NarrowPipeCapacity * NarrowPipes >= MinTransportRequired)"
            }
        },
        {
            "description": "WidePipes <= MaxWideToNarrowRatio * NarrowPipes",
            "formulation": "WidePipes \\leq MaxWideToNarrowRatio \\times NarrowPipes",
            "code": {
                "gurobipy": "model.addConstr(WidePipes <= MaxWideToNarrowRatio * NarrowPipes)"
            }
        },
        {
            "description": "WidePipes >= MinWidePipes",
            "formulation": "WidePipes \\geq MinWidePipes",
            "code": {
                "gurobipy": "model.addConstr(WidePipes >= MinWidePipes)"
            }
        }
    ],
    "objective": {
        "description": "Minimize the total number of pipes required, which is WidePipes plus NarrowPipes.",
        "formulation": "Min\\ (WidePipes + NarrowPipes)",
        "code": {
            "gurobipy": "model.setObjective(WidePipes + NarrowPipes, GRB.MINIMIZE)"
        }
    }
}