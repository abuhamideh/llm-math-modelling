{
    "parametrized_description": "A car manufacturer produces NumOilTypes different types of car oils using NumSubstances different substances. Each container of oil type requires specific amounts of each substance as defined in SubstanceAmountPerContainer. The manufacturer has AvailableSubstances amounts of each substance available. The profit obtained from each container of oil type is specified in ProfitPerContainer. The objective is to determine the number of containers to produce for each oil type in order to maximize total profit.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "NumOilTypes": {
            "description": "Number of different types of car oils produced",
            "shape": []
        },
        "NumSubstances": {
            "description": "Number of different substances used in the car oils",
            "shape": []
        },
        "ProfitPerContainer": {
            "description": "Profit per container for each type of car oil",
            "shape": [
                "NumOilTypes"
            ]
        },
        "SubstanceAmountPerContainer": {
            "description": "Amount of each substance required per container of each type of car oil",
            "shape": [
                "NumSubstances",
                "NumOilTypes"
            ]
        },
        "AvailableSubstances": {
            "description": "Available amount of each substance",
            "shape": [
                "NumSubstances"
            ]
        }
    },
    "variables": {
        "xOilType": {
            "description": "The number of containers produced for each type of car oil",
            "type": "continuous",
            "shape": [
                "NumOilTypes"
            ]
        }
    },
    "constraints": [
        {
            "description": "The total amount of each substance used across all oil types cannot exceed the available amount of that substance.",
            "formulation": "\\sum_{t=1}^{\\text{NumOilTypes}} \\text{SubstanceAmountPerContainer}_{s,t} \\cdot xOilType_t \\leq \\text{AvailableSubstances}_s \\quad \\forall s = 1, \\dots, \\text{NumSubstances}",
            "code": {
                "gurobipy": "model.addConstrs(\n    (quicksum(SubstanceAmountPerContainer[s][t] * xOilType[t] for t in range(NumOilTypes)) <= AvailableSubstances[s]\n     for s in range(NumSubstances)),\n    name=\"SubstanceLimit\"\n)"
            }
        },
        {
            "description": "The number of containers produced for each oil type must be a non-negative value.",
            "formulation": "xOilType \\geq 0",
            "code": {
                "gurobipy": "model.addConstrs((xOilType[i] >= 0 for i in range(NumOilTypes)), \"NonNegative\")"
            }
        }
    ],
    "objective": {
        "description": "Maximize the total profit obtained from producing the car oil containers by determining the optimal number of containers for each oil type.",
        "formulation": "Max \\sum_{o=1}^{NumOilTypes} ProfitPerContainer_{o} \\cdot xOilType_{o}",
        "code": {
            "gurobipy": "model.setObjective(quicksum(ProfitPerContainer[o] * xOilType[o] for o in range(NumOilTypes)), GRB.MAXIMIZE)"
        }
    }
}