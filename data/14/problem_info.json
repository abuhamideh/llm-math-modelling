{
    "parametrized_description": "An art store produces large and small art pieces. Each large art piece requires PaintPerLarge units of paint, GlitterPerLarge units of glitter, and GluePerLarge units of glue. Each small art piece requires PaintPerSmall units of paint, GlitterPerSmall units of glitter, and GluePerSmall units of glue. The store has AvailablePaint units of paint, AvailableGlitter units of glitter, and AvailableGlue units of glue available. The store must produce at least MinLarge large art pieces and at least MinSmall small art pieces. The objective is to maximize profit, where each large art piece generates ProfitLarge and each small art piece generates ProfitSmall.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "AvailablePaint": {
            "description": "Total units of paint available",
            "shape": []
        },
        "AvailableGlitter": {
            "description": "Total units of glitter available",
            "shape": []
        },
        "AvailableGlue": {
            "description": "Total units of glue available",
            "shape": []
        },
        "PaintPerLarge": {
            "description": "Units of paint required to make one large art piece",
            "shape": []
        },
        "GlitterPerLarge": {
            "description": "Units of glitter required to make one large art piece",
            "shape": []
        },
        "GluePerLarge": {
            "description": "Units of glue required to make one large art piece",
            "shape": []
        },
        "PaintPerSmall": {
            "description": "Units of paint required to make one small art piece",
            "shape": []
        },
        "GlitterPerSmall": {
            "description": "Units of glitter required to make one small art piece",
            "shape": []
        },
        "GluePerSmall": {
            "description": "Units of glue required to make one small art piece",
            "shape": []
        },
        "ProfitLarge": {
            "description": "Profit per large art piece",
            "shape": []
        },
        "ProfitSmall": {
            "description": "Profit per small art piece",
            "shape": []
        },
        "MinLarge": {
            "description": "Minimum number of large art pieces to produce",
            "shape": []
        },
        "MinSmall": {
            "description": "Minimum number of small art pieces to produce",
            "shape": []
        }
    },
    "variables": {
        "NumberLarge": {
            "description": "The number of large art pieces to produce",
            "type": "continuous",
            "shape": []
        },
        "NumberSmall": {
            "description": "The number of small art pieces to produce",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "Each large art piece requires PaintPerLarge units of paint, and each small art piece requires PaintPerSmall units of paint.\nThe total paint used cannot exceed AvailablePaint units.",
            "formulation": "PaintPerLarge \\cdot NumberLarge + PaintPerSmall \\cdot NumberSmall \\leq AvailablePaint",
            "code": {
                "gurobipy": "model.addConstr(PaintPerLarge * NumberLarge + PaintPerSmall * NumberSmall <= AvailablePaint)"
            }
        },
        {
            "description": "Each large art piece requires GlitterPerLarge units of glitter, and each small art piece requires GlitterPerSmall units of glitter.\nThe total glitter used cannot exceed AvailableGlitter units.",
            "formulation": "GlitterPerLarge \\times NumberLarge + GlitterPerSmall \\times NumberSmall \\leq AvailableGlitter",
            "code": {
                "gurobipy": "model.addConstr(GlitterPerLarge * NumberLarge + GlitterPerSmall * NumberSmall <= AvailableGlitter)"
            }
        },
        {
            "description": "Each large art piece requires GluePerLarge units of glue, and each small art piece requires GluePerSmall units of glue.\nThe total glue used cannot exceed AvailableGlue units.",
            "formulation": "GluePerLarge \\cdot NumberLarge + GluePerSmall \\cdot NumberSmall \\leq AvailableGlue",
            "code": {
                "gurobipy": "model.addConstr(GluePerLarge * NumberLarge + GluePerSmall * NumberSmall <= AvailableGlue)"
            }
        },
        {
            "description": "At least MinLarge large art pieces must be produced.",
            "formulation": "NumberLarge \\geq MinLarge",
            "code": {
                "gurobipy": "model.addConstr(NumberLarge >= MinLarge)"
            }
        },
        {
            "description": "At least MinSmall small art pieces must be produced.",
            "formulation": "NumberSmall \\geq MinSmall",
            "code": {
                "gurobipy": "model.addConstr(NumberSmall >= MinSmall)"
            }
        }
    ],
    "objective": {
        "description": "Total profit is the sum of the profits generated by large and small art pieces.\nThe objective is to maximize the total profit.",
        "formulation": "\\text{Max} \\; (ProfitLarge \\times NumberLarge + ProfitSmall \\times NumberSmall)",
        "code": {
            "gurobipy": "model.setObjective(ProfitLarge * NumberLarge + ProfitSmall * NumberSmall, GRB.MAXIMIZE)"
        }
    }
}